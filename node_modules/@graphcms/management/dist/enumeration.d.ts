import { GraphQLBatchMigrationCreateEnumerationInput, GraphQLBatchMigrationUpdateEnumerationInput } from "./generated/schema";
import { MutationMode, PartialBy } from "./util";
import { ChangeItem, MigrationChange } from "./migration";
declare type CreateEnumerationArgs = Omit<PartialBy<GraphQLBatchMigrationCreateEnumerationInput, "values">, "displayName">;
declare type UpdateEnumerationArgs = GraphQLBatchMigrationUpdateEnumerationInput;
declare type EnumerationArgs = CreateEnumerationArgs | UpdateEnumerationArgs;
/**
 * For adding values to an enumeration.
 */
interface EnumerationCreate {
    /**
     * Add values to enumeration.
     * @param apiIds the value(s) for the enumeration.
     */
    addValue(...apiIds: string[]): void;
}
/**
 * For editing values of an enumeration.
 */
interface EnumerationUpdate extends EnumerationCreate {
    /**
     * Update an existing value.
     * @param apiId the apiId to update.
     * @param newApiId the new apiId to set.
     */
    updateValue(apiId: string, newApiId: string): EnumerationUpdate;
    /**
     * Delete values from enumeration.
     * @param apiIds list of apiIds of values to delete from the enumeration.
     */
    deleteValue(...apiIds: string[]): void;
}
/**
 * @ignore
 */
declare class EnumerationClass implements EnumerationCreate, EnumerationUpdate, ChangeItem {
    private mode;
    private args;
    constructor(mode: MutationMode, args: EnumerationArgs);
    addValue(...apiIds: string[]): void;
    updateValue(apiId: string, newApiId: string): EnumerationUpdate;
    deleteValue(...apiIds: string[]): void;
    generateChange(): MigrationChange;
}
export { EnumerationCreate, EnumerationUpdate, EnumerationClass };
