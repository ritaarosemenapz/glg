import { MutationMode, PartialBy, RelationType } from "./util";
import { ChangeItem, ChangeListener, MigrationChange } from "./migration";
import { GraphQLBatchMigrationCreateEnumerableFieldInput, GraphQLBatchMigrationCreateModelInput, GraphQLBatchMigrationCreateRelationalFieldInput, GraphQLBatchMigrationCreateRemoteFieldInput, GraphQLBatchMigrationCreateReverseRelationalFieldInput, GraphQLBatchMigrationCreateReverseUnionFieldInput, GraphQLBatchMigrationCreateSimpleFieldInput, GraphQLBatchMigrationCreateUnionFieldInput, GraphQLBatchMigrationUpdateEnumerableFieldInput, GraphQLBatchMigrationUpdateModelInput, GraphQLBatchMigrationUpdateRelationalFieldInput, GraphQLBatchMigrationUpdateRemoteFieldInput, GraphQLBatchMigrationUpdateSimpleFieldInput, GraphQLBatchMigrationUpdateUnionFieldInput, GraphQLFieldValidationFloatRangeInput, GraphQLFieldValidationIntRangeInput, GraphQLFieldValidationRegExInput } from "./generated/schema";
declare type ModelArgs = GraphQLBatchMigrationCreateModelInput | GraphQLBatchMigrationUpdateModelInput;
/**
 * Relational Fields
 */
interface RelationalFieldArgs extends Omit<GraphQLBatchMigrationCreateRelationalFieldInput, "reverseField" | "isHidden"> {
    relationType: RelationType;
    model: string;
    /**
     * @deprecated Use visibility instead.
     */
    isHidden: GraphQLBatchMigrationCreateRelationalFieldInput["isHidden"];
    reverseField?: Omit<GraphQLBatchMigrationCreateReverseRelationalFieldInput, "modelApiId" | "isList" | "isHidden"> & {
        /**
         * @deprecated Use visibility instead.
         */
        isHidden?: GraphQLBatchMigrationCreateReverseRelationalFieldInput["isHidden"];
    };
}
/**
 * Create Union Field
 */
interface CreateUnionFieldArgs extends Omit<GraphQLBatchMigrationCreateUnionFieldInput, "reverseField" | "isHidden"> {
    relationType: RelationType;
    models: string[];
    /**
     * @deprecated Use visibility instead.
     */
    isHidden: GraphQLBatchMigrationCreateRelationalFieldInput["isHidden"];
    reverseField?: Omit<GraphQLBatchMigrationCreateReverseUnionFieldInput, "modelApiIds" | "isList" | "isHidden"> & {
        /**
         * @deprecated Use visibility instead.
         */
        isHidden?: GraphQLBatchMigrationCreateReverseUnionFieldInput["isHidden"];
    };
}
/**
 * Update Union Field
 */
interface UpdateUnionFieldArgs extends Omit<GraphQLBatchMigrationUpdateUnionFieldInput, "reverseField"> {
    models?: string[];
}
interface FieldValidationArgs {
    range?: GraphQLFieldValidationFloatRangeInput;
    characters?: GraphQLFieldValidationIntRangeInput;
    listItemCount?: GraphQLFieldValidationIntRangeInput;
    matches?: GraphQLFieldValidationRegExInput;
    notMatches?: GraphQLFieldValidationRegExInput;
}
/**
 * Create Simple Field
 */
interface CreateSimpleFieldArgs extends Omit<GraphQLBatchMigrationCreateSimpleFieldInput, "validations" | "modelApiId" | "isHidden"> {
    validations?: FieldValidationArgs;
    /**
     * @deprecated Use visibility instead.
     */
    isHidden?: GraphQLBatchMigrationCreateSimpleFieldInput["isHidden"];
}
interface UpdateSimpleFieldArgs extends Omit<GraphQLBatchMigrationUpdateSimpleFieldInput, "validations" | "modelApiId" | "isHidden"> {
    validations?: FieldValidationArgs;
    /**
     * @deprecated Use visibility instead.
     */
    isHidden?: GraphQLBatchMigrationCreateSimpleFieldInput["isHidden"];
}
interface UpdateRelationalFieldArgs extends Omit<GraphQLBatchMigrationUpdateRelationalFieldInput, "modelApiId" | "isHidden"> {
    /**
     * @deprecated Use visibility instead.
     */
    isHidden?: GraphQLBatchMigrationUpdateRelationalFieldInput["isHidden"];
}
interface CreateEnumerableFieldArgs extends Omit<GraphQLBatchMigrationCreateEnumerableFieldInput, "modelApiId" | "isHidden"> {
    /**
     * @deprecated Use visibility instead.
     */
    isHidden?: GraphQLBatchMigrationCreateEnumerableFieldInput["isHidden"];
}
interface UpdateEnumerableFieldArgs extends Omit<GraphQLBatchMigrationUpdateEnumerableFieldInput, "modelApiId" | "isHidden"> {
    /**
     * @deprecated Use visibility instead.
     */
    isHidden?: GraphQLBatchMigrationUpdateEnumerableFieldInput["isHidden"];
}
interface CreateRemoteFieldArgs extends Omit<GraphQLBatchMigrationCreateRemoteFieldInput, "parentApiId"> {
}
interface UpdateRemoteFieldArgs extends Omit<GraphQLBatchMigrationUpdateRemoteFieldInput, "parentApiId"> {
}
/**
 * GraphCMS Model
 */
interface Model {
    /**
     * Add a new field to the model.
     * @param field options for the field.
     */
    addSimpleField(field: CreateSimpleFieldArgs): Model;
    /**
     * Update an existing field
     * @param field options for the field.
     */
    updateSimpleField(field: UpdateSimpleFieldArgs): Model;
    /**
     * Add a relational field
     * @param field options for the relational field.
     */
    addRelationalField(field: Omit<PartialBy<RelationalFieldArgs, "reverseField" | "type">, "modelApiId">): Model;
    /**
     * Update a relational field
     * @param field options for the relational field.
     */
    updateRelationalField(field: UpdateRelationalFieldArgs): Model;
    /**
     * Add a union field
     * @param field options for the union field.
     */
    addUnionField(field: Omit<PartialBy<CreateUnionFieldArgs, "reverseField">, "modelApiId">): Model;
    /**
     * Update a union field.
     * @param field options for the union field.
     */
    updateUnionField(field: Omit<UpdateUnionFieldArgs, "modelApiId">): Model;
    /**
     * Create an enumerable field.
     * @param field options for the enumerable field.
     */
    addEnumerableField(field: CreateEnumerableFieldArgs): Model;
    /**
     * Update an enumerable field
     * @param field options for the enumerable field.
     */
    updateEnumerableField(field: UpdateEnumerableFieldArgs): Model;
    addRemoteField(field: CreateRemoteFieldArgs): Model;
    /**
     * Update a remote field
     * @param field options for the remote field.
     */
    updateRemoteField(field: UpdateRemoteFieldArgs): Model;
    /**
     * Delete a field
     * @param apiId the apiId of the field to delete.
     */
    deleteField(apiId: string): void;
}
/**
 * @ignore
 */
declare class ModelClass implements Model, ChangeItem {
    private listener;
    private mode;
    private args;
    constructor(listener: ChangeListener, mode: MutationMode, args: ModelArgs);
    addSimpleField(passedFieldArgs: any): Model;
    updateSimpleField(passedFieldArgs: any): Model;
    addRelationalField(passedFieldArgs: any): Model;
    addUnionField(passedFieldArgs: any): Model;
    updateRelationalField(passedFieldArgs: any): Model;
    updateUnionField(passedFieldArgs: any): Model;
    addEnumerableField(passedFieldArgs: any): Model;
    updateEnumerableField(passedFieldArgs: any): Model;
    addRemoteField(passedFieldArgs: any): Model;
    updateRemoteField(passedFieldArgs: any): Model;
    deleteField(apiId: string): Model;
    hasChanges(): boolean;
    generateChange(): MigrationChange;
}
export { Model, ModelClass };
