{"version":3,"file":"management.cjs.development.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/util.ts","../src/field.ts","../src/renderer.ts","../src/generated/schema.ts","../src/model.ts","../src/enumeration.ts","../src/stage.ts","../src/locale.ts","../src/remoteSource.ts","../src/migration.ts","../src/index.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import { GraphQLClient } from \"graphql-request/dist\";\nimport { EnvironmentInfo, MigrationChange, MigrationInfo } from \"./migration\";\nimport { nanoid } from \"nanoid\";\n\n// Credit: https://stackoverflow.com/a/54178819/524060\ntype PartialBy<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;\n\n/**\n * @ignore\n */\nenum MutationMode {\n  Create = 1,\n  Update,\n  Delete,\n}\n\n/**\n * RelationType is the relationship type for Relational and Union Fields.\n */\nenum RelationType {\n  OneToOne = 1,\n  OneToMany,\n  ManyToOne,\n  ManyToMany,\n}\n\n/**\n * @ignore\n * @param client\n * @param endpoint\n */\nasync function fetchEnvironment(\n  client: GraphQLClient,\n  endpoint: string\n): Promise<EnvironmentInfo> {\n  const contentAPIEndpoint = endpoint.replace(\"graphcms.com\", \"hygraph.com\");\n  const query = `\n    {\n      viewer {\n        ... on TokenViewer {\n          project {\n            id\n            environments {\n              id\n              name\n              endpoint\n            }\n          }\n        }\n        ...on UserViewer {\n          projects {\n            id\n            environments {\n              id\n              name\n              endpoint\n            }\n          }\n        }\n      }\n    }\n    `;\n\n  try {\n    const notFound = `environment with endpoint '${contentAPIEndpoint}' not found`;\n    const res = await client.request(query);\n\n    const project = res?.viewer?.project;\n    const projects = res?.viewer?.projects;\n    if (!project && !projects) {\n      return Promise.reject(notFound);\n    }\n    if (projects) {\n      for (const p of projects) {\n        for (const environment of p.environments) {\n          if (environment.endpoint === contentAPIEndpoint) {\n            environment.projectId = p.id;\n            return environment;\n          }\n        }\n      }\n    } else {\n      for (const environment of project.environments) {\n        if (environment.endpoint === contentAPIEndpoint) {\n          environment.projectId = project.id;\n          return environment;\n        }\n      }\n    }\n    return Promise.reject(notFound);\n  } catch (e) {\n    throw new Error(e);\n  }\n}\n\n/**\n * @ignore\n * @param client\n * @param environmentId\n * @param changes\n */\nasync function submitMigration(\n  client: GraphQLClient,\n  body: {\n    environmentId: string;\n    name?: string;\n    changes: MigrationChange[];\n  }\n) {\n  const mutationArgs = [\n    \"$environmentId: ID!\",\n    \"$changes: [BatchMigrationChangeInput!]!\",\n    \"$name: String!\",\n  ];\n  const bodyArgs = [\n    \"environmentId: $environmentId\",\n    \"changes: $changes\",\n    \"name: $name\",\n  ];\n\n  const query = `\n    mutation (${mutationArgs.join(\", \")}) {\n      submitBatchChanges(data: {\n        ${bodyArgs.join(\", \")}\n      }) {\n        migration {\n          id,\n          status,\n          errors,\n        }\n      }\n    }\n  `;\n\n  try {\n    const variables = {\n      changes: body.changes,\n      environmentId: body.environmentId,\n      name: body.name || nanoid(),\n    };\n\n    const res = await client.request(query, variables);\n    const migration = res?.submitBatchChanges?.migration;\n\n    if (!migration) {\n      return Promise.reject({\n        // TODO: have a decent error code.\n        errors: \"unexpected response received\",\n      });\n    }\n\n    if (migration.errors) {\n      return Promise.reject({\n        id: migration.id,\n        errors: migration.errors,\n      });\n    }\n\n    return {\n      id: migration.id,\n      status: migration.status,\n      name: variables.name,\n    };\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\n/**\n * @ignore\n */\ninterface FetchMigrationArgs {\n  projectId: string;\n  migrationId: string;\n  environmentName: string;\n}\n\n/**\n * @ignore\n * @param client\n * @param args\n */\nasync function fetchMigration(\n  client: GraphQLClient,\n  args: FetchMigrationArgs\n): Promise<MigrationInfo> {\n  const query = `\n    query fetchMigration($projectId: ID!, $environmentName: String!, $migrationId: ID!){\n      viewer {\n        project(id: $projectId) {\n          environment(name: $environmentName) {\n            migration(id: $migrationId) {\n              id\n              status\n              errors\n              createdAt\n              finishedAt\n            }\n          }\n        }\n      }\n    }\n   `;\n\n  const variables = {\n    migrationId: args.migrationId,\n    environmentName: args.environmentName,\n    projectId: args.projectId,\n  };\n\n  try {\n    const notFound = `migration with id '${args.migrationId}' not found`;\n    const res = await client.request(query, variables);\n    const migration = res?.viewer?.project?.environment?.migration;\n    if (!migration) {\n      return Promise.reject(notFound);\n    }\n    return migration;\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\nexport {\n  PartialBy,\n  MutationMode,\n  RelationType,\n  fetchEnvironment,\n  fetchMigration,\n  FetchMigrationArgs,\n  submitMigration,\n};\n","import { ChangeItem, MigrationChange } from \"./migration\";\nimport { MutationMode } from \"./util\";\nimport {\n  GraphQLBatchMigrationCreateEnumerableFieldInput,\n  GraphQLBatchMigrationCreateRelationalFieldInput,\n  GraphQLBatchMigrationCreateRemoteFieldInput,\n  GraphQLBatchMigrationCreateSimpleFieldInput,\n  GraphQLBatchMigrationCreateUnionFieldInput,\n  GraphQLBatchMigrationUpdateRelationalFieldInput,\n  GraphQLBatchMigrationUpdateSimpleFieldInput,\n  GraphQLBatchMigrationUpdateUnionFieldInput,\n} from \"./generated/schema\";\n\nexport type FieldArgs =\n  | GraphQLBatchMigrationCreateSimpleFieldInput\n  | GraphQLBatchMigrationUpdateSimpleFieldInput\n  | GraphQLBatchMigrationCreateRelationalFieldInput\n  | GraphQLBatchMigrationUpdateRelationalFieldInput\n  | GraphQLBatchMigrationCreateEnumerableFieldInput\n  | GraphQLBatchMigrationCreateUnionFieldInput\n  | GraphQLBatchMigrationUpdateUnionFieldInput\n  | GraphQLBatchMigrationCreateRemoteFieldInput;\n\nenum FieldType {\n  SimpleField = 1,\n  RelationalField,\n  EnumerableField,\n  UnionField,\n  RemoteField,\n}\n\n/**\n * @ignore\n */\nclass Field implements ChangeItem {\n  constructor(\n    private args: FieldArgs,\n    private mode: MutationMode,\n    private type: FieldType = FieldType.SimpleField\n  ) {}\n\n  generateChange(): MigrationChange {\n    let action: string;\n    const typeStr = FieldType[this.type];\n\n    switch (this.mode) {\n      case MutationMode.Create:\n        action = `create${typeStr}`;\n        break;\n      case MutationMode.Update:\n        action = `update${typeStr}`;\n        break;\n      case MutationMode.Delete:\n        // delete is generic\n        action = `deleteField`;\n        break;\n    }\n\n    const change: { [key: string]: any } = {};\n    change[action] = this.args;\n    return change;\n  }\n}\n\nexport { Field, FieldType };\n","/**\n * Renderers for `Form` or `Table`.\n */\nenum Renderer {\n  Default = \"GCMS\",\n  SingleLine = \"GCMS_SINGLE_LINE\",\n  MultiLine = \"GCMS_MULTI_LINE\",\n  Markdown = \"GCMS_MARKDOWN\",\n  Slug = \"GCMS_SLUG\",\n}\n\nexport { Renderer };\n","export type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = {\n  [K in keyof T]: T[K];\n};\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> &\n  { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> &\n  { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */\n  JSON: any;\n  DateTime: any;\n};\n\nexport enum GraphQLCacheControlScope {\n  Public = \"PUBLIC\",\n  Private = \"PRIVATE\",\n}\n\n/** ### ASSETS: */\nexport type GraphQLIAssetConfig = {\n  apiKey: Scalars[\"String\"];\n};\n\nexport type GraphQLFilestackSecurityOptions = {\n  __typename?: \"FilestackSecurityOptions\";\n  enabled: Scalars[\"Boolean\"];\n  auth?: Maybe<GraphQLFilestackSecurityAuthOptions>;\n  globalExpires: Scalars[\"String\"];\n  stageOverrides: Array<GraphQLStageFilestackSecurityOptions>;\n};\n\nexport type GraphQLFilestackSecurityAuthOptions = {\n  __typename?: \"FilestackSecurityAuthOptions\";\n  policy: Scalars[\"String\"];\n  signature: Scalars[\"String\"];\n};\n\nexport type GraphQLStageFilestackSecurityOptions = {\n  __typename?: \"StageFilestackSecurityOptions\";\n  stage: GraphQLStage;\n  expires: Scalars[\"String\"];\n};\n\nexport type GraphQLFilestack = GraphQLIAssetConfig & {\n  __typename?: \"Filestack\";\n  apiKey: Scalars[\"String\"];\n  path: Scalars[\"String\"];\n  bucket: Scalars[\"String\"];\n  isManagedBucket: Scalars[\"Boolean\"];\n  security: GraphQLFilestackSecurityOptions;\n};\n\nexport type GraphQLCommonFilestackSecurityOptions = {\n  __typename?: \"CommonFilestackSecurityOptions\";\n  enabled: Scalars[\"Boolean\"];\n  auth?: Maybe<GraphQLFilestackSecurityAuthOptions>;\n};\n\nexport type GraphQLCommonFilestack = {\n  __typename?: \"CommonFilestack\";\n  apiKey: Scalars[\"String\"];\n  path: Scalars[\"String\"];\n  security: GraphQLCommonFilestackSecurityOptions;\n};\n\nexport type GraphQLUpdateFilestackSecurityOptionsInput = {\n  environmentId: Scalars[\"ID\"];\n  enabled?: Maybe<Scalars[\"Boolean\"]>;\n  globalExpires?: Maybe<Scalars[\"String\"]>;\n  stageOverrides?: Maybe<\n    Array<GraphQLUpdateStageFilestackSecurityOptionsInput>\n  >;\n};\n\nexport type GraphQLUpdateStageFilestackSecurityOptionsInput = {\n  stageId: Scalars[\"ID\"];\n  expires: Scalars[\"String\"];\n};\n\nexport type GraphQLUpdateFilestackSecurityOptionsPayload = {\n  __typename?: \"UpdateFilestackSecurityOptionsPayload\";\n  updatedEnvironment: GraphQLEnvironment;\n  updatedFilestack: GraphQLFilestack;\n};\n\nexport type GraphQLContentModel = {\n  __typename?: \"ContentModel\";\n  models: Array<GraphQLIModel>;\n  components: Array<GraphQLComponent>;\n  model: GraphQLIModel;\n  component: GraphQLComponent;\n  assetModel: GraphQLIModel;\n  enumerations: Array<GraphQLEnumeration>;\n  locales: Array<GraphQLLocale>;\n  unions: Array<Maybe<GraphQLUnion>>;\n  stages: Array<GraphQLStage>;\n};\n\nexport type GraphQLContentModelModelsArgs = {\n  includeSystemModels?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type GraphQLContentModelComponentsArgs = {\n  includeSystemComponents?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type GraphQLContentModelModelArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLContentModelComponentArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLContentModelEnumerationsArgs = {\n  includeSystemEnumerations?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport enum GraphQLContentViewType {\n  BuiltIn = \"BUILT_IN\",\n  Public = \"PUBLIC\",\n}\n\nexport enum GraphQLColumnOrderByDir {\n  Asc = \"ASC\",\n  Desc = \"DESC\",\n}\n\nexport type GraphQLOrderBy = {\n  __typename?: \"OrderBy\";\n  orderByField: GraphQLIField;\n  orderDir: GraphQLColumnOrderByDir;\n};\n\nexport type GraphQLContentView = {\n  __typename?: \"ContentView\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  name: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  model: GraphQLIModel;\n  type: GraphQLContentViewType;\n  isSystem: Scalars[\"Boolean\"];\n  orderBy?: Maybe<GraphQLOrderBy>;\n  columns: Array<GraphQLContentViewColumn>;\n  viewGroup: GraphQLViewGroup;\n  position?: Maybe<Scalars[\"Int\"]>;\n  filters: Scalars[\"JSON\"];\n};\n\nexport type GraphQLCreateContentViewPayload = {\n  __typename?: \"CreateContentViewPayload\";\n  createdContentView: GraphQLContentView;\n};\n\nexport type GraphQLUpdateContentViewPayload = {\n  __typename?: \"UpdateContentViewPayload\";\n  updatedContentView: GraphQLContentView;\n};\n\nexport type GraphQLMoveContentViewPayload = {\n  __typename?: \"MoveContentViewPayload\";\n  movedContentView: GraphQLContentView;\n  updatedViewGroups: Array<GraphQLViewGroup>;\n};\n\nexport type GraphQLDeleteContentViewPayload = {\n  __typename?: \"DeleteContentViewPayload\";\n  deletedContentViewId: Scalars[\"ID\"];\n};\n\nexport type GraphQLContentViewColumn = {\n  __typename?: \"ContentViewColumn\";\n  id: Scalars[\"ID\"];\n  field: GraphQLIField;\n  isVisible: Scalars[\"Boolean\"];\n  width?: Maybe<Scalars[\"Int\"]>;\n  position: Scalars[\"Int\"];\n};\n\nexport type GraphQLContentViewFilterInput = {\n  skip?: Maybe<Scalars[\"Int\"]>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  search?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLOrderByInput = {\n  orderByField: Scalars[\"ID\"];\n  orderDir: GraphQLColumnOrderByDir;\n};\n\nexport type GraphQLContentViewColumnInput = {\n  fieldId: Scalars[\"ID\"];\n  isVisible: Scalars[\"Boolean\"];\n  width?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type GraphQLCreateContentViewInput = {\n  name: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  modelId: Scalars[\"ID\"];\n  columns: Array<GraphQLContentViewColumnInput>;\n  orderBy?: Maybe<GraphQLOrderByInput>;\n  viewGroupId?: Maybe<Scalars[\"ID\"]>;\n  filters?: Maybe<Scalars[\"JSON\"]>;\n};\n\nexport type GraphQLUpdateContentViewInput = {\n  id: Scalars[\"ID\"];\n  name: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  columns: Array<GraphQLContentViewColumnInput>;\n  orderBy?: Maybe<GraphQLOrderByInput>;\n  viewGroupId?: Maybe<Scalars[\"ID\"]>;\n  filters?: Maybe<Scalars[\"JSON\"]>;\n};\n\nexport type GraphQLMoveContentViewInput = {\n  id: Scalars[\"ID\"];\n  viewGroupId: Scalars[\"ID\"];\n  position: Scalars[\"Int\"];\n};\n\nexport type GraphQLDeleteContentViewInput = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLInvite = {\n  __typename?: \"Invite\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  expirationDate: Scalars[\"DateTime\"];\n  email: Scalars[\"String\"];\n  code: Scalars[\"String\"];\n  issuer?: Maybe<GraphQLMember>;\n  project: GraphQLProject;\n  acceptedAt?: Maybe<Scalars[\"DateTime\"]>;\n  roles: Array<GraphQLRole>;\n  origin?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLSendInviteInput = {\n  email: Scalars[\"String\"];\n  projectId: Scalars[\"ID\"];\n  roleIds: Array<Scalars[\"ID\"]>;\n  origin?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLRevokeInviteInput = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLAcceptInviteInput = {\n  code: Scalars[\"String\"];\n};\n\nexport type GraphQLSendInvitePayload = {\n  __typename?: \"SendInvitePayload\";\n  invite: GraphQLInvite;\n};\n\nexport type GraphQLRevokeInvitePayload = {\n  __typename?: \"RevokeInvitePayload\";\n  revokedInviteId: Scalars[\"ID\"];\n};\n\nexport type GraphQLAcceptInvitePayload = {\n  __typename?: \"AcceptInvitePayload\";\n  invite: GraphQLInvite;\n};\n\nexport enum GraphQLLimitType {\n  Roles = \"ROLES\",\n  Locales = \"LOCALES\",\n  Environments = \"ENVIRONMENTS\",\n  Webhooks = \"WEBHOOKS\",\n  Models = \"MODELS\",\n  Records = \"RECORDS\",\n  AssetTraffic = \"ASSET_TRAFFIC\",\n  ApiOperations = \"API_OPERATIONS\",\n  Seats = \"SEATS\",\n  WorkflowSteps = \"WORKFLOW_STEPS\",\n  Integrations = \"INTEGRATIONS\",\n  Versions = \"VERSIONS\",\n  VersionRetentionPeriod = \"VERSION_RETENTION_PERIOD\",\n  ContentModels = \"CONTENT_MODELS\",\n  ContentStages = \"CONTENT_STAGES\",\n  AuditLogsRetentionPeriod = \"AUDIT_LOGS_RETENTION_PERIOD\",\n  RemoteSources = \"REMOTE_SOURCES\",\n  RemoteFields = \"REMOTE_FIELDS\",\n  RemoteFieldsMaxExecutionTime = \"REMOTE_FIELDS_MAX_EXECUTION_TIME\",\n  RemoteFieldsMaxResponseSize = \"REMOTE_FIELDS_MAX_RESPONSE_SIZE\",\n  RemoteFieldsHttpWorkers = \"REMOTE_FIELDS_HTTP_WORKERS\",\n  RateLimitPerSecond = \"RATE_LIMIT_PER_SECOND\",\n  ContentPermissions = \"CONTENT_PERMISSIONS\",\n  PermanentAuthTokens = \"PERMANENT_AUTH_TOKENS\",\n  SchedulingPendingReleases = \"SCHEDULING_PENDING_RELEASES\",\n  SchedulingPendingOperations = \"SCHEDULING_PENDING_OPERATIONS\",\n  SchedulingOperationsInRelease = \"SCHEDULING_OPERATIONS_IN_RELEASE\",\n}\n\nexport type GraphQLLimit = {\n  __typename?: \"Limit\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  name: Scalars[\"String\"];\n  type: GraphQLLimitType;\n  amount?: Maybe<Scalars[\"Float\"]>;\n  addOnCode?: Maybe<Scalars[\"String\"]>;\n  plan: GraphQLPlan;\n};\n\nexport type GraphQLMetaInfo = {\n  __typename?: \"MetaInfo\";\n  serverVersion: Scalars[\"String\"];\n};\n\nexport type GraphQLStats = {\n  __typename?: \"Stats\";\n  time: Scalars[\"DateTime\"];\n  value: Scalars[\"Float\"];\n};\n\nexport type GraphQLMetrics = {\n  __typename?: \"Metrics\";\n  /** The number of API operations */\n  apiOperations: Array<GraphQLStats>;\n  /** The asset traffic in Byte */\n  assetTraffic: Array<GraphQLStats>;\n  /** The number of used asset transformations */\n  assetTransformations: Array<GraphQLStats>;\n};\n\nexport type GraphQLMetricsApiOperationsArgs = {\n  start: Scalars[\"DateTime\"];\n  end: Scalars[\"DateTime\"];\n  resolution: Scalars[\"Int\"];\n};\n\nexport type GraphQLMetricsAssetTrafficArgs = {\n  start: Scalars[\"DateTime\"];\n  end: Scalars[\"DateTime\"];\n};\n\nexport type GraphQLMetricsAssetTransformationsArgs = {\n  start: Scalars[\"DateTime\"];\n  end: Scalars[\"DateTime\"];\n};\n\nexport type GraphQLPaymentAccount = {\n  __typename?: \"PaymentAccount\";\n  id: Scalars[\"ID\"];\n  accountName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  isClosed: Scalars[\"Boolean\"];\n  isMain: Scalars[\"Boolean\"];\n  hostedPageUrl?: Maybe<Scalars[\"String\"]>;\n  hostedBillingUrl?: Maybe<Scalars[\"String\"]>;\n  accountManagementUrl?: Maybe<Scalars[\"String\"]>;\n  user: GraphQLIUser;\n  paymentSubscriptions: Array<GraphQLPaymentSubscription>;\n};\n\nexport type GraphQLPaymentAccountHostedPageUrlArgs = {\n  planName: Scalars[\"String\"];\n  projectId: Scalars[\"ID\"];\n};\n\nexport type GraphQLStartTrialPayload = {\n  __typename?: \"StartTrialPayload\";\n  project: GraphQLProject;\n};\n\nexport type GraphQLLeaveTrialPayload = {\n  __typename?: \"LeaveTrialPayload\";\n  project: GraphQLProject;\n};\n\nexport type GraphQLBillingPeriod = {\n  __typename?: \"BillingPeriod\";\n  from: Scalars[\"DateTime\"];\n  to: Scalars[\"DateTime\"];\n};\n\nexport type GraphQLPaymentSubscription = {\n  __typename?: \"PaymentSubscription\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  renewsAt?: Maybe<Scalars[\"DateTime\"]>;\n  projects: Array<GraphQLProject>;\n  identifier?: Maybe<Scalars[\"String\"]>;\n  paymentAccount: GraphQLPaymentAccount;\n  plan: GraphQLPlan;\n  billingPeriod: GraphQLBillingPeriod;\n  isCanceled: Scalars[\"Boolean\"];\n};\n\nexport type GraphQLSwitchPaymentSubscriptionInput = {\n  planName: Scalars[\"String\"];\n  subscriptionId: Scalars[\"ID\"];\n};\n\nexport type GraphQLSwitchPaymentSubscriptionPayload = {\n  __typename?: \"SwitchPaymentSubscriptionPayload\";\n  subscription: GraphQLPaymentSubscription;\n  project: GraphQLProject;\n};\n\nexport type GraphQLStartTrialInput = {\n  projectId: Scalars[\"ID\"];\n  planId: Scalars[\"ID\"];\n};\n\nexport type GraphQLLeaveTrialInput = {\n  projectId: Scalars[\"ID\"];\n};\n\n/** ### TOKENS: */\nexport enum GraphQLPermanentAuthTokenAudience {\n  ContentApi = \"CONTENT_API\",\n  ManagementApi = \"MANAGEMENT_API\",\n}\n\nexport type GraphQLPermanentAuthToken = {\n  __typename?: \"PermanentAuthToken\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  name: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  token: Scalars[\"String\"];\n  defaults: GraphQLPermanentAuthTokenDefaults;\n  contentPermissions: Array<GraphQLIContentPermission>;\n  managementPermissions: Array<GraphQLManagementPermission>;\n};\n\nexport type GraphQLPermanentAuthTokenDefaults = {\n  __typename?: \"PermanentAuthTokenDefaults\";\n  stage: GraphQLStage;\n};\n\nexport type GraphQLManagementPermission = {\n  __typename?: \"ManagementPermission\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  action: GraphQLPermissionAction;\n};\n\nexport type GraphQLCreatePermanentAuthTokenPayload = {\n  __typename?: \"CreatePermanentAuthTokenPayload\";\n  createdPermanentAuthToken: GraphQLPermanentAuthToken;\n};\n\nexport type GraphQLUpdatePermanentAuthTokenPayload = {\n  __typename?: \"UpdatePermanentAuthTokenPayload\";\n  updatedPermanentAuthToken: GraphQLPermanentAuthToken;\n};\n\nexport type GraphQLDeletePermanentAuthTokenPayload = {\n  __typename?: \"DeletePermanentAuthTokenPayload\";\n  deletedPermanentAuthTokenId: Scalars[\"ID\"];\n};\n\nexport enum GraphQLPermissionAction {\n  /**\n   * Project-level\n   * Virtual permission used to perform a project ownership check\n   */\n  ProjectClone = \"PROJECT_CLONE\",\n  ProjectUpdate = \"PROJECT_UPDATE\",\n  /** Virtual permission used to perform a project ownership check */\n  ProjectDelete = \"PROJECT_DELETE\",\n  /** Virtual permission used to perform a project ownership check */\n  ManagePayment = \"MANAGE_PAYMENT\",\n  PlaygroundUse = \"PLAYGROUND_USE\",\n  AuditLogsRead = \"AUDIT_LOGS_READ\",\n  /** View Permissions that need to be moved to a new concept eventually */\n  ViewTeamMemberSettings = \"VIEW_TEAM_MEMBER_SETTINGS\",\n  ViewRolePermissionSettings = \"VIEW_ROLE_PERMISSION_SETTINGS\",\n  ViewSchema = \"VIEW_SCHEMA\",\n  /** Environments */\n  EnvironmentCreate = \"ENVIRONMENT_CREATE\",\n  EnvironmentRead = \"ENVIRONMENT_READ\",\n  EnvironmentUpdate = \"ENVIRONMENT_UPDATE\",\n  EnvironmentDelete = \"ENVIRONMENT_DELETE\",\n  EnvironmentPromote = \"ENVIRONMENT_PROMOTE\",\n  /** Models */\n  ModelCreate = \"MODEL_CREATE\",\n  ModelRead = \"MODEL_READ\",\n  ModelUpdate = \"MODEL_UPDATE\",\n  ModelDelete = \"MODEL_DELETE\",\n  /** Components */\n  ComponentCreate = \"COMPONENT_CREATE\",\n  ComponentRead = \"COMPONENT_READ\",\n  ComponentUpdate = \"COMPONENT_UPDATE\",\n  ComponentDelete = \"COMPONENT_DELETE\",\n  /** Locales */\n  LocaleCreate = \"LOCALE_CREATE\",\n  LocaleRead = \"LOCALE_READ\",\n  LocaleUpdate = \"LOCALE_UPDATE\",\n  LocaleDelete = \"LOCALE_DELETE\",\n  /** Stages */\n  StageCreate = \"STAGE_CREATE\",\n  StageRead = \"STAGE_READ\",\n  StageUpdate = \"STAGE_UPDATE\",\n  StageDelete = \"STAGE_DELETE\",\n  /** Enumerations */\n  EnumerationCreate = \"ENUMERATION_CREATE\",\n  EnumerationRead = \"ENUMERATION_READ\",\n  EnumerationUpdate = \"ENUMERATION_UPDATE\",\n  EnumerationDelete = \"ENUMERATION_DELETE\",\n  /** Fields */\n  FieldCreate = \"FIELD_CREATE\",\n  FieldRead = \"FIELD_READ\",\n  FieldUpdate = \"FIELD_UPDATE\",\n  FieldDelete = \"FIELD_DELETE\",\n  /** Remote Sources */\n  RemoteSourceCreate = \"REMOTE_SOURCE_CREATE\",\n  RemoteSourceRead = \"REMOTE_SOURCE_READ\",\n  RemoteSourceUpdate = \"REMOTE_SOURCE_UPDATE\",\n  RemoteSourceDelete = \"REMOTE_SOURCE_DELETE\",\n  /** PATs */\n  PatCreate = \"PAT_CREATE\",\n  PatRead = \"PAT_READ\",\n  PatUpdate = \"PAT_UPDATE\",\n  PatDelete = \"PAT_DELETE\",\n  /** Content Views */\n  ContentviewCreate = \"CONTENTVIEW_CREATE\",\n  ContentviewRead = \"CONTENTVIEW_READ\",\n  ContentviewUpdate = \"CONTENTVIEW_UPDATE\",\n  ContentviewSystemUpdate = \"CONTENTVIEW_SYSTEM_UPDATE\",\n  ContentviewDelete = \"CONTENTVIEW_DELETE\",\n  /** Project Storage Buckets */\n  StorageBucketCreate = \"STORAGE_BUCKET_CREATE\",\n  StorageBucketRead = \"STORAGE_BUCKET_READ\",\n  StorageBucketUpdate = \"STORAGE_BUCKET_UPDATE\",\n  StorageBucketDelete = \"STORAGE_BUCKET_DELETE\",\n  /** Roles */\n  RoleCreate = \"ROLE_CREATE\",\n  RoleUpdate = \"ROLE_UPDATE\",\n  RoleDelete = \"ROLE_DELETE\",\n  /** Webhooks */\n  WebhookCreate = \"WEBHOOK_CREATE\",\n  WebhookRead = \"WEBHOOK_READ\",\n  WebhookUpdate = \"WEBHOOK_UPDATE\",\n  WebhookDelete = \"WEBHOOK_DELETE\",\n  /** Users */\n  UserInvite = \"USER_INVITE\",\n  UserAssignrole = \"USER_ASSIGNROLE\",\n  UserRemove = \"USER_REMOVE\",\n  /** View Groups */\n  ViewGroupCreate = \"VIEW_GROUP_CREATE\",\n  ViewGroupRead = \"VIEW_GROUP_READ\",\n  ViewGroupUpdate = \"VIEW_GROUP_UPDATE\",\n  ViewGroupDelete = \"VIEW_GROUP_DELETE\",\n  /**\n   * deprecated!\n   * Content (actual Content API permission)\n   */\n  ContentCreate = \"CONTENT_CREATE\",\n  ContentRead = \"CONTENT_READ\",\n  ContentUpdate = \"CONTENT_UPDATE\",\n  ContentDelete = \"CONTENT_DELETE\",\n  ContentPublish = \"CONTENT_PUBLISH\",\n  ContentUpdatePublished = \"CONTENT_UPDATE_PUBLISHED\",\n  /** Content Permissions */\n  ContentPermissionCreate = \"CONTENT_PERMISSION_CREATE\",\n  ContentPermissionRead = \"CONTENT_PERMISSION_READ\",\n  ContentPermissionUpdate = \"CONTENT_PERMISSION_UPDATE\",\n  ContentPermissionDelete = \"CONTENT_PERMISSION_DELETE\",\n  /** Integration */\n  IntegrationCreate = \"INTEGRATION_CREATE\",\n  IntegrationRead = \"INTEGRATION_READ\",\n  IntegrationUpdate = \"INTEGRATION_UPDATE\",\n  IntegrationDelete = \"INTEGRATION_DELETE\",\n  NetlifyTriggerBuild = \"NETLIFY_TRIGGER_BUILD\",\n  VercelTriggerBuild = \"VERCEL_TRIGGER_BUILD\",\n  /** Extension */\n  ExtensionCreate = \"EXTENSION_CREATE\",\n  ExtensionRead = \"EXTENSION_READ\",\n  ExtensionUpdate = \"EXTENSION_UPDATE\",\n  ExtensionDelete = \"EXTENSION_DELETE\",\n  /** App */\n  AppCreate = \"APP_CREATE\",\n  AppUpdate = \"APP_UPDATE\",\n  AppDelete = \"APP_DELETE\",\n  /** App Installation */\n  AppInstallationCreate = \"APP_INSTALLATION_CREATE\",\n  AppInstallationUpdate = \"APP_INSTALLATION_UPDATE\",\n  AppInstallationDelete = \"APP_INSTALLATION_DELETE\",\n}\n\nexport type GraphQLPermanentAuthTokenDefaultsInput = {\n  stage: Scalars[\"ID\"];\n};\n\nexport type GraphQLCreatePermanentAuthTokenInput = {\n  environmentId: Scalars[\"ID\"];\n  name: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  defaults?: Maybe<GraphQLPermanentAuthTokenDefaultsInput>;\n  managementPermissionIds?: Maybe<Array<Scalars[\"ID\"]>>;\n};\n\nexport type GraphQLUpdatePermanentAuthTokenInput = {\n  id: Scalars[\"ID\"];\n  name?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  defaults?: Maybe<GraphQLPermanentAuthTokenDefaultsInput>;\n  managementPermissionIds?: Maybe<Array<Scalars[\"ID\"]>>;\n};\n\nexport type GraphQLDeletePermanentAuthTokenInput = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLUpdatePublicEndpointInput = {\n  environmentId: Scalars[\"ID\"];\n  defaults?: Maybe<GraphQLUpdatePublicEndpointDefaultsInput>;\n};\n\nexport type GraphQLUpdatePublicEndpointDefaultsInput = {\n  stage: Scalars[\"ID\"];\n};\n\nexport type GraphQLUpdatePublicPermissionInput = {\n  allowMutations: Scalars[\"Boolean\"];\n  allowQueriesOnStages: Array<Scalars[\"ID\"]>;\n};\n\nexport type GraphQLUpdatePublicPermissionsPayload = {\n  __typename?: \"UpdatePublicPermissionsPayload\";\n  environment: GraphQLEnvironment;\n};\n\nexport type GraphQLPlan = {\n  __typename?: \"Plan\";\n  id: Scalars[\"ID\"];\n  name: Scalars[\"String\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  displayName: Scalars[\"String\"];\n  price: Scalars[\"Float\"];\n  isFree: Scalars[\"Boolean\"];\n  limits: Array<GraphQLLimit>;\n  isSwitchable?: Maybe<Scalars[\"Boolean\"]>;\n  isEnterprise: Scalars[\"Boolean\"];\n  billingPeriodMonths: Scalars[\"Int\"];\n};\n\nexport type GraphQLPlanIsSwitchableArgs = {\n  projectId: Scalars[\"ID\"];\n};\n\nexport type GraphQLAuditLogWhereInput = {\n  timestamp?: Maybe<Scalars[\"DateTime\"]>;\n  timestamp_lt?: Maybe<Scalars[\"DateTime\"]>;\n  timestamp_gt?: Maybe<Scalars[\"DateTime\"]>;\n  timestamp_lte?: Maybe<Scalars[\"DateTime\"]>;\n  timestamp_gte?: Maybe<Scalars[\"DateTime\"]>;\n  triggeredBy?: Maybe<Scalars[\"String\"]>;\n  action?: Maybe<GraphQLAuditLogAction>;\n  triggerType?: Maybe<GraphQLAuditLogTriggerType>;\n  environmentName?: Maybe<Scalars[\"String\"]>;\n  entityId?: Maybe<Scalars[\"String\"]>;\n  resource?: Maybe<GraphQLAuditLogResource>;\n};\n\nexport enum GraphQLAuditLogOrderByInput {\n  TimestampAsc = \"timestamp_ASC\",\n  TimestampDesc = \"timestamp_DESC\",\n}\n\nexport enum GraphQLAuditLogResource {\n  Project = \"PROJECT\",\n  Environment = \"ENVIRONMENT\",\n  Model = \"MODEL\",\n  Stage = \"STAGE\",\n  Locale = \"LOCALE\",\n  Pat = \"PAT\",\n  Enumeration = \"ENUMERATION\",\n  Field = \"FIELD\",\n  Content = \"CONTENT\",\n  Webhook = \"WEBHOOK\",\n  Member = \"MEMBER\",\n  Role = \"ROLE\",\n  Viewgroup = \"VIEWGROUP\",\n  Contentview = \"CONTENTVIEW\",\n  Extension = \"EXTENSION\",\n  EnumerationValue = \"ENUMERATION_VALUE\",\n  Invite = \"INVITE\",\n  Component = \"COMPONENT\",\n}\n\nexport enum GraphQLAuditLogAction {\n  Create = \"CREATE\",\n  Update = \"UPDATE\",\n  Delete = \"DELETE\",\n  Publish = \"PUBLISH\",\n  Unpublish = \"UNPUBLISH\",\n  Accept = \"ACCEPT\",\n}\n\nexport enum GraphQLAuditLogTriggerType {\n  User = \"USER\",\n  Pat = \"PAT\",\n  ThirdParty = \"THIRD_PARTY\",\n  Open = \"OPEN\",\n}\n\nexport type GraphQLAuditLogTriggeredBy =\n  | GraphQLPermanentAuthToken\n  | GraphQLMember;\n\nexport type GraphQLAuditLog = {\n  __typename?: \"AuditLog\";\n  id: Scalars[\"String\"];\n  entityId?: Maybe<Scalars[\"String\"]>;\n  timestamp: Scalars[\"DateTime\"];\n  resource: GraphQLAuditLogResource;\n  action: GraphQLAuditLogAction;\n  environmentName?: Maybe<Scalars[\"String\"]>;\n  payload?: Maybe<Scalars[\"JSON\"]>;\n  triggeredBy?: Maybe<GraphQLAuditLogTriggeredBy>;\n  triggerType: GraphQLAuditLogTriggerType;\n};\n\nexport type GraphQLAuditLogsPayload = {\n  __typename?: \"AuditLogsPayload\";\n  logs: Array<GraphQLAuditLog>;\n  total: Scalars[\"Float\"];\n};\n\nexport enum GraphQLLifecycleStepType {\n  SchemaSetup = \"SCHEMA_SETUP\",\n  ContentAdded = \"CONTENT_ADDED\",\n  ExploreContentApi = \"EXPLORE_CONTENT_API\",\n  ApiPermissionsSet = \"API_PERMISSIONS_SET\",\n  ExternalTraffic = \"EXTERNAL_TRAFFIC\",\n}\n\nexport type GraphQLLifecycleStep = {\n  __typename?: \"LifecycleStep\";\n  name: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  done: Scalars[\"Boolean\"];\n  type: GraphQLLifecycleStepType;\n};\n\nexport type GraphQLLifecycle = {\n  __typename?: \"Lifecycle\";\n  steps?: Maybe<Array<GraphQLLifecycleStep>>;\n  progress: Scalars[\"Float\"];\n};\n\nexport type GraphQLMembersAggregate = {\n  __typename?: \"MembersAggregate\";\n  count: Scalars[\"Int\"];\n};\n\nexport type GraphQLPageInfo = {\n  __typename?: \"PageInfo\";\n  hasNextPage: Scalars[\"Boolean\"];\n  hasPreviousPage: Scalars[\"Boolean\"];\n  pageSize: Scalars[\"Int\"];\n};\n\nexport type GraphQLMembersConnection = {\n  __typename?: \"MembersConnection\";\n  pageInfo: GraphQLPageInfo;\n  edges: Array<GraphQLMemberEdge>;\n  aggregate: GraphQLMembersAggregate;\n};\n\nexport type GraphQLMemberEdge = {\n  __typename?: \"MemberEdge\";\n  node: GraphQLMember;\n};\n\nexport type GraphQLProject = {\n  __typename?: \"Project\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  name: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  picture?: Maybe<Scalars[\"String\"]>;\n  subscription: GraphQLPaymentSubscription;\n  invites: Array<GraphQLInvite>;\n  owner: GraphQLMember;\n  /** Will be null if viewer is not a user */\n  viewerAsMember?: Maybe<GraphQLMember>;\n  region: GraphQLRegion;\n  existingRoles: Array<GraphQLRole>;\n  existingRole: GraphQLRole;\n  environments: Array<GraphQLEnvironment>;\n  environment: GraphQLEnvironment;\n  /** List of all members of the given project */\n  members: Array<GraphQLMember>;\n  membersConnection: GraphQLMembersConnection;\n  quotas: GraphQLQuota;\n  lifecycle: GraphQLLifecycle;\n  inTrial?: Maybe<Scalars[\"Boolean\"]>;\n  trialExpiresIn?: Maybe<Scalars[\"DateTime\"]>;\n  isCloning?: Maybe<Scalars[\"Boolean\"]>;\n  meta: Scalars[\"JSON\"];\n  auditLogs: GraphQLAuditLogsPayload;\n  /** List all Permissions usable/assignable to roles in this project */\n  availableManagementPermissions: Array<GraphQLManagementPermission>;\n  cloningProjects: Array<GraphQLCloningProject>;\n  /** if this is `null` it means the project is not publicly clone-able */\n  publicCloneAccess?: Maybe<GraphQLPublicCloneAccess>;\n};\n\nexport type GraphQLProjectExistingRoleArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLProjectEnvironmentArgs = {\n  name: Scalars[\"String\"];\n};\n\nexport type GraphQLProjectMembersConnectionArgs = {\n  skip?: Scalars[\"Int\"];\n  first?: Scalars[\"Int\"];\n};\n\nexport type GraphQLProjectAuditLogsArgs = {\n  where?: Maybe<GraphQLAuditLogWhereInput>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  skip?: Maybe<Scalars[\"Int\"]>;\n  orderBy?: Maybe<GraphQLAuditLogOrderByInput>;\n};\n\nexport type GraphQLPublicCloneAccess = {\n  __typename?: \"PublicCloneAccess\";\n  id: Scalars[\"ID\"];\n  enabled: Scalars[\"Boolean\"];\n  includeContent: Scalars[\"Boolean\"];\n  includeWebhooks: Scalars[\"Boolean\"];\n};\n\nexport type GraphQLDeleteProjectPayload = {\n  __typename?: \"DeleteProjectPayload\";\n  deletedProjectId: Scalars[\"ID\"];\n};\n\nexport type GraphQLLeaveProjectPayload = {\n  __typename?: \"LeaveProjectPayload\";\n  leftProjectId: Scalars[\"ID\"];\n};\n\nexport type GraphQLTemplateResourceInput = {\n  title: Scalars[\"String\"];\n  url: Scalars[\"String\"];\n};\n\nexport type GraphQLTechnologyStackInput = {\n  image: Scalars[\"String\"];\n  title: Scalars[\"String\"];\n  url?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLUpsertTemplateInput = {\n  gcms?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLUpsertTemplatePayload = {\n  __typename?: \"UpsertTemplatePayload\";\n  gcms?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLMaxComplexityInput = {\n  gcms?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLMaxComplexityPayload = {\n  __typename?: \"MaxComplexityPayload\";\n  gcms?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQL_UpdatePlanTrialInput = {\n  gcms?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQL_UpdatePlanTrialPayload = {\n  __typename?: \"_UpdatePlanTrialPayload\";\n  gcms?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQL_SwitchOwnerInput = {\n  gcms?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQL_SwitchOwnerPayload = {\n  __typename?: \"_SwitchOwnerPayload\";\n  gcms?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQL_ResetContentConfigInput = {\n  gcms?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQL_ResetContentConfigPayload = {\n  __typename?: \"_ResetContentConfigPayload\";\n  gcms?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQL_BookOverLimitInput = {\n  gcms?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQL_BookOverLimitAddonUsage = {\n  __typename?: \"_BookOverLimitAddonUsage\";\n  gcms?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQL_OverLimitProjectUsage = {\n  __typename?: \"_OverLimitProjectUsage\";\n  gcms?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQL_OverLimitProjectAddonsValues = {\n  __typename?: \"_OverLimitProjectAddonsValues\";\n  gcms?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQL_OverLimitProjectAddons = {\n  __typename?: \"_OverLimitProjectAddons\";\n  gcms?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQL_OverLimitProject = {\n  __typename?: \"_OverLimitProject\";\n  gcms?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQL_BookOverLimitPayload = {\n  __typename?: \"_BookOverLimitPayload\";\n  gcms?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLLeaveProjectInput = {\n  id: Scalars[\"ID\"];\n};\n\n/** create project from a template */\nexport type GraphQLCreateProjectTemplateInput = {\n  /** id of template (if it's marked as template) or id of a project you are an owner of */\n  templateId: Scalars[\"ID\"];\n  /** Set to false to not include content */\n  content?: Scalars[\"Boolean\"];\n  /** Set to true to include webhooks. If webhooks are included, they will be disabled initially in the created project. */\n  webhooks?: Scalars[\"Boolean\"];\n};\n\n/** clone project from a template */\nexport type GraphQLCloneProjectTemplateInput = {\n  /** id of template (if it's marked as template) or id of a project you are an owner of */\n  templateId: Scalars[\"ID\"];\n  /** Set to false to not include content */\n  content?: Scalars[\"Boolean\"];\n  /** Set to true to include webhooks. If webhooks are included, they will be disabled initially in the cloned project. */\n  webhooks?: Scalars[\"Boolean\"];\n};\n\nexport type GraphQLCloneProjectInput = {\n  region: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  /** required to clone from a template or a project you are an owner of */\n  template: GraphQLCloneProjectTemplateInput;\n};\n\n/** This is used to clone a project that someone made publicly clone-able. */\nexport type GraphQLClonePublicProjectInput = {\n  region: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  /** Usually extracted from the public clone url. */\n  publicCloneAccessId: Scalars[\"ID\"];\n};\n\nexport type GraphQLCreateProjectInput = {\n  region: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  /** optional argument used for creating the project from a template or a project you are an owner of */\n  template?: Maybe<GraphQLCreateProjectTemplateInput>;\n};\n\nexport type GraphQLUpdatePublicCloneAccessInput = {\n  enabled: Scalars[\"Boolean\"];\n  includeContent: Scalars[\"Boolean\"];\n  includeWebhooks: Scalars[\"Boolean\"];\n};\n\nexport type GraphQLUpdateProjectInput = {\n  id: Scalars[\"ID\"];\n  name?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  picture?: Maybe<Scalars[\"String\"]>;\n  publicCloneAccess?: Maybe<GraphQLUpdatePublicCloneAccessInput>;\n};\n\nexport type GraphQLDeleteProjectInput = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLProgress = {\n  __typename?: \"Progress\";\n  current: Scalars[\"Float\"];\n  max?: Maybe<Scalars[\"Float\"]>;\n  percent?: Maybe<Scalars[\"Float\"]>;\n  estimate?: Maybe<Scalars[\"Float\"]>;\n};\n\nexport type GraphQLQuota = {\n  __typename?: \"Quota\";\n  apiOperations: GraphQLProgress;\n  assetTraffic: GraphQLProgress;\n  records: GraphQLProgress;\n  seats: GraphQLProgress;\n  environments: GraphQLProgress;\n  roles: GraphQLProgress;\n};\n\nexport type GraphQLEnvironmentLevelQuota = {\n  __typename?: \"EnvironmentLevelQuota\";\n  locales: GraphQLProgress;\n  webhooks: GraphQLProgress;\n  models: GraphQLProgress;\n  stages: GraphQLProgress;\n  contentPermissions: GraphQLProgress;\n  remoteSources: GraphQLProgress;\n};\n\nexport type GraphQLRegion = {\n  __typename?: \"Region\";\n  id: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n  isBeta: Scalars[\"Boolean\"];\n  pingUrl?: Maybe<Scalars[\"String\"]>;\n  isReadOnly: Scalars[\"Boolean\"];\n};\n\nexport type GraphQLDeleteRolePayload = {\n  __typename?: \"DeleteRolePayload\";\n  deletedId: Scalars[\"ID\"];\n};\n\nexport type GraphQLRole = {\n  __typename?: \"Role\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  isDefault: Scalars[\"Boolean\"];\n  name: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  /**\n   * Returns contentPermissions for a role.\n   * Optionally filtered by environment.\n   */\n  contentPermissions: Array<GraphQLIContentPermission>;\n  managementPermissions: Array<GraphQLManagementPermission>;\n  /** List of all members that have at least this role */\n  members: Array<GraphQLMember>;\n  membersConnection: GraphQLMembersConnection;\n};\n\nexport type GraphQLRoleContentPermissionsArgs = {\n  environmentId?: Maybe<Scalars[\"ID\"]>;\n};\n\nexport type GraphQLRoleMembersConnectionArgs = {\n  skip?: Scalars[\"Int\"];\n  first?: Scalars[\"Int\"];\n};\n\nexport type GraphQLCreateRoleInput = {\n  projectId: Scalars[\"ID\"];\n  name: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  managementPermissionIds?: Maybe<Array<Scalars[\"ID\"]>>;\n};\n\nexport type GraphQLUpdateRoleInput = {\n  id: Scalars[\"ID\"];\n  name?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  managementPermissionIds?: Maybe<Array<Scalars[\"ID\"]>>;\n};\n\nexport type GraphQLDeleteRoleInput = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLContentPermissionRoleTarget = {\n  __typename?: \"ContentPermissionRoleTarget\";\n  role: GraphQLRole;\n  environment: GraphQLEnvironment;\n};\n\nexport type GraphQLContentPermissionPermanentAuthTokenTarget = {\n  __typename?: \"ContentPermissionPermanentAuthTokenTarget\";\n  permanentAuthToken: GraphQLPermanentAuthToken;\n};\n\nexport type GraphQLContentPermissionPublicTarget = {\n  __typename?: \"ContentPermissionPublicTarget\";\n  environment: GraphQLEnvironment;\n};\n\nexport type GraphQLContentPermissionTarget =\n  | GraphQLContentPermissionRoleTarget\n  | GraphQLContentPermissionPermanentAuthTokenTarget\n  | GraphQLContentPermissionPublicTarget;\n\nexport type GraphQLIContentPermission = {\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  enabled: Scalars[\"Boolean\"];\n  target: GraphQLContentPermissionTarget;\n  /** Allows only access to this model. If null, all models are allowed. */\n  model?: Maybe<GraphQLIModel>;\n};\n\nexport type GraphQLReadContentPermission = GraphQLIContentPermission & {\n  __typename?: \"ReadContentPermission\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  enabled: Scalars[\"Boolean\"];\n  target: GraphQLContentPermissionTarget;\n  /** Allows only access to this model. If null, all models are allowed. */\n  model?: Maybe<GraphQLIModel>;\n  /** Allows only access to specific locales. If null, all locales are allowed */\n  locales?: Maybe<Array<GraphQLLocale>>;\n  /** Allows only access to specific stages. If null all stages are allowed */\n  stages?: Maybe<Array<GraphQLStage>>;\n  /** Allows access when conditions are met. Condition is a stringified JSON matching a usual where input. Ignored if there are no conditions. */\n  condition?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLCreateReadContentPermissionModelInput = {\n  /** model id */\n  id: Scalars[\"ID\"];\n  /** Allows access when conditions are met. Condition is a stringified JSON matching a usual where input. Ignored if there are no conditions. */\n  condition?: Maybe<Scalars[\"String\"]>;\n};\n\nexport enum GraphQLContentPermissionTargetKind {\n  Role = \"ROLE\",\n  Pat = \"PAT\",\n  Public = \"PUBLIC\",\n}\n\n/**\n * CreateContentPermissionTargetInput describes the target of a Create<Action>ContentPermissionInput\n * Depending on the kind you need to pass different ids:\n * - ROLE: roleId & environmentId\n * - PAT: patId\n * - PUBLIC: environmentId\n */\nexport type GraphQLCreateContentPermissionTargetInput = {\n  kind: GraphQLContentPermissionTargetKind;\n  patId?: Maybe<Scalars[\"ID\"]>;\n  roleId?: Maybe<Scalars[\"ID\"]>;\n  environmentId?: Maybe<Scalars[\"ID\"]>;\n};\n\nexport type GraphQLCreateReadContentPermissionInput = {\n  target: GraphQLCreateContentPermissionTargetInput;\n  /** Allows only access to this model. If null, all models are allowed. */\n  model?: Maybe<GraphQLCreateReadContentPermissionModelInput>;\n  /** Allows only access to specific locales. If null, all locales are allowed */\n  locales?: Maybe<Array<Scalars[\"ID\"]>>;\n  /** Allows only access to specific stages. If null all stages are allowed */\n  stages?: Maybe<Array<Scalars[\"ID\"]>>;\n};\n\nexport type GraphQLUpdateReadContentPermissionInput = {\n  /** Id of the read permission that should be updated. */\n  permissionId: Scalars[\"ID\"];\n  /** Allows only access to this model. If null, all models are allowed. */\n  model?: Maybe<GraphQLCreateReadContentPermissionModelInput>;\n  /** Allows only access to specific locales. If null, all locales are allowed */\n  locales?: Maybe<Array<Scalars[\"ID\"]>>;\n  /** Allows only access to specific stages. If null all stages are allowed */\n  stages?: Maybe<Array<Scalars[\"ID\"]>>;\n};\n\nexport type GraphQLCreateReadContentPermissionPayload = {\n  __typename?: \"CreateReadContentPermissionPayload\";\n  permission: GraphQLReadContentPermission;\n};\n\nexport type GraphQLUpdateReadContentPermissionPayload = {\n  __typename?: \"UpdateReadContentPermissionPayload\";\n  permission: GraphQLReadContentPermission;\n};\n\nexport type GraphQLReadVersionContentPermission = GraphQLIContentPermission & {\n  __typename?: \"ReadVersionContentPermission\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  enabled: Scalars[\"Boolean\"];\n  target: GraphQLContentPermissionTarget;\n  /** Allows only access to this model. If null, all models are allowed. */\n  model?: Maybe<GraphQLIModel>;\n};\n\nexport type GraphQLCreateReadVersionContentPermissionInput = {\n  target: GraphQLCreateContentPermissionTargetInput;\n  /** Allows only access to this model. If null, all models are allowed. */\n  modelId?: Maybe<Scalars[\"ID\"]>;\n};\n\nexport type GraphQLUpdateReadVersionContentPermissionInput = {\n  /** Id of the read permission that should be updated. */\n  permissionId: Scalars[\"ID\"];\n  /** Allows only access to this model. If null, all models are allowed. */\n  modelId?: Maybe<Scalars[\"ID\"]>;\n};\n\nexport type GraphQLCreateReadVersionContentPermissionPayload = {\n  __typename?: \"CreateReadVersionContentPermissionPayload\";\n  permission: GraphQLReadVersionContentPermission;\n};\n\nexport type GraphQLUpdateReadVersionContentPermissionPayload = {\n  __typename?: \"UpdateReadVersionContentPermissionPayload\";\n  permission: GraphQLReadVersionContentPermission;\n};\n\nexport type GraphQLCreateContentPermission = GraphQLIContentPermission & {\n  __typename?: \"CreateContentPermission\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  enabled: Scalars[\"Boolean\"];\n  target: GraphQLContentPermissionTarget;\n  /** Allows only access to this model. If null, all models are allowed. */\n  model?: Maybe<GraphQLIModel>;\n  /** Allows only access to specific locales. If null, all locales are allowed */\n  locales?: Maybe<Array<GraphQLLocale>>;\n  /** Allows access when conditions are met. Condition is a stringified JSON matching a usual where input. Ignored if there are no conditions. */\n  condition?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLCreateCreateContentPermissionModelInput = {\n  /** model id */\n  id: Scalars[\"ID\"];\n  /** Allows access when conditions are met. Condition is a stringified JSON matching a usual where input. Ignored if there are no conditions. */\n  condition?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLCreateCreateContentPermissionInput = {\n  target: GraphQLCreateContentPermissionTargetInput;\n  /** Allows only access to this model. If null, all models are allowed. */\n  model?: Maybe<GraphQLCreateCreateContentPermissionModelInput>;\n  /** Allows only access to specific locales. If null, all locales are allowed */\n  locales?: Maybe<Array<Scalars[\"ID\"]>>;\n};\n\nexport type GraphQLUpdateCreateContentPermissionInput = {\n  /** Id of the read permission that should be updated. */\n  permissionId: Scalars[\"ID\"];\n  /** Allows only access to this model. If null, all models are allowed. */\n  model?: Maybe<GraphQLCreateCreateContentPermissionModelInput>;\n  /** Allows only access to specific locales. If null, all locales are allowed */\n  locales?: Maybe<Array<Scalars[\"ID\"]>>;\n};\n\nexport type GraphQLCreateCreateContentPermissionPayload = {\n  __typename?: \"CreateCreateContentPermissionPayload\";\n  permission: GraphQLCreateContentPermission;\n};\n\nexport type GraphQLUpdateCreateContentPermissionPayload = {\n  __typename?: \"UpdateCreateContentPermissionPayload\";\n  permission: GraphQLCreateContentPermission;\n};\n\nexport type GraphQLUpdateContentPermission = GraphQLIContentPermission & {\n  __typename?: \"UpdateContentPermission\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  enabled: Scalars[\"Boolean\"];\n  target: GraphQLContentPermissionTarget;\n  /** Allows only access to this model. If null, all models are allowed. */\n  model?: Maybe<GraphQLIModel>;\n  /** Allows only access to specific locales. If null, all locales are allowed */\n  locales?: Maybe<Array<GraphQLLocale>>;\n  /** Allows access when conditions are met. Condition is a stringified JSON matching a usual where input. Ignored if there are no conditions. */\n  condition?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLCreateUpdateContentPermissionModelInput = {\n  /** model id */\n  id: Scalars[\"ID\"];\n  /** Allows access when conditions are met. Condition is a stringified JSON matching a usual where input. Ignored if there are no conditions. */\n  condition?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLCreateUpdateContentPermissionInput = {\n  target: GraphQLCreateContentPermissionTargetInput;\n  /** Allows only access to this model. If null, all models are allowed. */\n  model?: Maybe<GraphQLCreateUpdateContentPermissionModelInput>;\n  /** Allows only access to specific locales. If null, all locales are allowed */\n  locales?: Maybe<Array<Scalars[\"ID\"]>>;\n};\n\nexport type GraphQLUpdateUpdateContentPermissionInput = {\n  /** Id of the update permission that should be updated. */\n  permissionId: Scalars[\"ID\"];\n  /** Allows only access to this model. If null, all models are allowed. */\n  model?: Maybe<GraphQLCreateUpdateContentPermissionModelInput>;\n  /** Allows only access to specific locales. If null, all locales are allowed */\n  locales?: Maybe<Array<Scalars[\"ID\"]>>;\n};\n\nexport type GraphQLCreateUpdateContentPermissionPayload = {\n  __typename?: \"CreateUpdateContentPermissionPayload\";\n  permission: GraphQLUpdateContentPermission;\n};\n\nexport type GraphQLUpdateUpdateContentPermissionPayload = {\n  __typename?: \"UpdateUpdateContentPermissionPayload\";\n  permission: GraphQLUpdateContentPermission;\n};\n\nexport type GraphQLDeleteContentPermission = GraphQLIContentPermission & {\n  __typename?: \"DeleteContentPermission\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  enabled: Scalars[\"Boolean\"];\n  target: GraphQLContentPermissionTarget;\n  /** Allows only access to this model. If null, all models are allowed. */\n  model?: Maybe<GraphQLIModel>;\n  /** Allows only access to specific locales. If null, all locales are allowed */\n  locales?: Maybe<Array<GraphQLLocale>>;\n  /** Allows access when conditions are met. Condition is a stringified JSON matching a usual where input. Ignored if there are no conditions. */\n  condition?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLCreateDeleteContentPermissionModelInput = {\n  /** model id */\n  id: Scalars[\"ID\"];\n  /** Allows access when conditions are met. Condition is a stringified JSON matching a usual where input. Ignored if there are no conditions. */\n  condition?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLCreateDeleteContentPermissionInput = {\n  target: GraphQLCreateContentPermissionTargetInput;\n  /** Allows only access to this model. If null, all models are allowed. */\n  model?: Maybe<GraphQLCreateDeleteContentPermissionModelInput>;\n  /** Allows only access to specific locales. If null, all locales are allowed */\n  locales?: Maybe<Array<Scalars[\"ID\"]>>;\n};\n\nexport type GraphQLUpdateDeleteContentPermissionInput = {\n  /** Id of the delete permission that should be updated. */\n  permissionId: Scalars[\"ID\"];\n  /** Allows only access to this model. If null, all models are allowed. */\n  model?: Maybe<GraphQLCreateUpdateContentPermissionModelInput>;\n  /** Allows only access to specific locales. If null, all locales are allowed */\n  locales?: Maybe<Array<Scalars[\"ID\"]>>;\n};\n\nexport type GraphQLCreateDeleteContentPermissionPayload = {\n  __typename?: \"CreateDeleteContentPermissionPayload\";\n  permission: GraphQLDeleteContentPermission;\n};\n\nexport type GraphQLUpdateDeleteContentPermissionPayload = {\n  __typename?: \"UpdateDeleteContentPermissionPayload\";\n  permission: GraphQLDeleteContentPermission;\n};\n\nexport type GraphQLPublishContentPermission = GraphQLIContentPermission & {\n  __typename?: \"PublishContentPermission\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  enabled: Scalars[\"Boolean\"];\n  target: GraphQLContentPermissionTarget;\n  /** Allows only access to this model. If null, all models are allowed. */\n  model?: Maybe<GraphQLIModel>;\n  /** Allows only access to specific locales. If null, all locales are allowed */\n  locales?: Maybe<Array<GraphQLLocale>>;\n  /** Allows only to publish from specific stages. If null all stages are allowed */\n  fromStages?: Maybe<Array<GraphQLStage>>;\n  /** Allows only to publish to specific stages. If null all stages are allowed */\n  toStages?: Maybe<Array<GraphQLStage>>;\n  /** Allows access when conditions are met. Condition is a stringified JSON matching a usual where input. Ignored if there are no conditions. */\n  condition?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLCreatePublishContentPermissionModelInput = {\n  /** model id */\n  id: Scalars[\"ID\"];\n  /**\n   * Allows only access to specific fields. If null, all fields are allowed\n   * Allows access when conditions are met. Condition is a stringified JSON matching a usual where input. Ignored if there are no conditions.\n   */\n  condition?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLCreatePublishContentPermissionInput = {\n  target: GraphQLCreateContentPermissionTargetInput;\n  /** Allows only access to this model. If null, all models are allowed. */\n  model?: Maybe<GraphQLCreatePublishContentPermissionModelInput>;\n  /** Allows only access to specific locales. If null, all locales are allowed */\n  locales?: Maybe<Array<Scalars[\"ID\"]>>;\n  /** Allows only to publish from specific stages. If null all stages are allowed */\n  fromStages?: Maybe<Array<Scalars[\"ID\"]>>;\n  /** Allows only to publish to specific stages. If null all stages are allowed */\n  toStages?: Maybe<Array<Scalars[\"ID\"]>>;\n};\n\nexport type GraphQLCreatePublishContentPermissionPayload = {\n  __typename?: \"CreatePublishContentPermissionPayload\";\n  permission: GraphQLPublishContentPermission;\n};\n\nexport type GraphQLUpdatePublishContentPermissionModelInput = {\n  /** model id */\n  id: Scalars[\"ID\"];\n  /**\n   * Allows only access to specific fields. If null, all fields are allowed\n   * Allows access when conditions are met. Condition is a stringified JSON matching a usual where input. Ignored if there are no conditions.\n   */\n  condition?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLUpdatePublishContentPermissionInput = {\n  /** Id of the delete permission that should be updated. */\n  permissionId: Scalars[\"ID\"];\n  /** Allows only access to this model. If null, all models are allowed. */\n  model?: Maybe<GraphQLCreatePublishContentPermissionModelInput>;\n  /** Allows only access to specific locales. If null, all locales are allowed */\n  locales?: Maybe<Array<Scalars[\"ID\"]>>;\n  /** Allows only to publish from specific stages. If null all stages are allowed */\n  fromStages?: Maybe<Array<Scalars[\"ID\"]>>;\n  /** Allows only to publish to specific stages. If null all stages are allowed */\n  toStages?: Maybe<Array<Scalars[\"ID\"]>>;\n};\n\nexport type GraphQLUpdatePublishContentPermissionPayload = {\n  __typename?: \"UpdatePublishContentPermissionPayload\";\n  permission: GraphQLPublishContentPermission;\n};\n\nexport type GraphQLUnpublishContentPermission = GraphQLIContentPermission & {\n  __typename?: \"UnpublishContentPermission\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  enabled: Scalars[\"Boolean\"];\n  target: GraphQLContentPermissionTarget;\n  /** Allows only access to this model. If null, all models are allowed. */\n  model?: Maybe<GraphQLIModel>;\n  /** Allows only access to specific locales. If null, all locales are allowed */\n  locales?: Maybe<Array<GraphQLLocale>>;\n  /** Allows only to publish from specific stages. If null all stages are allowed */\n  stages?: Maybe<Array<GraphQLStage>>;\n  /** Allows access when conditions are met. Condition is a stringified JSON matching a usual where input. Ignored if there are no conditions. */\n  condition?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLCreateUnpublishContentPermissionModelInput = {\n  /** model id */\n  id: Scalars[\"ID\"];\n  /**\n   * Allows only access to specific fields. If null, all fields are allowed\n   * Allows access when conditions are met. Condition is a stringified JSON matching a usual where input. Ignored if there are no conditions.\n   */\n  condition?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLCreateUnpublishContentPermissionInput = {\n  target: GraphQLCreateContentPermissionTargetInput;\n  /** Allows only access to this model. If null, all models are allowed. */\n  model?: Maybe<GraphQLCreateUnpublishContentPermissionModelInput>;\n  /** Allows only access to specific locales. If null, all locales are allowed */\n  locales?: Maybe<Array<Scalars[\"ID\"]>>;\n  /** Allows only to publish from specific stages. If null all stages are allowed */\n  stages?: Maybe<Array<Scalars[\"ID\"]>>;\n};\n\nexport type GraphQLCreateUnpublishContentPermissionPayload = {\n  __typename?: \"CreateUnpublishContentPermissionPayload\";\n  permission: GraphQLUnpublishContentPermission;\n};\n\nexport type GraphQLUpdateUnpublishContentPermissionModelInput = {\n  /** model id */\n  id: Scalars[\"ID\"];\n  /**\n   * Allows only access to specific fields. If null, all fields are allowed\n   * Allows access when conditions are met. Condition is a stringified JSON matching a usual where input. Ignored if there are no conditions.\n   */\n  condition?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLUpdateUnpublishContentPermissionInput = {\n  /** Id of the delete permission that should be updated. */\n  permissionId: Scalars[\"ID\"];\n  /** Allows only access to this model. If null, all models are allowed. */\n  model?: Maybe<GraphQLUpdateUnpublishContentPermissionModelInput>;\n  /** Allows only access to specific locales. If null, all locales are allowed */\n  locales?: Maybe<Array<Scalars[\"ID\"]>>;\n  /** Allows only to publish from specific stages. If null all stages are allowed */\n  stages?: Maybe<Array<Scalars[\"ID\"]>>;\n};\n\nexport type GraphQLUpdateUnpublishContentPermissionPayload = {\n  __typename?: \"UpdateUnpublishContentPermissionPayload\";\n  permission: GraphQLUnpublishContentPermission;\n};\n\nexport type GraphQLUpdateContentPermissionEnabledInput = {\n  permissionId: Scalars[\"ID\"];\n  enabled: Scalars[\"Boolean\"];\n};\n\nexport type GraphQLUpdateContentPermissionEnabledPayload = {\n  __typename?: \"UpdateContentPermissionEnabledPayload\";\n  permission: GraphQLIContentPermission;\n};\n\nexport type GraphQLDeleteContentPermissionInput = {\n  permissionId: Scalars[\"ID\"];\n};\n\nexport type GraphQLDeleteContentPermissionPayload = {\n  __typename?: \"DeleteContentPermissionPayload\";\n  deletedPermissionId: Scalars[\"ID\"];\n};\n\nexport type GraphQLUpdateMemberRolesInput = {\n  memberId: Scalars[\"ID\"];\n  roleIds: Array<Scalars[\"ID\"]>;\n};\n\nexport enum GraphQLMigrationStatus {\n  Queued = \"QUEUED\",\n  Running = \"RUNNING\",\n  Success = \"SUCCESS\",\n  Timeout = \"TIMEOUT\",\n  Failed = \"FAILED\",\n}\n\nexport type GraphQLMigration = {\n  __typename?: \"Migration\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  finishedAt?: Maybe<Scalars[\"DateTime\"]>;\n  /** @deprecated This will be replaced by a union of Member | PermanentAuthToken */\n  triggeredBy?: Maybe<GraphQLMember>;\n  status: GraphQLMigrationStatus;\n  errors?: Maybe<Scalars[\"String\"]>;\n  /** @deprecated Field no longer supported */\n  operationType: GraphQLMigrationOperationType;\n  /** @deprecated Field no longer supported */\n  resourceId?: Maybe<Scalars[\"ID\"]>;\n};\n\nexport enum GraphQLRemote_Graphql_Type {\n  Scalar = \"SCALAR\",\n  Object = \"OBJECT\",\n  Interface = \"INTERFACE\",\n  Union = \"UNION\",\n  Enum = \"ENUM\",\n  InputObject = \"INPUT_OBJECT\",\n}\n\nexport type GraphQLIRemoteSource = {\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  prefix: Scalars[\"String\"];\n  url: Scalars[\"String\"];\n  /**\n   * Optional headers that will be sent to the remote source on every remote field. In case the remote field is using the same\n   * Header Keys, the values will be overridden\n   */\n  headers?: Maybe<Scalars[\"JSON\"]>;\n  type: GraphQLRemoteSourceType;\n  remoteTypeDefinitionsConnection: GraphQLRemoteTypeDefinitionsConnection;\n  debugEnabled: Scalars[\"Boolean\"];\n};\n\nexport type GraphQLIRemoteSourceRemoteTypeDefinitionsConnectionArgs = {\n  remoteGraphQLTypes?: Maybe<Array<GraphQLRemote_Graphql_Type>>;\n  isUserDefined?: Maybe<Scalars[\"Boolean\"]>;\n  skip?: Scalars[\"Int\"];\n  first?: Scalars[\"Int\"];\n};\n\nexport type GraphQLGraphQlRemoteSource = GraphQLIRemoteSource & {\n  __typename?: \"GraphQLRemoteSource\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  prefix: Scalars[\"String\"];\n  url: Scalars[\"String\"];\n  headers?: Maybe<Scalars[\"JSON\"]>;\n  type: GraphQLRemoteSourceType;\n  remoteTypeDefinitionsConnection: GraphQLRemoteTypeDefinitionsConnection;\n  debugEnabled: Scalars[\"Boolean\"];\n  /**\n   * Specific URL that will be used for introspection if the introspection is available on another url than the regular url.\n   * Can be ignored if the introspection url is the same as the url of the remote source.\n   */\n  introspectionUrl?: Maybe<Scalars[\"String\"]>;\n  /** HTTP Headers that will be used when sending the introspection only */\n  introspectionHeaders?: Maybe<Scalars[\"JSON\"]>;\n  /** HTTP method that will be used for introspection */\n  introspectionMethod: GraphQLGraphQlRemoteSourceIntrospectionMethod;\n  schema: Scalars[\"String\"];\n};\n\nexport type GraphQLGraphQlRemoteSourceRemoteTypeDefinitionsConnectionArgs = {\n  remoteGraphQLTypes?: Maybe<Array<GraphQLRemote_Graphql_Type>>;\n  isUserDefined?: Maybe<Scalars[\"Boolean\"]>;\n  skip?: Scalars[\"Int\"];\n  first?: Scalars[\"Int\"];\n};\n\nexport type GraphQLRestRemoteSource = GraphQLIRemoteSource & {\n  __typename?: \"RESTRemoteSource\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  prefix: Scalars[\"String\"];\n  url: Scalars[\"String\"];\n  headers?: Maybe<Scalars[\"JSON\"]>;\n  type: GraphQLRemoteSourceType;\n  remoteTypeDefinitionsConnection: GraphQLRemoteTypeDefinitionsConnection;\n  debugEnabled: Scalars[\"Boolean\"];\n};\n\nexport type GraphQLRestRemoteSourceRemoteTypeDefinitionsConnectionArgs = {\n  remoteGraphQLTypes?: Maybe<Array<GraphQLRemote_Graphql_Type>>;\n  isUserDefined?: Maybe<Scalars[\"Boolean\"]>;\n  skip?: Scalars[\"Int\"];\n  first?: Scalars[\"Int\"];\n};\n\nexport type GraphQLRemoteTypeDefinitionEdge = {\n  __typename?: \"RemoteTypeDefinitionEdge\";\n  node: GraphQLRemoteTypeDefinition;\n};\n\nexport type GraphQLRemoteTypeDefinitionsAggregate = {\n  __typename?: \"RemoteTypeDefinitionsAggregate\";\n  count: Scalars[\"Int\"];\n};\n\nexport type GraphQLRemoteTypeDefinitionsConnection = {\n  __typename?: \"RemoteTypeDefinitionsConnection\";\n  pageInfo: GraphQLPageInfo;\n  edges: Array<GraphQLRemoteTypeDefinitionEdge>;\n  aggregate: GraphQLRemoteTypeDefinitionsAggregate;\n};\n\nexport type GraphQLEnvironment = {\n  __typename?: \"Environment\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  name: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  endpoint: Scalars[\"String\"];\n  assetConfig: GraphQLIAssetConfig;\n  metrics: GraphQLMetrics;\n  webhook: GraphQLWebhook;\n  webhooks: Array<GraphQLWebhook>;\n  permanentAuthTokens: Array<GraphQLPermanentAuthToken>;\n  authToken: Scalars[\"String\"];\n  contentView: GraphQLContentView;\n  contentViews: Array<GraphQLContentView>;\n  viewGroups: Array<GraphQLViewGroup>;\n  contentModel: GraphQLContentModel;\n  remoteSources: Array<GraphQLIRemoteSource>;\n  remoteSource: GraphQLIRemoteSource;\n  /** @deprecated Revisions are no longer maintained */\n  revisionCount: Scalars[\"Int\"];\n  migrations: Array<GraphQLMigration>;\n  migration: GraphQLMigration;\n  runningMigration?: Maybe<GraphQLMigration>;\n  publicContentAPI: GraphQLPublicContentApi;\n  isCloning?: Maybe<Scalars[\"Boolean\"]>;\n  quotas: GraphQLEnvironmentLevelQuota;\n  integrations: Array<GraphQLIIntegration>;\n  integration: GraphQLIIntegration;\n  extensions: Array<GraphQLIExtension>;\n  extension: GraphQLIExtension;\n  appInstallations: Array<GraphQLAppInstallation>;\n  appInstallation: GraphQLAppInstallation;\n  diff: GraphQLDiffEnvironmentPayload;\n};\n\nexport type GraphQLEnvironmentWebhookArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLEnvironmentContentViewArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLEnvironmentContentViewsArgs = {\n  includeSystemModels?: Maybe<Scalars[\"Boolean\"]>;\n  filter?: Maybe<GraphQLContentViewFilterInput>;\n};\n\nexport type GraphQLEnvironmentRemoteSourceArgs = {\n  prefix: Scalars[\"String\"];\n};\n\nexport type GraphQLEnvironmentMigrationArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLEnvironmentIntegrationArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLEnvironmentExtensionArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLEnvironmentAppInstallationsArgs = {\n  status?: Maybe<GraphQLAppInstallationStatus>;\n};\n\nexport type GraphQLEnvironmentAppInstallationArgs = {\n  appApiId: Scalars[\"String\"];\n};\n\nexport type GraphQLEnvironmentDiffArgs = {\n  environmentName: Scalars[\"String\"];\n};\n\nexport type GraphQLPublicContentApiDefauts = {\n  __typename?: \"PublicContentAPIDefauts\";\n  stage: GraphQLStage;\n};\n\nexport type GraphQLPublicContentApi = {\n  __typename?: \"PublicContentAPI\";\n  defaults: GraphQLPublicContentApiDefauts;\n  /** returns configured content permissions used for public access of the environment */\n  contentPermissions: Array<GraphQLIContentPermission>;\n};\n\nexport enum GraphQLIntegration_Provider {\n  Netlify = \"NETLIFY\",\n  Vercel = \"VERCEL\",\n  GatsbyCloud = \"GATSBY_CLOUD\",\n}\n\nexport type GraphQLIIntegration = {\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLNetlifyIntegration = GraphQLIIntegration & {\n  __typename?: \"NetlifyIntegration\";\n  /** Integration ID */\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  /** Integration display name on GCMS */\n  displayName?: Maybe<Scalars[\"String\"]>;\n  /** Integration description on GCMS */\n  description?: Maybe<Scalars[\"String\"]>;\n  /** Configured sites for netlify integration */\n  sites: Array<GraphQLNetlifySite>;\n  models: Array<GraphQLIModel>;\n};\n\nexport type GraphQLVercelIntegration = GraphQLIIntegration & {\n  __typename?: \"VercelIntegration\";\n  /** Integration ID */\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  /** Integration display name on GCMS */\n  displayName?: Maybe<Scalars[\"String\"]>;\n  /** Integration description on GCMS */\n  description?: Maybe<Scalars[\"String\"]>;\n  /** Configured projects for vercel integration */\n  projects: Array<GraphQLVercelProject>;\n  models: Array<GraphQLIModel>;\n};\n\nexport type GraphQLGatsbyCloudIntegration = GraphQLIIntegration & {\n  __typename?: \"GatsbyCloudIntegration\";\n  /** Integration ID */\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  /** Integration display name on GCMS */\n  displayName?: Maybe<Scalars[\"String\"]>;\n  /** Integration description on GCMS */\n  description?: Maybe<Scalars[\"String\"]>;\n  /** URL to your site */\n  siteURL: Scalars[\"String\"];\n  /** Prefix of your site */\n  sitePrefix: Scalars[\"String\"];\n  /** URL to the preview of your site */\n  previewURL: Scalars[\"String\"];\n  /** URL to the production deployment of your site */\n  productionURL: Scalars[\"String\"];\n  /** URL to trigger a Deploy Build. This webhook will be triggered when publishing and unpublishing entries. */\n  buildWebhookURL: Scalars[\"String\"];\n  /** URL to trigger a CMS Preview build */\n  previewWebhookURL: Scalars[\"String\"];\n};\n\nexport type GraphQLNetlifySite = {\n  __typename?: \"NetlifySite\";\n  id: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  url: Scalars[\"String\"];\n  /** Contains information of the last time the build state was changing. */\n  lastState?: Maybe<GraphQLNetlifyState>;\n};\n\nexport type GraphQLVercelProject = {\n  __typename?: \"VercelProject\";\n  id: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  url: Scalars[\"String\"];\n  /** Git branch to trigger the build from */\n  ref: Scalars[\"String\"];\n  /** Contains information of the last time the build state was changing. */\n  lastState?: Maybe<GraphQLVercelState>;\n};\n\nexport type GraphQLNetlifyState = {\n  __typename?: \"NetlifyState\";\n  /** Current state the site is in */\n  buildState: GraphQLNetlifyBuildState;\n  /** Time when the build of the site was started */\n  buildStartedAt?: Maybe<Scalars[\"DateTime\"]>;\n  /** Time when the build of the site was prepared */\n  buildPreparedAt?: Maybe<Scalars[\"DateTime\"]>;\n  /** Time when the build of the site was finished */\n  buildFinishedAt?: Maybe<Scalars[\"DateTime\"]>;\n  /** Member in the project who triggered a build. If the build was triggered externally this will be null. */\n  triggeredBy?: Maybe<GraphQLNetlifyStateTriggeredBy>;\n};\n\nexport type GraphQLVercelState = {\n  __typename?: \"VercelState\";\n  /** Current state the site is in */\n  buildState: GraphQLVercelBuildState;\n  /** Time when the build of the site was started */\n  buildStartedAt?: Maybe<Scalars[\"DateTime\"]>;\n  /** Time when the build of the site was prepared */\n  buildPreparedAt?: Maybe<Scalars[\"DateTime\"]>;\n  /** Time when the build of the site was finished */\n  buildFinishedAt?: Maybe<Scalars[\"DateTime\"]>;\n  /** Member in the project who triggered a build. If the build was triggered externally this will be null. */\n  triggeredBy?: Maybe<GraphQLVercelStateTriggeredBy>;\n};\n\nexport type GraphQLNetlifyStateTriggeredBy =\n  | GraphQLPermanentAuthToken\n  | GraphQLMember;\n\nexport type GraphQLVercelStateTriggeredBy =\n  | GraphQLPermanentAuthToken\n  | GraphQLMember;\n\nexport enum GraphQLColorPalette {\n  Pink = \"PINK\",\n  Purple = \"PURPLE\",\n  Orange = \"ORANGE\",\n  Red = \"RED\",\n  Brown = \"BROWN\",\n  Teal = \"TEAL\",\n  Green = \"GREEN\",\n  Yellow = \"YELLOW\",\n}\n\nexport type GraphQLStage = {\n  __typename?: \"Stage\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  apiId: Scalars[\"String\"];\n  color: Scalars[\"String\"];\n  colorPaletteId: GraphQLColorPalette;\n  backgroundColor: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  isSystem: Scalars[\"Boolean\"];\n  position: Scalars[\"Int\"];\n};\n\nexport type GraphQLProfile = {\n  __typename?: \"Profile\";\n  id: Scalars[\"ID\"];\n  email: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n  picture?: Maybe<Scalars[\"String\"]>;\n  role?: Maybe<Scalars[\"String\"]>;\n  purpose?: Maybe<Scalars[\"String\"]>;\n  companyName?: Maybe<Scalars[\"String\"]>;\n  companySize?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLIUser = {\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  profile: GraphQLProfile;\n};\n\nexport type GraphQLCreateUserPayload = {\n  __typename?: \"CreateUserPayload\";\n  gcms?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLLegacyProject = {\n  __typename?: \"LegacyProject\";\n  id: Scalars[\"ID\"];\n  name: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  url: Scalars[\"String\"];\n  picture?: Maybe<Scalars[\"String\"]>;\n  isOwner: Scalars[\"Boolean\"];\n  isMigrated: Scalars[\"Boolean\"];\n};\n\nexport type GraphQLITemplate = {\n  id: Scalars[\"ID\"];\n  name: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  picture?: Maybe<Scalars[\"String\"]>;\n  details?: Maybe<Scalars[\"String\"]>;\n  coverPicture?: Maybe<Scalars[\"String\"]>;\n  resources: Array<GraphQLTemplateResource>;\n};\n\nexport type GraphQLTemplate = GraphQLITemplate & {\n  __typename?: \"Template\";\n  id: Scalars[\"ID\"];\n  name: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  picture?: Maybe<Scalars[\"String\"]>;\n  details?: Maybe<Scalars[\"String\"]>;\n  coverPicture?: Maybe<Scalars[\"String\"]>;\n  resources: Array<GraphQLTemplateResource>;\n};\n\nexport type GraphQLStarterTemplate = GraphQLITemplate & {\n  __typename?: \"StarterTemplate\";\n  id: Scalars[\"ID\"];\n  name: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  picture?: Maybe<Scalars[\"String\"]>;\n  details?: Maybe<Scalars[\"String\"]>;\n  coverPicture?: Maybe<Scalars[\"String\"]>;\n  resources: Array<GraphQLTemplateResource>;\n  stack: Array<GraphQLTechnologyStack>;\n};\n\nexport type GraphQLTemplateResource = {\n  __typename?: \"TemplateResource\";\n  title: Scalars[\"String\"];\n  url: Scalars[\"String\"];\n};\n\nexport type GraphQLTechnologyStack = {\n  __typename?: \"TechnologyStack\";\n  image: Scalars[\"String\"];\n  title: Scalars[\"String\"];\n  url?: Maybe<Scalars[\"String\"]>;\n};\n\n/**\n * Represents the logged in user\n * Will be removed soon\n */\nexport type GraphQLViewer = GraphQLIUser & {\n  __typename?: \"Viewer\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  profile: GraphQLProfile;\n  pendingInvites: Array<GraphQLInvite>;\n  pendingInvite?: Maybe<GraphQLInvite>;\n  projects: Array<GraphQLProject>;\n  plans: Array<GraphQLPlan>;\n  project?: Maybe<GraphQLProject>;\n  templates: Array<GraphQLITemplate>;\n  paymentAccounts: Array<GraphQLPaymentAccount>;\n  paymentAccount: GraphQLPaymentAccount;\n  regions: Array<GraphQLRegion>;\n  availableIntegrations: Array<GraphQLIntegration_Provider>;\n  availableExtensionSrcTypes: Array<GraphQLExtensionSrcType>;\n  availableExtensionPermissions: Array<GraphQLAvailableExtensionPermission>;\n};\n\n/**\n * Represents the logged in user\n * Will be removed soon\n */\nexport type GraphQLViewerPendingInviteArgs = {\n  code: Scalars[\"String\"];\n};\n\n/**\n * Represents the logged in user\n * Will be removed soon\n */\nexport type GraphQLViewerProjectArgs = {\n  id: Scalars[\"ID\"];\n};\n\n/**\n * Represents the logged in user\n * Will be removed soon\n */\nexport type GraphQLViewerPaymentAccountArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLIViewer = {\n  id: Scalars[\"ID\"];\n  project?: Maybe<GraphQLProject>;\n  plans: Array<GraphQLPlan>;\n  templates: Array<GraphQLITemplate>;\n  regions: Array<GraphQLRegion>;\n  availableIntegrations: Array<GraphQLIntegration_Provider>;\n  availableExtensionSrcTypes: Array<GraphQLExtensionSrcType>;\n  availableExtensionPermissions: Array<GraphQLAvailableExtensionPermission>;\n};\n\nexport type GraphQLIViewerProjectArgs = {\n  id?: Maybe<Scalars[\"ID\"]>;\n};\n\nexport type GraphQLUser = GraphQLIUser & {\n  __typename?: \"User\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  profile: GraphQLProfile;\n};\n\nexport type GraphQLUserViewer = GraphQLIViewer & {\n  __typename?: \"UserViewer\";\n  id: Scalars[\"ID\"];\n  user: GraphQLUser;\n  pendingInvites: Array<GraphQLInvite>;\n  pendingInvite?: Maybe<GraphQLInvite>;\n  plans: Array<GraphQLPlan>;\n  templates: Array<GraphQLITemplate>;\n  paymentAccounts: Array<GraphQLPaymentAccount>;\n  paymentAccount: GraphQLPaymentAccount;\n  regions: Array<GraphQLRegion>;\n  availableIntegrations: Array<GraphQLIntegration_Provider>;\n  availableExtensionSrcTypes: Array<GraphQLExtensionSrcType>;\n  availableExtensionPermissions: Array<GraphQLAvailableExtensionPermission>;\n  pendingProjects: Array<GraphQLIPendingProject>;\n  pendingProject?: Maybe<GraphQLIPendingProject>;\n  projects: Array<GraphQLProject>;\n  project?: Maybe<GraphQLProject>;\n  commonAssetConfig: GraphQLCommonFilestack;\n  apps: Array<GraphQLApp>;\n  app: GraphQLApp;\n};\n\nexport type GraphQLUserViewerPendingInviteArgs = {\n  code: Scalars[\"String\"];\n};\n\nexport type GraphQLUserViewerPaymentAccountArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLUserViewerPendingProjectArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLUserViewerProjectArgs = {\n  id?: Maybe<Scalars[\"ID\"]>;\n};\n\nexport type GraphQLUserViewerAppArgs = {\n  apiId: Scalars[\"String\"];\n};\n\nexport type GraphQLTokenViewer = GraphQLIViewer & {\n  __typename?: \"TokenViewer\";\n  id: Scalars[\"ID\"];\n  project?: Maybe<GraphQLProject>;\n  regions: Array<GraphQLRegion>;\n  templates: Array<GraphQLITemplate>;\n  plans: Array<GraphQLPlan>;\n  availableIntegrations: Array<GraphQLIntegration_Provider>;\n  availableExtensionSrcTypes: Array<GraphQLExtensionSrcType>;\n  availableExtensionPermissions: Array<GraphQLAvailableExtensionPermission>;\n};\n\nexport type GraphQLTokenViewerProjectArgs = {\n  id?: Maybe<Scalars[\"ID\"]>;\n};\n\n/** Represents a user in a project */\nexport type GraphQLMember = GraphQLIUser & {\n  __typename?: \"Member\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  profile: GraphQLProfile;\n  roles: Array<GraphQLRole>;\n  isOwner: Scalars[\"Boolean\"];\n};\n\nexport type GraphQLUserAnalytics = {\n  __typename?: \"UserAnalytics\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  landingPage?: Maybe<Scalars[\"String\"]>;\n  conversionPage?: Maybe<Scalars[\"String\"]>;\n  referrer?: Maybe<Scalars[\"String\"]>;\n  gclid?: Maybe<Scalars[\"String\"]>;\n  utmSource?: Maybe<Scalars[\"String\"]>;\n  utmMedium?: Maybe<Scalars[\"String\"]>;\n  utmCampaign?: Maybe<Scalars[\"String\"]>;\n  utmTerm?: Maybe<Scalars[\"String\"]>;\n  utmContent?: Maybe<Scalars[\"String\"]>;\n  hubspotutk?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLRemoveMemberPayload = {\n  __typename?: \"RemoveMemberPayload\";\n  removedMemberId: Scalars[\"ID\"];\n};\n\nexport type GraphQLDeleteAccountPayload = {\n  __typename?: \"DeleteAccountPayload\";\n  deletedUserId: Scalars[\"ID\"];\n};\n\nexport type GraphQLRemoveMemberInput = {\n  memberId: Scalars[\"ID\"];\n};\n\nexport type GraphQLSetUserAnalyticsInput = {\n  landingPage?: Maybe<Scalars[\"String\"]>;\n  conversionPage?: Maybe<Scalars[\"String\"]>;\n  referrer?: Maybe<Scalars[\"String\"]>;\n  gclid?: Maybe<Scalars[\"String\"]>;\n  utmSource?: Maybe<Scalars[\"String\"]>;\n  utmMedium?: Maybe<Scalars[\"String\"]>;\n  utmCampaign?: Maybe<Scalars[\"String\"]>;\n  utmTerm?: Maybe<Scalars[\"String\"]>;\n  utmContent?: Maybe<Scalars[\"String\"]>;\n  hubspotutk?: Maybe<Scalars[\"String\"]>;\n};\n\nexport enum GraphQLTrackEvent {\n  CreatedContent = \"CREATED_CONTENT\",\n  UsedPlayground = \"USED_PLAYGROUND\",\n  CheckedQuickstart = \"CHECKED_QUICKSTART\",\n}\n\nexport type GraphQLTrackInput = {\n  projectId: Scalars[\"ID\"];\n  event: GraphQLTrackEvent;\n  meta?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLTrackPayload = {\n  __typename?: \"TrackPayload\";\n  success: Scalars[\"Boolean\"];\n};\n\nexport type GraphQLUpdateProfileInput = {\n  name?: Maybe<Scalars[\"String\"]>;\n  company?: Maybe<Scalars[\"String\"]>;\n  jobTitle?: Maybe<Scalars[\"String\"]>;\n  jobRole?: Maybe<GraphQLProfileJobRole>;\n  picture?: Maybe<Scalars[\"String\"]>;\n  role?: Maybe<Scalars[\"String\"]>;\n  purpose?: Maybe<Scalars[\"String\"]>;\n  companyName?: Maybe<Scalars[\"String\"]>;\n  companySize?: Maybe<Scalars[\"String\"]>;\n};\n\nexport enum GraphQLProfileJobRole {\n  DeveloperEngineering = \"DEVELOPER_ENGINEERING\",\n  EditorialContent = \"EDITORIAL_CONTENT\",\n  Management = \"MANAGEMENT\",\n  Procurement = \"PROCUREMENT\",\n  ProductManagement = \"PRODUCT_MANAGEMENT\",\n  ProjectManagement = \"PROJECT_MANAGEMENT\",\n  Sales = \"SALES\",\n  SecurityLegal = \"SECURITY_LEGAL\",\n  Other = \"OTHER\",\n}\n\nexport type GraphQLCreateUserInput = {\n  gcms?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLDeleteAccountInput = {\n  churnQuestions?: Maybe<Scalars[\"JSON\"]>;\n};\n\nexport enum GraphQLViewGroupType {\n  Custom = \"CUSTOM\",\n  System = \"SYSTEM\",\n  UserCreated = \"USER_CREATED\",\n}\n\nexport enum GraphQLViewGroupContentType {\n  Default = \"DEFAULT\",\n  Asset = \"ASSET\",\n}\n\nexport type GraphQLViewGroup = {\n  __typename?: \"ViewGroup\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  name: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  environment: GraphQLEnvironment;\n  type: GraphQLViewGroupType;\n  contentType: GraphQLViewGroupContentType;\n  position: Scalars[\"Int\"];\n  createdBy?: Maybe<GraphQLMember>;\n  contentViews: Array<GraphQLContentView>;\n};\n\nexport type GraphQLViewGroupContentViewsArgs = {\n  filter?: Maybe<GraphQLContentViewFilterInput>;\n};\n\nexport type GraphQLCreateViewGroupPayload = {\n  __typename?: \"CreateViewGroupPayload\";\n  createdViewGroup: GraphQLViewGroup;\n};\n\nexport type GraphQLUpdateViewGroupPayload = {\n  __typename?: \"UpdateViewGroupPayload\";\n  updatedViewGroup: GraphQLViewGroup;\n};\n\nexport type GraphQLDeleteViewGroupPayload = {\n  __typename?: \"DeleteViewGroupPayload\";\n  deletedViewGroupId: Scalars[\"ID\"];\n};\n\nexport type GraphQLMoveViewGroupPayload = {\n  __typename?: \"MoveViewGroupPayload\";\n  movedViewGroups: Array<GraphQLViewGroup>;\n};\n\nexport type GraphQLCreateViewGroupInput = {\n  name: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  type?: Maybe<GraphQLViewGroupContentType>;\n  environmentId: Scalars[\"ID\"];\n};\n\nexport type GraphQLUpdateViewGroupInput = {\n  id: Scalars[\"ID\"];\n  name?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLDeleteViewGroupInput = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLMoveViewGroupInput = {\n  id: Scalars[\"ID\"];\n  position: Scalars[\"Int\"];\n};\n\nexport type GraphQLWebhook = {\n  __typename?: \"Webhook\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  name: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  url: Scalars[\"String\"];\n  headers: Scalars[\"JSON\"];\n  isActive: Scalars[\"Boolean\"];\n  environment: GraphQLEnvironment;\n  /**\n   * List of models on which the webhook will be triggered.\n   * In case of any model, this array will be empty.\n   */\n  models: Array<GraphQLIModel>;\n  /**\n   * List of stages on which the webhook will be triggered.\n   * In case of any stage, this array will be empty.\n   */\n  stages: Array<GraphQLStage>;\n  /** The type of trigger the webhook is registered */\n  triggerType: GraphQLWebhookTriggerType;\n  /** When one of the actions happen, the webhook will be triggered */\n  triggerActions: Array<GraphQLWebhookTriggerAction>;\n  /**\n   * Defines wether the data of the changed data will be sent\n   * in the webhook payload or not\n   */\n  includePayload: Scalars[\"Boolean\"];\n  hasSecretKey?: Maybe<Scalars[\"Boolean\"]>;\n  logs: GraphQLWebhookLogsPayload;\n  log?: Maybe<GraphQLWebhookLog>;\n  triggerSources?: Maybe<Array<GraphQLWebhookTriggerSource>>;\n};\n\nexport type GraphQLWebhookLogsArgs = {\n  where?: Maybe<GraphQLWebhookLogsWhereInput>;\n  limit?: Maybe<Scalars[\"Int\"]>;\n  skip?: Maybe<Scalars[\"Int\"]>;\n  after?: Maybe<Scalars[\"String\"]>;\n  orderBy?: Maybe<GraphQLWebhookLogOrderByInput>;\n};\n\nexport type GraphQLWebhookLogArgs = {\n  id: Scalars[\"String\"];\n};\n\nexport enum GraphQLWebhookTriggerSource {\n  Pat = \"PAT\",\n  Member = \"MEMBER\",\n  Public = \"PUBLIC\",\n}\n\nexport type GraphQLWebhookLogsPayload = {\n  __typename?: \"WebhookLogsPayload\";\n  total: Scalars[\"Int\"];\n  entries: Array<GraphQLWebhookLog>;\n};\n\nexport type GraphQLWebhookLogsWhereInput = {\n  action_eq?: Maybe<GraphQLWebhookTriggerAction>;\n  modelId_eq?: Maybe<Scalars[\"ID\"]>;\n  status_eq?: Maybe<Scalars[\"Int\"]>;\n  status_in?: Maybe<Array<Maybe<Scalars[\"Int\"]>>>;\n  status_gt?: Maybe<Scalars[\"Int\"]>;\n  status_gte?: Maybe<Scalars[\"Int\"]>;\n  status_lt?: Maybe<Scalars[\"Int\"]>;\n  status_lte?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport enum GraphQLWebhookLogOrderByInput {\n  CalledAtAsc = \"calledAt_ASC\",\n  CalledAtDesc = \"calledAt_DESC\",\n}\n\nexport type GraphQLWebhookLog = {\n  __typename?: \"WebhookLog\";\n  id: Scalars[\"String\"];\n  /**\n   * \"\"\"\n   * Payload that was send as the payload\n   * \"\"\"\n   */\n  requestPayload?: Maybe<Scalars[\"JSON\"]>;\n  /**\n   * \"\"\"\n   * Payload that was return by the webhook\n   * \"\"\"\n   */\n  responsePayload?: Maybe<Scalars[\"String\"]>;\n  /**\n   * \"\"\"\n   *  Size of the response payload in bytes\n   * \"\"\"\n   */\n  responsePayloadSize?: Maybe<Scalars[\"Int\"]>;\n  /**\n   * \"\"\"\n   *  Time when the webhook was called\n   * \"\"\"\n   */\n  calledAt: Scalars[\"DateTime\"];\n  /**\n   * \"\"\"\n   *  Status code of the response\n   * \"\"\"\n   */\n  statusCode: Scalars[\"Int\"];\n  /**\n   * \"\"\"\n   * Model on which the webhook was triggered\n   * \"\"\"\n   */\n  model?: Maybe<GraphQLIModel>;\n  /**\n   * \"\"\"\n   * Action which triggered the webhook\n   * \"\"\"\n   */\n  triggerAction: GraphQLWebhookTriggerAction;\n  /**\n   * \"\"\"\n   *  In case of errors shows how many retry attempts happened\n   * \"\"\"\n   */\n  attempts: Scalars[\"Int\"];\n  /**\n   * \"\"\"\n   *  Duration the request call took in milliseconds\n   * \"\"\"\n   */\n  duration: Scalars[\"Float\"];\n};\n\nexport type GraphQLCreateWebhookPayload = {\n  __typename?: \"CreateWebhookPayload\";\n  createdWebhook: GraphQLWebhook;\n};\n\nexport type GraphQLUpdateWebhookPayload = {\n  __typename?: \"UpdateWebhookPayload\";\n  updatedWebhook: GraphQLWebhook;\n};\n\nexport type GraphQLDeleteWebhookPayload = {\n  __typename?: \"DeleteWebhookPayload\";\n  deletedWebhookId: Scalars[\"ID\"];\n};\n\n/** Defines the type of the trigger */\nexport enum GraphQLWebhookTriggerType {\n  ContentModel = \"CONTENT_MODEL\",\n}\n\n/**\n * Defines which operation will trigger the webhook.\n * Some operations rely on the type of stage. E.g. on a\n * publishing stage, the webhook will only be triggered for\n * PUBLISH and UNPUBLISH events. On other stages, only\n * CREATE, UPDATE and DELETE are triggering the webhook.\n */\nexport enum GraphQLWebhookTriggerAction {\n  Create = \"CREATE\",\n  Update = \"UPDATE\",\n  Delete = \"DELETE\",\n  Publish = \"PUBLISH\",\n  Unpublish = \"UNPUBLISH\",\n}\n\nexport type GraphQLCreateWebhookInput = {\n  environmentId: Scalars[\"ID\"];\n  name: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  url: Scalars[\"String\"];\n  headers?: Maybe<Scalars[\"JSON\"]>;\n  isActive: Scalars[\"Boolean\"];\n  includePayload: Scalars[\"Boolean\"];\n  /**\n   * Pass an empty array for all existing models.\n   * This will also setup the webook for models\n   * created in the future\n   */\n  models: Array<Scalars[\"ID\"]>;\n  /**\n   * Pass an empty array for all existing stages.\n   * This will also setup the webook for stages\n   * created in the future\n   */\n  stages: Array<Scalars[\"ID\"]>;\n  triggerType: GraphQLWebhookTriggerType;\n  triggerActions: Array<GraphQLWebhookTriggerAction>;\n  secretKey?: Maybe<Scalars[\"String\"]>;\n  triggerSources?: Maybe<Array<GraphQLWebhookTriggerSource>>;\n};\n\nexport type GraphQLUpdateWebhookInput = {\n  webhookId: Scalars[\"ID\"];\n  name?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  headers?: Maybe<Scalars[\"JSON\"]>;\n  url?: Maybe<Scalars[\"String\"]>;\n  isActive?: Maybe<Scalars[\"Boolean\"]>;\n  includePayload?: Maybe<Scalars[\"Boolean\"]>;\n  stages?: Maybe<Array<Scalars[\"ID\"]>>;\n  models?: Maybe<Array<Scalars[\"ID\"]>>;\n  triggerType?: Maybe<GraphQLWebhookTriggerType>;\n  triggerActions?: Maybe<Array<GraphQLWebhookTriggerAction>>;\n  secretKey?: Maybe<Scalars[\"String\"]>;\n  triggerSources?: Maybe<Array<GraphQLWebhookTriggerSource>>;\n};\n\nexport type GraphQLDeleteWebhookInput = {\n  webhookId: Scalars[\"ID\"];\n};\n\nexport type GraphQLRetriggerWebhookInput = {\n  webhookId: Scalars[\"ID\"];\n  logId: Scalars[\"String\"];\n};\n\nexport type GraphQLRetriggerWebhookPayload = {\n  __typename?: \"RetriggerWebhookPayload\";\n  logId: Scalars[\"String\"];\n};\n\nexport enum GraphQLAvailableExtensionSrcType {\n  Inline = \"INLINE\",\n  Sdk = \"SDK\",\n}\n\nexport enum GraphQLAvailableExtensionPermissionAction {\n  Input = \"INPUT\",\n  Form = \"FORM\",\n  Api = \"API\",\n}\n\nexport enum GraphQLExtensionFieldType {\n  Id = \"ID\",\n  String = \"STRING\",\n  Richtext = \"RICHTEXT\",\n  Int = \"INT\",\n  Float = \"FLOAT\",\n  Boolean = \"BOOLEAN\",\n  Json = \"JSON\",\n  Datetime = \"DATETIME\",\n  Date = \"DATE\",\n  Location = \"LOCATION\",\n  Color = \"COLOR\",\n  Graphql = \"GRAPHQL\",\n  Rest = \"REST\",\n  Enumeration = \"ENUMERATION\",\n  Relation = \"RELATION\",\n  Asset = \"ASSET\",\n  Union = \"UNION\",\n}\n\nexport type GraphQLExtensionSrcType = {\n  __typename?: \"ExtensionSrcType\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  name: Scalars[\"String\"];\n  type: GraphQLAvailableExtensionSrcType;\n};\n\nexport type GraphQLAvailableExtensionPermission = {\n  __typename?: \"AvailableExtensionPermission\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  name: GraphQLAvailableExtensionPermissionAction;\n};\n\nexport type GraphQLIExtension = {\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  createdBy?: Maybe<GraphQLMember>;\n  updatedBy?: Maybe<GraphQLMember>;\n  name?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  apiId: Scalars[\"String\"];\n  /** The type indicating where the source for the extension will be obtained from */\n  srcType: GraphQLExtensionSrcType;\n  /** Location for the source if the source type is an external one */\n  src: Scalars[\"String\"];\n  environment: GraphQLEnvironment;\n  config: Scalars[\"JSON\"];\n  isActive: Scalars[\"Boolean\"];\n  meta?: Maybe<Scalars[\"JSON\"]>;\n  neededPermissions: Array<GraphQLAvailableExtensionPermission>;\n};\n\nexport type GraphQLFieldExtension = GraphQLIExtension & {\n  __typename?: \"FieldExtension\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  createdBy?: Maybe<GraphQLMember>;\n  updatedBy?: Maybe<GraphQLMember>;\n  name?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  apiId: Scalars[\"String\"];\n  /** The type indicating where the source for the extension will be obtained from */\n  srcType: GraphQLExtensionSrcType;\n  /** Location for the source if the source type is an external one */\n  src: Scalars[\"String\"];\n  environment: GraphQLEnvironment;\n  config: Scalars[\"JSON\"];\n  isActive: Scalars[\"Boolean\"];\n  meta?: Maybe<Scalars[\"JSON\"]>;\n  neededPermissions: Array<GraphQLAvailableExtensionPermission>;\n  fieldType: GraphQLExtensionFieldType;\n  hasFormRenderer: Scalars[\"Boolean\"];\n  hasListRenderer: Scalars[\"Boolean\"];\n  hasTableRenderer: Scalars[\"Boolean\"];\n  fields: Array<GraphQLIField>;\n};\n\nexport type GraphQLSidebarExtension = GraphQLIExtension & {\n  __typename?: \"SidebarExtension\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  createdBy?: Maybe<GraphQLMember>;\n  updatedBy?: Maybe<GraphQLMember>;\n  name?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  apiId: Scalars[\"String\"];\n  /** The type indicating where the source for the extension will be obtained from */\n  srcType: GraphQLExtensionSrcType;\n  /** Location for the source if the source type is an external one */\n  src: Scalars[\"String\"];\n  environment: GraphQLEnvironment;\n  config: Scalars[\"JSON\"];\n  isActive: Scalars[\"Boolean\"];\n  meta?: Maybe<Scalars[\"JSON\"]>;\n  neededPermissions: Array<GraphQLAvailableExtensionPermission>;\n  sidebarElements: Array<GraphQLISidebarElement>;\n};\n\nexport type GraphQLCreateFieldExtensionPayload = {\n  __typename?: \"CreateFieldExtensionPayload\";\n  createdExtension: GraphQLFieldExtension;\n};\n\nexport type GraphQLUpdateFieldExtensionPayload = {\n  __typename?: \"UpdateFieldExtensionPayload\";\n  updatedExtension: GraphQLFieldExtension;\n};\n\nexport type GraphQLCreateSidebarExtensionPayload = {\n  __typename?: \"CreateSidebarExtensionPayload\";\n  createdExtension: GraphQLSidebarExtension;\n};\n\nexport type GraphQLUpdateSidebarExtensionPayload = {\n  __typename?: \"UpdateSidebarExtensionPayload\";\n  updatedExtension: GraphQLSidebarExtension;\n};\n\nexport type GraphQLDeleteExtensionPayload = {\n  __typename?: \"DeleteExtensionPayload\";\n  deletedExtensionId: Scalars[\"ID\"];\n};\n\nexport type GraphQLCreateFieldExtensionInput = {\n  environmentId: Scalars[\"ID\"];\n  name?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  apiId: Scalars[\"String\"];\n  srcTypeId: Scalars[\"ID\"];\n  src: Scalars[\"String\"];\n  config: Scalars[\"JSON\"];\n  isActive: Scalars[\"Boolean\"];\n  meta?: Maybe<Scalars[\"JSON\"]>;\n  fieldType: GraphQLExtensionFieldType;\n  hasFormRenderer: Scalars[\"Boolean\"];\n  hasListRenderer: Scalars[\"Boolean\"];\n  hasTableRenderer: Scalars[\"Boolean\"];\n  neededPermissions?: Maybe<Array<Scalars[\"ID\"]>>;\n};\n\nexport type GraphQLUpdateFieldExtensionInput = {\n  extensionId: Scalars[\"ID\"];\n  name?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  apiId: Scalars[\"String\"];\n  srcTypeId?: Maybe<Scalars[\"ID\"]>;\n  src?: Maybe<Scalars[\"String\"]>;\n  config?: Maybe<Scalars[\"JSON\"]>;\n  isActive?: Maybe<Scalars[\"Boolean\"]>;\n  meta?: Maybe<Scalars[\"JSON\"]>;\n  fieldType?: Maybe<GraphQLExtensionFieldType>;\n  hasFormRenderer?: Maybe<Scalars[\"Boolean\"]>;\n  hasListRenderer?: Maybe<Scalars[\"Boolean\"]>;\n  hasTableRenderer?: Maybe<Scalars[\"Boolean\"]>;\n  neededPermissions?: Maybe<Array<GraphQLAvailableExtensionPermissionAction>>;\n};\n\nexport type GraphQLCreateSidebarExtensionInput = {\n  environmentId: Scalars[\"ID\"];\n  name?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  apiId: Scalars[\"String\"];\n  srcTypeId: Scalars[\"ID\"];\n  src: Scalars[\"String\"];\n  config: Scalars[\"JSON\"];\n  isActive: Scalars[\"Boolean\"];\n  meta?: Maybe<Scalars[\"JSON\"]>;\n  neededPermissions?: Maybe<Array<Scalars[\"ID\"]>>;\n};\n\nexport type GraphQLUpdateSidebarExtensionInput = {\n  extensionId: Scalars[\"ID\"];\n  name?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  apiId: Scalars[\"String\"];\n  srcTypeId?: Maybe<Scalars[\"ID\"]>;\n  src?: Maybe<Scalars[\"String\"]>;\n  config?: Maybe<Scalars[\"JSON\"]>;\n  isActive?: Maybe<Scalars[\"Boolean\"]>;\n  meta?: Maybe<Scalars[\"JSON\"]>;\n  neededPermissions?: Maybe<Array<GraphQLAvailableExtensionPermissionAction>>;\n};\n\nexport type GraphQLDeleteExtensionInput = {\n  extensionId: Scalars[\"ID\"];\n};\n\n/** ### APP: */\nexport enum GraphQLAppPublicationStatus {\n  Private = \"PRIVATE\",\n  Pending = \"PENDING\",\n  Public = \"PUBLIC\",\n}\n\nexport type GraphQLApp = {\n  __typename?: \"App\";\n  id: Scalars[\"ID\"];\n  author: Scalars[\"ID\"];\n  name: Scalars[\"String\"];\n  apiId: Scalars[\"String\"];\n  setupUrl: Scalars[\"String\"];\n  webhookUrl?: Maybe<Scalars[\"String\"]>;\n  configurationUrl?: Maybe<Scalars[\"String\"]>;\n  elements?: Maybe<Array<GraphQLIAppElement>>;\n  avatarUrl: Scalars[\"String\"];\n  description: Scalars[\"String\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  publicationStatus: GraphQLAppPublicationStatus;\n};\n\nexport enum GraphQLAppElementType {\n  Field = \"field\",\n  FormSidebar = \"formSidebar\",\n  Page = \"page\",\n}\n\nexport type GraphQLIAppElement = {\n  id: Scalars[\"ID\"];\n  name: Scalars[\"String\"];\n  apiId: Scalars[\"String\"];\n  type: GraphQLAppElementType;\n  description?: Maybe<Scalars[\"String\"]>;\n  config?: Maybe<Scalars[\"JSON\"]>;\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  src: Scalars[\"String\"];\n  app: GraphQLApp;\n};\n\nexport enum GraphQLFieldAppElementFeature {\n  FieldRenderer = \"FieldRenderer\",\n  ListRenderer = \"ListRenderer\",\n  TableRenderer = \"TableRenderer\",\n}\n\nexport type GraphQLFieldAppElement = GraphQLIAppElement & {\n  __typename?: \"FieldAppElement\";\n  id: Scalars[\"ID\"];\n  name: Scalars[\"String\"];\n  apiId: Scalars[\"String\"];\n  type: GraphQLAppElementType;\n  description?: Maybe<Scalars[\"String\"]>;\n  config?: Maybe<Scalars[\"JSON\"]>;\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  src: Scalars[\"String\"];\n  /** --- */\n  features: Array<GraphQLFieldAppElementFeature>;\n  fieldType: GraphQLSimpleFieldType;\n  app: GraphQLApp;\n};\n\nexport type GraphQLFormSidebarAppElement = GraphQLIAppElement & {\n  __typename?: \"FormSidebarAppElement\";\n  id: Scalars[\"ID\"];\n  name: Scalars[\"String\"];\n  apiId: Scalars[\"String\"];\n  type: GraphQLAppElementType;\n  description?: Maybe<Scalars[\"String\"]>;\n  config?: Maybe<Scalars[\"JSON\"]>;\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  src: Scalars[\"String\"];\n  app: GraphQLApp;\n};\n\nexport type GraphQLPageAppElement = GraphQLIAppElement & {\n  __typename?: \"PageAppElement\";\n  id: Scalars[\"ID\"];\n  name: Scalars[\"String\"];\n  apiId: Scalars[\"String\"];\n  type: GraphQLAppElementType;\n  description?: Maybe<Scalars[\"String\"]>;\n  config?: Maybe<Scalars[\"JSON\"]>;\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  src: Scalars[\"String\"];\n  app: GraphQLApp;\n};\n\nexport type GraphQLCreateAppInput = {\n  name: Scalars[\"String\"];\n  apiId: Scalars[\"String\"];\n  setupUrl: Scalars[\"String\"];\n  avatarUrl: Scalars[\"String\"];\n  description: Scalars[\"String\"];\n  webhookUrl?: Maybe<Scalars[\"String\"]>;\n  elements?: Maybe<Array<GraphQLAppElementInput>>;\n  configurationUrl?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLAppElementInput = {\n  id: Scalars[\"ID\"];\n  apiId: Scalars[\"String\"];\n  name: Scalars[\"String\"];\n  type: GraphQLAppElementType;\n  description?: Maybe<Scalars[\"String\"]>;\n  config?: Maybe<Scalars[\"JSON\"]>;\n  src: Scalars[\"String\"];\n  features?: Maybe<Array<GraphQLFieldAppElementFeature>>;\n  fieldType?: Maybe<GraphQLSimpleFieldType>;\n};\n\nexport type GraphQLUpdateAppInput = {\n  apiId: Scalars[\"String\"];\n  name?: Maybe<Scalars[\"String\"]>;\n  setupUrl?: Maybe<Scalars[\"String\"]>;\n  webhookUrl?: Maybe<Scalars[\"String\"]>;\n  elements?: Maybe<Array<GraphQLAppElementInput>>;\n  avatarUrl?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  configurationUrl?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLDeleteAppInput = {\n  apiId: Scalars[\"String\"];\n};\n\nexport type GraphQLCreateAppPayload = {\n  __typename?: \"CreateAppPayload\";\n  createdApp: GraphQLApp;\n};\n\nexport type GraphQLUpdateAppPayload = {\n  __typename?: \"UpdateAppPayload\";\n  updatedApp: GraphQLApp;\n};\n\nexport type GraphQLDeleteAppPayload = {\n  __typename?: \"DeleteAppPayload\";\n  deletedAppId: Scalars[\"ID\"];\n};\n\nexport enum GraphQLAppInstallationStatus {\n  Pending = \"PENDING\",\n  Completed = \"COMPLETED\",\n  Disabled = \"DISABLED\",\n}\n\nexport type GraphQLAppInstallation = {\n  __typename?: \"AppInstallation\";\n  id: Scalars[\"ID\"];\n  environment: GraphQLEnvironment;\n  fields: Array<GraphQLIField>;\n  sidebarElements: Array<GraphQLAppSidebarElement>;\n  app: GraphQLApp;\n  config: Scalars[\"JSON\"];\n  status: GraphQLAppInstallationStatus;\n  authToken: Scalars[\"String\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n};\n\nexport type GraphQLCreateAppInstallationInput = {\n  environment: Scalars[\"ID\"];\n  appApiId: Scalars[\"String\"];\n  status?: Maybe<GraphQLAppInstallationStatus>;\n  config: Scalars[\"JSON\"];\n};\n\nexport type GraphQLUpdateAppInstallationInput = {\n  appInstallationId: Scalars[\"ID\"];\n  config: Scalars[\"JSON\"];\n  status?: Maybe<GraphQLAppInstallationStatus>;\n};\n\nexport type GraphQLDeleteAppInstallationInput = {\n  appInstallationId: Scalars[\"ID\"];\n};\n\nexport type GraphQLCreateAppInstallationPayload = {\n  __typename?: \"CreateAppInstallationPayload\";\n  createdAppInstallation: GraphQLAppInstallation;\n};\n\nexport type GraphQLUpdateAppInstallationPayload = {\n  __typename?: \"UpdateAppInstallationPayload\";\n  updatedAppInstallation: GraphQLAppInstallation;\n};\n\nexport type GraphQLDeleteAppInstallationPayload = {\n  __typename?: \"DeleteAppInstallationPayload\";\n  deletedAppInstallationId: Scalars[\"ID\"];\n};\n\nexport type GraphQLEnumerationValue = {\n  __typename?: \"EnumerationValue\";\n  id: Scalars[\"ID\"];\n  apiId: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n};\n\nexport type GraphQLEnumeration = {\n  __typename?: \"Enumeration\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  apiId: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  environment: GraphQLEnvironment;\n  values: Array<GraphQLEnumerationValue>;\n  isSystem: Scalars[\"Boolean\"];\n};\n\nexport type GraphQLCreateEnumerationInput = {\n  environmentId: Scalars[\"ID\"];\n  apiId: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  values: Array<GraphQLEnumerationValueCreateInput>;\n};\n\nexport type GraphQLDeleteEnumerationInput = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLUpdateEnumerationInput = {\n  id: Scalars[\"ID\"];\n  /**\n   * New Api identifier to use,\n   * will impact Content API\n   */\n  apiId?: Maybe<Scalars[\"String\"]>;\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  /** List of values to create */\n  valuesToCreate?: Maybe<Array<GraphQLEnumerationValueCreateInput>>;\n  /** List of existing values to update */\n  valuesToUpdate?: Maybe<Array<GraphQLEnumerationValueUpdateInput>>;\n  /** List of value IDs to delete */\n  valuesToDelete?: Maybe<Array<Scalars[\"ID\"]>>;\n};\n\nexport type GraphQLEnumerationValueCreateInput = {\n  apiId: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n};\n\nexport type GraphQLEnumerationValueUpdateInput = {\n  id: Scalars[\"ID\"];\n  /** Update enumeration value API identifier */\n  apiId?: Maybe<Scalars[\"String\"]>;\n  displayName?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLIRequireableField = {\n  isRequired: Scalars[\"Boolean\"];\n};\n\nexport type GraphQLIUniqueableField = {\n  isUnique: Scalars[\"Boolean\"];\n};\n\nexport type GraphQLILocalizableField = {\n  isLocalized: Scalars[\"Boolean\"];\n};\n\nexport type GraphQLITitleableField = {\n  isTitle: Scalars[\"Boolean\"];\n};\n\nexport type GraphQLFieldValidationFloatRange = {\n  __typename?: \"FieldValidationFloatRange\";\n  min?: Maybe<Scalars[\"Float\"]>;\n  max?: Maybe<Scalars[\"Float\"]>;\n  errorMessage?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLFieldValidationRange = {\n  __typename?: \"FieldValidationRange\";\n  min?: Maybe<Scalars[\"Int\"]>;\n  max?: Maybe<Scalars[\"Int\"]>;\n  errorMessage?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLFieldValidationRegEx = {\n  __typename?: \"FieldValidationRegEx\";\n  regex?: Maybe<Scalars[\"String\"]>;\n  flags?: Maybe<Array<Scalars[\"String\"]>>;\n  errorMessage?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLFieldValidationIntRange = {\n  __typename?: \"FieldValidationIntRange\";\n  min?: Maybe<Scalars[\"Int\"]>;\n  max?: Maybe<Scalars[\"Int\"]>;\n  errorMessage?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLStringFieldValidations = {\n  __typename?: \"StringFieldValidations\";\n  characters?: Maybe<GraphQLFieldValidationRange>;\n  listItemCount?: Maybe<GraphQLFieldValidationRange>;\n  matches?: Maybe<GraphQLFieldValidationRegEx>;\n  notMatches?: Maybe<GraphQLFieldValidationRegEx>;\n};\n\nexport type GraphQLIntFieldValidations = {\n  __typename?: \"IntFieldValidations\";\n  range?: Maybe<GraphQLFieldValidationRange>;\n  listItemCount?: Maybe<GraphQLFieldValidationRange>;\n};\n\nexport type GraphQLFloatFieldValidations = {\n  __typename?: \"FloatFieldValidations\";\n  range?: Maybe<GraphQLFieldValidationFloatRange>;\n  listItemCount?: Maybe<GraphQLFieldValidationRange>;\n};\n\nexport type GraphQLSimpleFieldValidations =\n  | GraphQLStringFieldValidations\n  | GraphQLIntFieldValidations\n  | GraphQLFloatFieldValidations;\n\nexport type GraphQLIField = {\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  apiId: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  isSystem: Scalars[\"Boolean\"];\n  isList: Scalars[\"Boolean\"];\n  position: Scalars[\"Int\"];\n  /** @deprecated Use visibility instead */\n  isHidden: Scalars[\"Boolean\"];\n  visibility: GraphQLVisibilityTypes;\n  /**\n   * This will throw a runtime error for fields that are on a component instead of model!\n   * @deprecated Use parent instead\n   */\n  model: GraphQLIModel;\n  parent: GraphQLIFieldParent;\n  tableConfig: GraphQLFieldConfig;\n  formConfig: GraphQLFieldConfig;\n  extensions?: Maybe<Scalars[\"JSON\"]>;\n  meta?: Maybe<Scalars[\"JSON\"]>;\n};\n\n/** Field types */\nexport enum GraphQLSimpleFieldType {\n  Id = \"ID\",\n  String = \"STRING\",\n  Richtext = \"RICHTEXT\",\n  Int = \"INT\",\n  Float = \"FLOAT\",\n  Boolean = \"BOOLEAN\",\n  Json = \"JSON\",\n  Datetime = \"DATETIME\",\n  Date = \"DATE\",\n  Location = \"LOCATION\",\n  Color = \"COLOR\",\n}\n\nexport enum GraphQLRemoteFieldType {\n  Graphql = \"GRAPHQL\",\n  Rest = \"REST\",\n}\n\nexport enum GraphQLRemoteFieldApiMethod {\n  Get = \"GET\",\n  Post = \"POST\",\n}\n\nexport enum GraphQLGraphQlRemoteSourceIntrospectionMethod {\n  Get = \"GET\",\n  Post = \"POST\",\n}\n\nexport enum GraphQLEnumerableFieldType {\n  Enumeration = \"ENUMERATION\",\n}\n\nexport enum GraphQLRelationalFieldType {\n  Relation = \"RELATION\",\n  Asset = \"ASSET\",\n}\n\nexport enum GraphQLComponentFieldType {\n  Component = \"COMPONENT\",\n}\n\nexport enum GraphQLUnionFieldType {\n  Union = \"UNION\",\n}\n\nexport enum GraphQLComponentUnionFieldType {\n  ComponentUnion = \"COMPONENT_UNION\",\n}\n\nexport enum GraphQLVisibilityTypes {\n  /** Field can be read and edited */\n  ReadWrite = \"READ_WRITE\",\n  /** Field is shown but can't be edited in the UI, only through the API */\n  ReadOnly = \"READ_ONLY\",\n  /** Field is not shown, but can be used by other fields such as slugs or UI Extensions */\n  Hidden = \"HIDDEN\",\n  /** Field is not shown, and can only be read or edited through the API */\n  ApiOnly = \"API_ONLY\",\n}\n\nexport type GraphQLSimpleField = GraphQLIField &\n  GraphQLIRequireableField &\n  GraphQLIUniqueableField &\n  GraphQLILocalizableField &\n  GraphQLITitleableField & {\n    __typename?: \"SimpleField\";\n    id: Scalars[\"ID\"];\n    type: GraphQLSimpleFieldType;\n    createdAt: Scalars[\"DateTime\"];\n    updatedAt: Scalars[\"DateTime\"];\n    apiId: Scalars[\"String\"];\n    displayName: Scalars[\"String\"];\n    description?: Maybe<Scalars[\"String\"]>;\n    isSystem: Scalars[\"Boolean\"];\n    isList: Scalars[\"Boolean\"];\n    isRequired: Scalars[\"Boolean\"];\n    isUnique: Scalars[\"Boolean\"];\n    position: Scalars[\"Int\"];\n    /** @deprecated Use visibility instead */\n    isHidden: Scalars[\"Boolean\"];\n    visibility: GraphQLVisibilityTypes;\n    isLocalized: Scalars[\"Boolean\"];\n    initialValue?: Maybe<Scalars[\"String\"]>;\n    /**\n     * This will throw a runtime error for fields that are on a component instead of model!\n     * @deprecated Use parent instead\n     */\n    model: GraphQLIModel;\n    parent: GraphQLIFieldParent;\n    isTitle: Scalars[\"Boolean\"];\n    tableConfig: GraphQLFieldConfig;\n    formConfig: GraphQLFieldConfig;\n    extensions?: Maybe<Scalars[\"JSON\"]>;\n    validations?: Maybe<GraphQLSimpleFieldValidations>;\n    meta?: Maybe<Scalars[\"JSON\"]>;\n    embedsEnabled?: Maybe<Scalars[\"Boolean\"]>;\n    /** list of embeddable models */\n    embeddableModels?: Maybe<Array<GraphQLIModel>>;\n  };\n\nexport type GraphQLRemoteTypeDefinition = {\n  __typename?: \"RemoteTypeDefinition\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  apiId: Scalars[\"String\"];\n  sdl: Scalars[\"String\"];\n  graphqlType: GraphQLRemote_Graphql_Type;\n  isSystem: Scalars[\"Boolean\"];\n};\n\nexport type GraphQLIRemoteFieldConfig = {\n  returnType: GraphQLRemoteTypeDefinition;\n  /** Headers that will be sent to the remote source. Those headers will override the headers defined on the remote source if setup */\n  headers?: Maybe<Scalars[\"JSON\"]>;\n  method: GraphQLRemoteFieldApiMethod;\n  cacheTTLSeconds?: Maybe<Scalars[\"Int\"]>;\n  remoteSource: GraphQLIRemoteSource;\n  forwardClientHeaders: Scalars[\"Boolean\"];\n};\n\nexport type GraphQLGraphQlRemoteFieldConfig = GraphQLIRemoteFieldConfig & {\n  __typename?: \"GraphQLRemoteFieldConfig\";\n  returnType: GraphQLRemoteTypeDefinition;\n  headers?: Maybe<Scalars[\"JSON\"]>;\n  method: GraphQLRemoteFieldApiMethod;\n  cacheTTLSeconds?: Maybe<Scalars[\"Int\"]>;\n  forwardClientHeaders: Scalars[\"Boolean\"];\n  /** In case of apiType GraphQL graphqlQuery contains the GraphQL query that will be sent to the remote source */\n  query?: Maybe<Scalars[\"String\"]>;\n  operationName?: Maybe<Scalars[\"String\"]>;\n  remoteSource: GraphQLGraphQlRemoteSource;\n};\n\nexport type GraphQLRestRemoteFieldConfig = GraphQLIRemoteFieldConfig & {\n  __typename?: \"RestRemoteFieldConfig\";\n  returnType: GraphQLRemoteTypeDefinition;\n  headers?: Maybe<Scalars[\"JSON\"]>;\n  method: GraphQLRemoteFieldApiMethod;\n  cacheTTLSeconds?: Maybe<Scalars[\"Int\"]>;\n  forwardClientHeaders: Scalars[\"Boolean\"];\n  path?: Maybe<Scalars[\"String\"]>;\n  remoteSource: GraphQLRestRemoteSource;\n};\n\nexport type GraphQLRemoteField = GraphQLIField & {\n  __typename?: \"RemoteField\";\n  id: Scalars[\"ID\"];\n  type: GraphQLRemoteFieldType;\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  apiId: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  isSystem: Scalars[\"Boolean\"];\n  position: Scalars[\"Int\"];\n  /** @deprecated Use visibility instead */\n  isHidden: Scalars[\"Boolean\"];\n  visibility: GraphQLVisibilityTypes;\n  isList: Scalars[\"Boolean\"];\n  isRequired: Scalars[\"Boolean\"];\n  /**\n   * This will throw a runtime error for fields that are on a component instead of model!\n   * @deprecated Use parent instead\n   */\n  model: GraphQLIModel;\n  parent: GraphQLIFieldParent;\n  tableConfig: GraphQLFieldConfig;\n  formConfig: GraphQLFieldConfig;\n  extensions?: Maybe<Scalars[\"JSON\"]>;\n  meta?: Maybe<Scalars[\"JSON\"]>;\n  remoteConfig: GraphQLIRemoteFieldConfig;\n  inputArgs?: Maybe<Array<GraphQLFieldInputArg>>;\n};\n\nexport type GraphQLEnumerableField = GraphQLIField &\n  GraphQLIRequireableField &\n  GraphQLIUniqueableField &\n  GraphQLILocalizableField &\n  GraphQLITitleableField & {\n    __typename?: \"EnumerableField\";\n    id: Scalars[\"ID\"];\n    createdAt: Scalars[\"DateTime\"];\n    updatedAt: Scalars[\"DateTime\"];\n    type: GraphQLEnumerableFieldType;\n    apiId: Scalars[\"String\"];\n    displayName: Scalars[\"String\"];\n    description?: Maybe<Scalars[\"String\"]>;\n    isSystem: Scalars[\"Boolean\"];\n    isList: Scalars[\"Boolean\"];\n    isRequired: Scalars[\"Boolean\"];\n    isUnique: Scalars[\"Boolean\"];\n    position: Scalars[\"Int\"];\n    /** @deprecated Use visibility instead */\n    isHidden: Scalars[\"Boolean\"];\n    visibility: GraphQLVisibilityTypes;\n    isLocalized: Scalars[\"Boolean\"];\n    initialValue?: Maybe<GraphQLEnumerationValue>;\n    /**\n     * This will throw a runtime error for fields that are on a component instead of model!\n     * @deprecated Use parent instead\n     */\n    model: GraphQLIModel;\n    parent: GraphQLIFieldParent;\n    isTitle: Scalars[\"Boolean\"];\n    tableConfig: GraphQLFieldConfig;\n    formConfig: GraphQLFieldConfig;\n    enumeration: GraphQLEnumeration;\n    extensions?: Maybe<Scalars[\"JSON\"]>;\n    meta?: Maybe<Scalars[\"JSON\"]>;\n  };\n\nexport type GraphQLRelationalField = GraphQLIField &\n  GraphQLIRequireableField & {\n    __typename?: \"RelationalField\";\n    id: Scalars[\"ID\"];\n    createdAt: Scalars[\"DateTime\"];\n    updatedAt: Scalars[\"DateTime\"];\n    type: GraphQLRelationalFieldType;\n    apiId: Scalars[\"String\"];\n    displayName: Scalars[\"String\"];\n    description?: Maybe<Scalars[\"String\"]>;\n    isSystem: Scalars[\"Boolean\"];\n    isList: Scalars[\"Boolean\"];\n    isRequired: Scalars[\"Boolean\"];\n    position: Scalars[\"Int\"];\n    /** @deprecated Use visibility instead */\n    isHidden: Scalars[\"Boolean\"];\n    visibility: GraphQLVisibilityTypes;\n    /**\n     * This will throw a runtime error for fields that are on a component instead of model!\n     * @deprecated Use parent instead\n     */\n    model: GraphQLIModel;\n    parent: GraphQLIFieldParent;\n    tableConfig: GraphQLFieldConfig;\n    formConfig: GraphQLFieldConfig;\n    relatedModel: GraphQLIModel;\n    relatedField: GraphQLRelationalField;\n    extensions?: Maybe<Scalars[\"JSON\"]>;\n    meta?: Maybe<Scalars[\"JSON\"]>;\n  };\n\nexport type GraphQLUniDirectionalRelationalField = GraphQLIField &\n  GraphQLIRequireableField & {\n    __typename?: \"UniDirectionalRelationalField\";\n    id: Scalars[\"ID\"];\n    createdAt: Scalars[\"DateTime\"];\n    updatedAt: Scalars[\"DateTime\"];\n    type: GraphQLRelationalFieldType;\n    apiId: Scalars[\"String\"];\n    displayName: Scalars[\"String\"];\n    description?: Maybe<Scalars[\"String\"]>;\n    isSystem: Scalars[\"Boolean\"];\n    isList: Scalars[\"Boolean\"];\n    isRequired: Scalars[\"Boolean\"];\n    position: Scalars[\"Int\"];\n    /** @deprecated Use visibility instead */\n    isHidden: Scalars[\"Boolean\"];\n    visibility: GraphQLVisibilityTypes;\n    /**\n     * This will throw a runtime error for fields that are on a component instead of model!\n     * @deprecated Use parent instead\n     */\n    model: GraphQLIModel;\n    parent: GraphQLIFieldParent;\n    tableConfig: GraphQLFieldConfig;\n    formConfig: GraphQLFieldConfig;\n    relatedModel: GraphQLIModel;\n    extensions?: Maybe<Scalars[\"JSON\"]>;\n    meta?: Maybe<Scalars[\"JSON\"]>;\n  };\n\nexport type GraphQLComponentField = GraphQLIField &\n  GraphQLIRequireableField & {\n    __typename?: \"ComponentField\";\n    id: Scalars[\"ID\"];\n    createdAt: Scalars[\"DateTime\"];\n    updatedAt: Scalars[\"DateTime\"];\n    type: GraphQLComponentFieldType;\n    apiId: Scalars[\"String\"];\n    displayName: Scalars[\"String\"];\n    description?: Maybe<Scalars[\"String\"]>;\n    isSystem: Scalars[\"Boolean\"];\n    isList: Scalars[\"Boolean\"];\n    isRequired: Scalars[\"Boolean\"];\n    position: Scalars[\"Int\"];\n    /** @deprecated Use visibility instead */\n    isHidden: Scalars[\"Boolean\"];\n    visibility: GraphQLVisibilityTypes;\n    /**\n     * This will throw a runtime error for fields that are on a component instead of model!\n     * @deprecated Use parent instead\n     */\n    model: GraphQLIModel;\n    parent: GraphQLIFieldParent;\n    hasEmptyValues: Scalars[\"Boolean\"];\n    tableConfig: GraphQLFieldConfig;\n    formConfig: GraphQLFieldConfig;\n    component: GraphQLComponent;\n    extensions?: Maybe<Scalars[\"JSON\"]>;\n    meta?: Maybe<Scalars[\"JSON\"]>;\n  };\n\n/** rename to RelationUnionField maybe at some point */\nexport type GraphQLUnionField = GraphQLIField &\n  GraphQLIUnionField & {\n    __typename?: \"UnionField\";\n    id: Scalars[\"ID\"];\n    type: GraphQLUnionFieldType;\n    createdAt: Scalars[\"DateTime\"];\n    updatedAt: Scalars[\"DateTime\"];\n    apiId: Scalars[\"String\"];\n    displayName: Scalars[\"String\"];\n    description?: Maybe<Scalars[\"String\"]>;\n    isSystem: Scalars[\"Boolean\"];\n    isList: Scalars[\"Boolean\"];\n    position: Scalars[\"Int\"];\n    /** @deprecated Use visibility instead */\n    isHidden: Scalars[\"Boolean\"];\n    visibility: GraphQLVisibilityTypes;\n    /**\n     * This will throw a runtime error for fields that are on a component instead of model!\n     * @deprecated Use parent instead\n     */\n    model: GraphQLIModel;\n    parent: GraphQLIFieldParent;\n    tableConfig: GraphQLFieldConfig;\n    formConfig: GraphQLFieldConfig;\n    /** True if this field is the reverse side of the initally created union field */\n    isMemberType: Scalars[\"Boolean\"];\n    union: GraphQLUnion;\n    extensions?: Maybe<Scalars[\"JSON\"]>;\n    meta?: Maybe<Scalars[\"JSON\"]>;\n  };\n\n/** TODO: ModularComponentField is the name the designs use right now?! */\nexport type GraphQLComponentUnionField = GraphQLIField &\n  GraphQLIRequireableField & {\n    __typename?: \"ComponentUnionField\";\n    id: Scalars[\"ID\"];\n    createdAt: Scalars[\"DateTime\"];\n    updatedAt: Scalars[\"DateTime\"];\n    type: GraphQLComponentUnionFieldType;\n    apiId: Scalars[\"String\"];\n    displayName: Scalars[\"String\"];\n    description?: Maybe<Scalars[\"String\"]>;\n    isSystem: Scalars[\"Boolean\"];\n    isList: Scalars[\"Boolean\"];\n    isRequired: Scalars[\"Boolean\"];\n    position: Scalars[\"Int\"];\n    /** @deprecated Use visibility instead */\n    isHidden: Scalars[\"Boolean\"];\n    visibility: GraphQLVisibilityTypes;\n    /**\n     * This will throw a runtime error for fields that are on a component instead of model!\n     * @deprecated Use parent instead\n     */\n    model: GraphQLIModel;\n    parent: GraphQLIFieldParent;\n    tableConfig: GraphQLFieldConfig;\n    formConfig: GraphQLFieldConfig;\n    components: Array<GraphQLComponent>;\n    extensions?: Maybe<Scalars[\"JSON\"]>;\n    meta?: Maybe<Scalars[\"JSON\"]>;\n  };\n\nexport type GraphQLUnion = {\n  __typename?: \"Union\";\n  id: Scalars[\"ID\"];\n  apiId: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  memberTypes: Array<GraphQLUnionField>;\n  field: GraphQLUnionField;\n};\n\nexport type GraphQLIUnionField = {\n  /** True if this field is the reverse side of the initally created union field */\n  isMemberType: Scalars[\"Boolean\"];\n  union: GraphQLUnion;\n};\n\nexport type GraphQLFieldConfig = {\n  __typename?: \"FieldConfig\";\n  config: Scalars[\"JSON\"];\n  id: Scalars[\"String\"];\n  renderer: Scalars[\"String\"];\n  extension?: Maybe<GraphQLFieldExtension>;\n  appInstallation?: Maybe<GraphQLAppInstallation>;\n  appElement?: Maybe<GraphQLFieldAppElement>;\n};\n\nexport type GraphQLMoveFieldPayload = {\n  __typename?: \"MoveFieldPayload\";\n  movedFields: Array<GraphQLIField>;\n};\n\nexport type GraphQLMoveSidebarElementPayload = {\n  __typename?: \"MoveSidebarElementPayload\";\n  movedSidebarElements: Array<GraphQLISidebarElement>;\n};\n\nexport type GraphQLFieldValidationIntRangeInput = {\n  min?: Maybe<Scalars[\"Int\"]>;\n  max?: Maybe<Scalars[\"Int\"]>;\n  errorMessage?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLFieldValidationFloatRangeInput = {\n  min?: Maybe<Scalars[\"Float\"]>;\n  max?: Maybe<Scalars[\"Float\"]>;\n  errorMessage?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLFieldValidationRegExInput = {\n  regex?: Maybe<Scalars[\"String\"]>;\n  flags?: Maybe<Array<Scalars[\"String\"]>>;\n  errorMessage?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLIntFieldValidationsInput = {\n  range?: Maybe<GraphQLFieldValidationIntRangeInput>;\n  listItemCount?: Maybe<GraphQLFieldValidationIntRangeInput>;\n};\n\nexport type GraphQLFloatFieldValidationsInput = {\n  range?: Maybe<GraphQLFieldValidationFloatRangeInput>;\n  listItemCount?: Maybe<GraphQLFieldValidationIntRangeInput>;\n};\n\nexport type GraphQLStringFieldValidationsInput = {\n  characters?: Maybe<GraphQLFieldValidationIntRangeInput>;\n  listItemCount?: Maybe<GraphQLFieldValidationIntRangeInput>;\n  matches?: Maybe<GraphQLFieldValidationRegExInput>;\n  notMatches?: Maybe<GraphQLFieldValidationRegExInput>;\n};\n\nexport type GraphQLSimpleFieldValidationsInput = {\n  Int?: Maybe<GraphQLIntFieldValidationsInput>;\n  Float?: Maybe<GraphQLFloatFieldValidationsInput>;\n  String?: Maybe<GraphQLStringFieldValidationsInput>;\n};\n\nexport type GraphQLEmbeddableModelsInput = {\n  modelsToAdd?: Maybe<Array<Scalars[\"ID\"]>>;\n  modelsToRemove?: Maybe<Array<Scalars[\"ID\"]>>;\n};\n\nexport type GraphQLUpdateSimpleFieldInput = {\n  id: Scalars[\"ID\"];\n  apiId?: Maybe<Scalars[\"String\"]>;\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  isRequired?: Maybe<Scalars[\"Boolean\"]>;\n  isUnique?: Maybe<Scalars[\"Boolean\"]>;\n  isList?: Maybe<Scalars[\"Boolean\"]>;\n  isHidden?: Maybe<Scalars[\"Boolean\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  isLocalized?: Maybe<Scalars[\"Boolean\"]>;\n  isTitle?: Maybe<Scalars[\"Boolean\"]>;\n  initialValue?: Maybe<Scalars[\"String\"]>;\n  migrationValue?: Maybe<Scalars[\"String\"]>;\n  formConfig?: Maybe<GraphQLFieldConfigInput>;\n  tableConfig?: Maybe<GraphQLFieldConfigInput>;\n  extensions?: Maybe<Scalars[\"JSON\"]>;\n  validations?: Maybe<GraphQLSimpleFieldValidationsInput>;\n  meta?: Maybe<Scalars[\"JSON\"]>;\n  embedsEnabled?: Maybe<Scalars[\"Boolean\"]>;\n  /** id's of embeddable models. */\n  embeddableModels?: Maybe<GraphQLEmbeddableModelsInput>;\n};\n\nexport type GraphQLUpdateRemoteFieldInput = {\n  id: Scalars[\"ID\"];\n  apiId?: Maybe<Scalars[\"String\"]>;\n  remoteConfig?: Maybe<GraphQLUpdateRemoteFieldConfigInput>;\n  inputArgs?: Maybe<GraphQLUpsertFieldInputArgInput>;\n  isList?: Maybe<Scalars[\"Boolean\"]>;\n  isRequired?: Maybe<Scalars[\"Boolean\"]>;\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  formConfig?: Maybe<GraphQLFieldConfigInput>;\n  tableConfig?: Maybe<GraphQLFieldConfigInput>;\n  extensions?: Maybe<Scalars[\"JSON\"]>;\n  meta?: Maybe<Scalars[\"JSON\"]>;\n};\n\nexport type GraphQLUpdateEnumerableFieldInput = {\n  id: Scalars[\"ID\"];\n  apiId?: Maybe<Scalars[\"String\"]>;\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  isRequired?: Maybe<Scalars[\"Boolean\"]>;\n  isList?: Maybe<Scalars[\"Boolean\"]>;\n  isUnique?: Maybe<Scalars[\"Boolean\"]>;\n  isHidden?: Maybe<Scalars[\"Boolean\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  isLocalized?: Maybe<Scalars[\"Boolean\"]>;\n  isTitle?: Maybe<Scalars[\"Boolean\"]>;\n  initialValue?: Maybe<Scalars[\"String\"]>;\n  migrationValue?: Maybe<Scalars[\"String\"]>;\n  formConfig?: Maybe<GraphQLFieldConfigInput>;\n  tableConfig?: Maybe<GraphQLFieldConfigInput>;\n  extensions?: Maybe<Scalars[\"JSON\"]>;\n  meta?: Maybe<Scalars[\"JSON\"]>;\n};\n\nexport type GraphQLUpdateRelationalFieldInput = {\n  id: Scalars[\"ID\"];\n  apiId?: Maybe<Scalars[\"String\"]>;\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  isList?: Maybe<Scalars[\"Boolean\"]>;\n  isHidden?: Maybe<Scalars[\"Boolean\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  isUnidirectional?: Maybe<Scalars[\"Boolean\"]>;\n  /**\n   * Marks the field as required.\n   * Note: This is only supported for RelationFieldType ASSET!\n   */\n  isRequired?: Maybe<Scalars[\"Boolean\"]>;\n  tableConfig?: Maybe<GraphQLFieldConfigInput>;\n  formConfig?: Maybe<GraphQLFieldConfigInput>;\n  extensions?: Maybe<Scalars[\"JSON\"]>;\n  meta?: Maybe<Scalars[\"JSON\"]>;\n};\n\nexport type GraphQLUpdateComponentFieldInput = {\n  id: Scalars[\"ID\"];\n  apiId?: Maybe<Scalars[\"String\"]>;\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  isList?: Maybe<Scalars[\"Boolean\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  isRequired?: Maybe<Scalars[\"Boolean\"]>;\n  tableConfig?: Maybe<GraphQLFieldConfigInput>;\n  formConfig?: Maybe<GraphQLFieldConfigInput>;\n  extensions?: Maybe<Scalars[\"JSON\"]>;\n  meta?: Maybe<Scalars[\"JSON\"]>;\n};\n\nexport type GraphQLUpdateComponentUnionFieldInput = {\n  id: Scalars[\"ID\"];\n  components?: Maybe<Array<Scalars[\"ID\"]>>;\n  apiId?: Maybe<Scalars[\"String\"]>;\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  tableConfig?: Maybe<GraphQLFieldConfigInput>;\n  formConfig?: Maybe<GraphQLFieldConfigInput>;\n  extensions?: Maybe<Scalars[\"JSON\"]>;\n  meta?: Maybe<Scalars[\"JSON\"]>;\n};\n\nexport type GraphQLCreateMemberFieldInput = {\n  /** ID of member model to add */\n  modelId: Scalars[\"ID\"];\n  apiId?: Maybe<Scalars[\"String\"]>;\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  isHidden?: Maybe<Scalars[\"Boolean\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  tableConfig?: Maybe<GraphQLFieldConfigInput>;\n  formConfig?: Maybe<GraphQLFieldConfigInput>;\n  extensions?: Maybe<Scalars[\"JSON\"]>;\n  meta?: Maybe<Scalars[\"JSON\"]>;\n};\n\nexport type GraphQLUpdateUnionInput = {\n  apiId?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  displayName?: Maybe<Scalars[\"String\"]>;\n  /** Models and member fields to add */\n  membersToAdd?: Maybe<Array<GraphQLCreateMemberFieldInput>>;\n  /** Models to remove from union (accepts Model ID) */\n  membersToRemove?: Maybe<Array<Scalars[\"ID\"]>>;\n};\n\nexport type GraphQLUpdateUnionFieldInput = {\n  id: Scalars[\"ID\"];\n  union?: Maybe<GraphQLUpdateUnionInput>;\n  apiId?: Maybe<Scalars[\"String\"]>;\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  isHidden?: Maybe<Scalars[\"Boolean\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  tableConfig?: Maybe<GraphQLFieldConfigInput>;\n  formConfig?: Maybe<GraphQLFieldConfigInput>;\n  extensions?: Maybe<Scalars[\"JSON\"]>;\n  meta?: Maybe<Scalars[\"JSON\"]>;\n};\n\nexport type GraphQLFieldConfigInput = {\n  renderer: Scalars[\"String\"];\n  config: Scalars[\"JSON\"];\n  extensionId?: Maybe<Scalars[\"ID\"]>;\n  appInstallationId?: Maybe<Scalars[\"ID\"]>;\n  appElementId?: Maybe<Scalars[\"ID\"]>;\n};\n\nexport type GraphQLFieldConfigUpdateInput = {\n  renderer?: Maybe<Scalars[\"String\"]>;\n  config?: Maybe<Scalars[\"JSON\"]>;\n  extensionId?: Maybe<Scalars[\"ID\"]>;\n};\n\nexport type GraphQLCreateSimpleFieldInput = {\n  modelId?: Maybe<Scalars[\"ID\"]>;\n  /**\n   * This can be a model or component id, modelId must be empty when parentId is used\n   * either modelId or parentId needs to be set and is required via validation, it will be made required.\n   */\n  parentId?: Maybe<Scalars[\"ID\"]>;\n  apiId: Scalars[\"String\"];\n  type: GraphQLSimpleFieldType;\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  isRequired: Scalars[\"Boolean\"];\n  isUnique: Scalars[\"Boolean\"];\n  isList: Scalars[\"Boolean\"];\n  isLocalized: Scalars[\"Boolean\"];\n  isHidden?: Maybe<Scalars[\"Boolean\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  isTitle?: Maybe<Scalars[\"Boolean\"]>;\n  initialValue?: Maybe<Scalars[\"String\"]>;\n  migrationValue?: Maybe<Scalars[\"String\"]>;\n  formConfig?: Maybe<GraphQLFieldConfigInput>;\n  tableConfig?: Maybe<GraphQLFieldConfigInput>;\n  extensions?: Maybe<Scalars[\"JSON\"]>;\n  validations?: Maybe<GraphQLSimpleFieldValidationsInput>;\n  meta?: Maybe<Scalars[\"JSON\"]>;\n  position?: Maybe<Scalars[\"Int\"]>;\n  embedsEnabled?: Maybe<Scalars[\"Boolean\"]>;\n  /** id's of embeddable models. Optional, but should be provided if embedsEnabled is true */\n  embeddableModels?: Maybe<Array<Scalars[\"ID\"]>>;\n};\n\nexport type GraphQLRemoteFieldConfigInput = {\n  /** Remote Type definitions apiId of the type the remote field should return. */\n  returnTypeApiId: Scalars[\"String\"];\n  headers?: Maybe<Scalars[\"JSON\"]>;\n  method: GraphQLRemoteFieldApiMethod;\n  cacheTTLSeconds?: Maybe<Scalars[\"Int\"]>;\n  remoteSourceId: Scalars[\"ID\"];\n  /** In case of apiType GraphQL graphqlQuery contains the GraphQL query that will be sent to the remote source */\n  graphQLQuery?: Maybe<Scalars[\"String\"]>;\n  /** In case of apiType REST restPath contains the path that will be appended to the API base url */\n  restPath?: Maybe<Scalars[\"String\"]>;\n  /** If true, headers that are sent by the client will be forwarded to the remote source */\n  forwardClientHeaders?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type GraphQLUpdateRemoteFieldConfigInput = {\n  /** Remote Type definitions apiId of the type the remote field should return. */\n  returnTypeApiId?: Maybe<Scalars[\"String\"]>;\n  headers?: Maybe<Scalars[\"JSON\"]>;\n  method?: Maybe<GraphQLRemoteFieldApiMethod>;\n  forwardClientHeaders?: Maybe<Scalars[\"Boolean\"]>;\n  /** In case of apiType GraphQL graphqlQuery contains the GraphQL query that will be sent to the remote source */\n  graphQLQuery?: Maybe<Scalars[\"String\"]>;\n  /** In case of apiType REST restPath contains the path that will be appended to the base url of the api */\n  restPath?: Maybe<Scalars[\"String\"]>;\n  cacheTTLSeconds?: Maybe<Scalars[\"Int\"]>;\n  remoteSourceId?: Maybe<Scalars[\"ID\"]>;\n};\n\nexport type GraphQLUpsertFieldInputArgInputToCreateInput = {\n  remoteTypeId: Scalars[\"ID\"];\n  apiId: Scalars[\"String\"];\n  isRequired: Scalars[\"Boolean\"];\n  isList: Scalars[\"Boolean\"];\n};\n\nexport type GraphQLUpsertFieldInputArgInputToUpdateInput = {\n  inputArgId: Scalars[\"ID\"];\n  remoteTypeId?: Maybe<Scalars[\"ID\"]>;\n  apiId?: Maybe<Scalars[\"String\"]>;\n  isRequired?: Maybe<Scalars[\"Boolean\"]>;\n  isList?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type GraphQLUpsertFieldInputArgInputToDeleteInput = {\n  inputArgId: Scalars[\"ID\"];\n};\n\nexport type GraphQLUpsertFieldInputArgInput = {\n  fieldInputArgsToCreate?: Maybe<\n    Array<GraphQLUpsertFieldInputArgInputToCreateInput>\n  >;\n  fieldInputArgsToDelete?: Maybe<\n    Array<GraphQLUpsertFieldInputArgInputToDeleteInput>\n  >;\n  fieldInputArgsToUpdate?: Maybe<\n    Array<GraphQLUpsertFieldInputArgInputToUpdateInput>\n  >;\n};\n\nexport type GraphQLCreateFieldInputArgInput = {\n  remoteTypeId: Scalars[\"ID\"];\n  apiId: Scalars[\"String\"];\n  isRequired: Scalars[\"Boolean\"];\n  isList: Scalars[\"Boolean\"];\n};\n\nexport type GraphQLFieldInputArg = {\n  __typename?: \"FieldInputArg\";\n  id: Scalars[\"ID\"];\n  apiId: Scalars[\"String\"];\n  isRequired: Scalars[\"Boolean\"];\n  isList: Scalars[\"Boolean\"];\n  remoteType: GraphQLRemoteTypeDefinition;\n};\n\nexport type GraphQLBatchMigrationRemoteFieldInputArgInput = {\n  remoteTypeApiId: Scalars[\"String\"];\n  apiId: Scalars[\"String\"];\n  isRequired: Scalars[\"Boolean\"];\n  isList: Scalars[\"Boolean\"];\n};\n\nexport type GraphQLBatchMigrationRemoteFieldConfigInput = {\n  returnTypeApiId: Scalars[\"String\"];\n  headers?: Maybe<Scalars[\"JSON\"]>;\n  method: GraphQLRemoteFieldApiMethod;\n  cacheTTLSeconds?: Maybe<Scalars[\"Int\"]>;\n  remoteSourcePrefix: Scalars[\"String\"];\n  /** In case of apiType GraphQL graphqlQuery contains the GraphQL query that will be sent to the remote source */\n  graphQLQuery?: Maybe<Scalars[\"String\"]>;\n  /** In case of apiType REST restPath contains the path that will be appended to the API base url */\n  restPath?: Maybe<Scalars[\"String\"]>;\n  /** If true, headers that are sent by the client will be forwarded to the remote source */\n  forwardClientHeaders?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type GraphQLBatchMigrationUpdateRemoteFieldConfigInput = {\n  returnTypeApiId?: Maybe<Scalars[\"String\"]>;\n  remoteSourcePrefix?: Maybe<Scalars[\"String\"]>;\n  headers?: Maybe<Scalars[\"JSON\"]>;\n  method?: Maybe<GraphQLRemoteFieldApiMethod>;\n  cacheTTLSeconds?: Maybe<Scalars[\"Int\"]>;\n  /** In case of apiType GraphQL graphqlQuery contains the GraphQL query that will be sent to the remote source */\n  graphQLQuery?: Maybe<Scalars[\"String\"]>;\n  /** In case of apiType REST restPath contains the path that will be appended to the API base url */\n  restPath?: Maybe<Scalars[\"String\"]>;\n  /** If true, headers that are sent by the client will be forwarded to the remote source */\n  forwardClientHeaders?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type GraphQLBatchMigrationUpsertFieldInputArgInputToCreateInput = {\n  remoteTypeApiId: Scalars[\"String\"];\n  apiId: Scalars[\"String\"];\n  isRequired: Scalars[\"Boolean\"];\n  isList: Scalars[\"Boolean\"];\n};\n\nexport type GraphQLBatchMigrationUpsertFieldInputArgInputToUpdateInput = {\n  argApiId: Scalars[\"String\"];\n  remoteTypeApiId?: Maybe<Scalars[\"String\"]>;\n  apiId?: Maybe<Scalars[\"String\"]>;\n  isRequired?: Maybe<Scalars[\"Boolean\"]>;\n  isList?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type GraphQLBatchMigrationUpsertFieldInputArgInputToDeleteInput = {\n  argApiId: Scalars[\"String\"];\n};\n\nexport type GraphQLBatchMigrationUpsertFieldInputArgInput = {\n  fieldInputArgsToCreate?: Maybe<\n    Array<GraphQLBatchMigrationUpsertFieldInputArgInputToCreateInput>\n  >;\n  fieldInputArgsToDelete?: Maybe<\n    Array<GraphQLBatchMigrationUpsertFieldInputArgInputToDeleteInput>\n  >;\n  fieldInputArgsToUpdate?: Maybe<\n    Array<GraphQLBatchMigrationUpsertFieldInputArgInputToUpdateInput>\n  >;\n};\n\nexport type GraphQLCreateRemoteFieldInput = {\n  modelId?: Maybe<Scalars[\"ID\"]>;\n  /**\n   * This can be a model or component id, modelId must be empty when parentId is used\n   * either modelId or parentId needs to be set and is required via validation, it will be made required.\n   */\n  parentId?: Maybe<Scalars[\"ID\"]>;\n  apiId: Scalars[\"String\"];\n  type: GraphQLRemoteFieldType;\n  remoteConfig: GraphQLRemoteFieldConfigInput;\n  inputArgs?: Maybe<Array<GraphQLCreateFieldInputArgInput>>;\n  isList: Scalars[\"Boolean\"];\n  isRequired: Scalars[\"Boolean\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  isHidden?: Maybe<Scalars[\"Boolean\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  formConfig?: Maybe<GraphQLFieldConfigInput>;\n  tableConfig?: Maybe<GraphQLFieldConfigInput>;\n  extensions?: Maybe<Scalars[\"JSON\"]>;\n  meta?: Maybe<Scalars[\"JSON\"]>;\n};\n\nexport type GraphQLCreateEnumerableFieldInput = {\n  modelId?: Maybe<Scalars[\"ID\"]>;\n  /**\n   * This can be a model or component id, modelId must be empty when parentId is used\n   * either modelId or parentId needs to be set and is required via validation, it will be made required.\n   */\n  parentId?: Maybe<Scalars[\"ID\"]>;\n  enumerationId: Scalars[\"ID\"];\n  type: GraphQLEnumerableFieldType;\n  apiId: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  isRequired: Scalars[\"Boolean\"];\n  isList: Scalars[\"Boolean\"];\n  isUnique: Scalars[\"Boolean\"];\n  isHidden?: Maybe<Scalars[\"Boolean\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  isLocalized?: Maybe<Scalars[\"Boolean\"]>;\n  isTitle?: Maybe<Scalars[\"Boolean\"]>;\n  initialValue?: Maybe<Scalars[\"String\"]>;\n  migrationValue?: Maybe<Scalars[\"String\"]>;\n  formConfig?: Maybe<GraphQLFieldConfigInput>;\n  tableConfig?: Maybe<GraphQLFieldConfigInput>;\n  extensions?: Maybe<Scalars[\"JSON\"]>;\n  meta?: Maybe<Scalars[\"JSON\"]>;\n  position?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type GraphQLCreateReverseField = {\n  apiId: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  isList: Scalars[\"Boolean\"];\n  isHidden?: Maybe<Scalars[\"Boolean\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  tableConfig?: Maybe<GraphQLFieldConfigInput>;\n  formConfig?: Maybe<GraphQLFieldConfigInput>;\n  extensions?: Maybe<Scalars[\"JSON\"]>;\n  meta?: Maybe<Scalars[\"JSON\"]>;\n};\n\nexport type GraphQLCreateReverseRelationSide = {\n  modelId: Scalars[\"ID\"];\n  field?: Maybe<GraphQLCreateReverseField>;\n};\n\nexport type GraphQLCreateRelationalFieldInput = {\n  modelId?: Maybe<Scalars[\"ID\"]>;\n  /**\n   * This can be a model or component id, modelId must be empty when parentId is used\n   * either modelId or parentId needs to be set and is required via validation, it will be made required.\n   */\n  parentId?: Maybe<Scalars[\"ID\"]>;\n  type: GraphQLRelationalFieldType;\n  relationApiId?: Maybe<Scalars[\"String\"]>;\n  apiId: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  isList: Scalars[\"Boolean\"];\n  isHidden?: Maybe<Scalars[\"Boolean\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  /**\n   * Marks the field as required.\n   * Note: This is only supported for RelationFieldType ASSET!\n   */\n  isRequired?: Maybe<Scalars[\"Boolean\"]>;\n  reverseSide: GraphQLCreateReverseRelationSide;\n  tableConfig?: Maybe<GraphQLFieldConfigInput>;\n  formConfig?: Maybe<GraphQLFieldConfigInput>;\n  extensions?: Maybe<Scalars[\"JSON\"]>;\n  meta?: Maybe<Scalars[\"JSON\"]>;\n  position?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type GraphQLCreateUnionInput = {\n  apiId: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  displayName: Scalars[\"String\"];\n  /** IDs of models to add to union */\n  modelIds: Array<Scalars[\"ID\"]>;\n};\n\nexport type GraphQLCreateUnionFieldInput = {\n  modelId?: Maybe<Scalars[\"ID\"]>;\n  /**\n   * This can be a model or component id, modelId must be empty when parentId is used\n   * either modelId or parentId needs to be set and is required via validation, it will be made required.\n   */\n  parentId?: Maybe<Scalars[\"ID\"]>;\n  type: GraphQLUnionFieldType;\n  union: GraphQLCreateUnionInput;\n  apiId: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  isList: Scalars[\"Boolean\"];\n  isHidden?: Maybe<Scalars[\"Boolean\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  reverseSide?: Maybe<GraphQLCreateReverseField>;\n  tableConfig?: Maybe<GraphQLFieldConfigInput>;\n  formConfig?: Maybe<GraphQLFieldConfigInput>;\n  extensions?: Maybe<Scalars[\"JSON\"]>;\n  meta?: Maybe<Scalars[\"JSON\"]>;\n  position?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type GraphQLCreateComponentFieldInput = {\n  /** This can be a model or component id */\n  parentId: Scalars[\"ID\"];\n  apiId: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  isList: Scalars[\"Boolean\"];\n  visibility?: GraphQLVisibilityTypes;\n  isRequired: Scalars[\"Boolean\"];\n  component: Scalars[\"ID\"];\n  tableConfig?: Maybe<GraphQLFieldConfigInput>;\n  formConfig?: Maybe<GraphQLFieldConfigInput>;\n  extensions?: Maybe<Scalars[\"JSON\"]>;\n  meta?: Maybe<Scalars[\"JSON\"]>;\n  position?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type GraphQLCreateComponentUnionFieldInput = {\n  /** This can be a model or component id */\n  parentId: Scalars[\"ID\"];\n  apiId: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  isList: Scalars[\"Boolean\"];\n  visibility?: GraphQLVisibilityTypes;\n  components: Array<Scalars[\"ID\"]>;\n  tableConfig?: Maybe<GraphQLFieldConfigInput>;\n  formConfig?: Maybe<GraphQLFieldConfigInput>;\n  extensions?: Maybe<Scalars[\"JSON\"]>;\n  meta?: Maybe<Scalars[\"JSON\"]>;\n  position?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type GraphQLMoveFieldInput = {\n  id: Scalars[\"ID\"];\n  position: Scalars[\"Int\"];\n};\n\nexport type GraphQLMoveSidebarElementInput = {\n  id: Scalars[\"ID\"];\n  position: Scalars[\"Int\"];\n};\n\nexport type GraphQLUpdateSidebarElementInput = {\n  id: Scalars[\"ID\"];\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  config?: Maybe<Scalars[\"JSON\"]>;\n};\n\nexport type GraphQLResetSidebarElementsInput = {\n  modelId: Scalars[\"ID\"];\n};\n\nexport type GraphQLResetSidebarElementsPayload = {\n  __typename?: \"ResetSidebarElementsPayload\";\n  model?: Maybe<GraphQLIModel>;\n};\n\nexport type GraphQLUpdateSidebarElementPayload = {\n  __typename?: \"UpdateSidebarElementPayload\";\n  updatedSidebarElement: GraphQLISidebarElement;\n};\n\nexport type GraphQLCreateCustomSidebarElementInput = {\n  modelId: Scalars[\"ID\"];\n  extensionId?: Maybe<Scalars[\"ID\"]>;\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  config?: Maybe<Scalars[\"JSON\"]>;\n  appElementId?: Maybe<Scalars[\"ID\"]>;\n  appInstallationId?: Maybe<Scalars[\"ID\"]>;\n};\n\nexport type GraphQLCreateSystemSidebarElementInput = {\n  modelId: Scalars[\"ID\"];\n  type: GraphQLSystemSidebarElementType;\n  config?: Maybe<Scalars[\"JSON\"]>;\n};\n\nexport type GraphQLCreateSidebarElementPayload = {\n  __typename?: \"CreateSidebarElementPayload\";\n  createdSidebarElement?: Maybe<GraphQLISidebarElement>;\n};\n\nexport type GraphQLDeleteSidebarElementInput = {\n  sidebarElementId: Scalars[\"ID\"];\n};\n\nexport type GraphQLDeleteSidebarElementPayload = {\n  __typename?: \"DeleteSidebarElementPayload\";\n  deletedSidebarElementId: Scalars[\"ID\"];\n};\n\nexport type GraphQLDeleteFieldInput = {\n  id: Scalars[\"ID\"];\n};\n\n/**\n * This types holds a superset of the allowed read operations on a model.\n * This means even if this states access is allowed, it could still potentially be denied.\n */\nexport type GraphQLModelViewerReadContentPermission = {\n  __typename?: \"ModelViewerReadContentPermission\";\n  allowedWithCondition: Scalars[\"Boolean\"];\n  allowedLocales: Array<GraphQLLocale>;\n};\n\nexport type GraphQLModelViewerReadContentPermissionByStage = {\n  __typename?: \"ModelViewerReadContentPermissionByStage\";\n  stage: GraphQLStage;\n  /**\n   * If the current viewer is allowed to read this models content for the provided stage,\n   * this field will return the potential limitations that must be met.\n   * `null` means not allowed!\n   */\n  allowed?: Maybe<GraphQLModelViewerReadContentPermission>;\n};\n\nexport type GraphQLModelViewerContentPermission = {\n  __typename?: \"ModelViewerContentPermission\";\n  /** Lists all stages and the corresponding read permissions the user has on those stages. */\n  readByStages: Array<GraphQLModelViewerReadContentPermissionByStage>;\n  readVersion: Scalars[\"Boolean\"];\n};\n\n/** Simplified computed version of the permissions the current viewer has on this model */\nexport type GraphQLModelViewerPermission = {\n  __typename?: \"ModelViewerPermission\";\n  content: GraphQLModelViewerContentPermission;\n};\n\nexport type GraphQLIFieldParent = {\n  id: Scalars[\"ID\"];\n  apiId: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n};\n\nexport type GraphQLIModel = {\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  apiId: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  isSystem: Scalars[\"Boolean\"];\n  apiIdPlural: Scalars[\"String\"];\n  isLocalized: Scalars[\"Boolean\"];\n  titleFields: Array<GraphQLIField>;\n  fields: Array<GraphQLIField>;\n  field: GraphQLIField;\n  environment: GraphQLEnvironment;\n  contentViews: Array<GraphQLContentView>;\n  /** Model has at least one document */\n  hasContent: Scalars[\"Boolean\"];\n  isVersioned: Scalars[\"Boolean\"];\n  viewerPermission: GraphQLModelViewerPermission;\n  sidebarElements: Array<GraphQLISidebarElement>;\n  hasLocalizedComponents: Scalars[\"Boolean\"];\n};\n\nexport type GraphQLIModelFieldsArgs = {\n  includeHiddenFields?: Maybe<Scalars[\"Boolean\"]>;\n  includeApiOnlyFields?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type GraphQLIModelFieldArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLIModelContentViewsArgs = {\n  includeSystemContentViews?: Maybe<Scalars[\"Boolean\"]>;\n  filter?: Maybe<GraphQLContentViewFilterInput>;\n};\n\nexport type GraphQLSidebarElements =\n  | GraphQLSystemSidebarElement\n  | GraphQLAppSidebarElement\n  | GraphQLExtensionSidebarElement\n  | GraphQLCustomSidebarElement;\n\nexport type GraphQLISidebarElement = {\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  config?: Maybe<Scalars[\"JSON\"]>;\n  position: Scalars[\"Int\"];\n  isEnabled: Scalars[\"Boolean\"];\n  model: GraphQLIModel;\n};\n\nexport type GraphQLCustomSidebarElement = GraphQLISidebarElement & {\n  __typename?: \"CustomSidebarElement\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  config?: Maybe<Scalars[\"JSON\"]>;\n  position: Scalars[\"Int\"];\n  isEnabled: Scalars[\"Boolean\"];\n  model: GraphQLIModel;\n  extension: GraphQLSidebarExtension;\n};\n\nexport enum GraphQLSystemSidebarElementType {\n  Information = \"INFORMATION\",\n  Stages = \"STAGES\",\n  Localizations = \"LOCALIZATIONS\",\n  Versions = \"VERSIONS\",\n  PreviewUrls = \"PREVIEW_URLS\",\n  Releases = \"RELEASES\",\n}\n\nexport type GraphQLSystemSidebarElement = GraphQLISidebarElement & {\n  __typename?: \"SystemSidebarElement\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  config?: Maybe<Scalars[\"JSON\"]>;\n  position: Scalars[\"Int\"];\n  isEnabled: Scalars[\"Boolean\"];\n  model: GraphQLIModel;\n  type: GraphQLSystemSidebarElementType;\n};\n\nexport type GraphQLExtensionSidebarElement = GraphQLISidebarElement & {\n  __typename?: \"ExtensionSidebarElement\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  config?: Maybe<Scalars[\"JSON\"]>;\n  position: Scalars[\"Int\"];\n  isEnabled: Scalars[\"Boolean\"];\n  model: GraphQLIModel;\n  extension: GraphQLSidebarExtension;\n};\n\nexport type GraphQLAppSidebarElement = GraphQLISidebarElement & {\n  __typename?: \"AppSidebarElement\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  config?: Maybe<Scalars[\"JSON\"]>;\n  position: Scalars[\"Int\"];\n  isEnabled: Scalars[\"Boolean\"];\n  model: GraphQLIModel;\n  appElement: GraphQLFormSidebarAppElement;\n  appInstallation: GraphQLAppInstallation;\n};\n\nexport type GraphQLModel = GraphQLIModel &\n  GraphQLIFieldParent & {\n    __typename?: \"Model\";\n    id: Scalars[\"ID\"];\n    createdAt: Scalars[\"DateTime\"];\n    updatedAt: Scalars[\"DateTime\"];\n    apiId: Scalars[\"String\"];\n    displayName: Scalars[\"String\"];\n    description?: Maybe<Scalars[\"String\"]>;\n    isSystem: Scalars[\"Boolean\"];\n    apiIdPlural: Scalars[\"String\"];\n    /** Is true when at least one field is marked as localized */\n    isLocalized: Scalars[\"Boolean\"];\n    titleFields: Array<GraphQLIField>;\n    fields: Array<GraphQLIField>;\n    field: GraphQLIField;\n    environment: GraphQLEnvironment;\n    contentViews: Array<GraphQLContentView>;\n    /** Model has at least one document */\n    hasContent: Scalars[\"Boolean\"];\n    isVersioned: Scalars[\"Boolean\"];\n    viewerPermission: GraphQLModelViewerPermission;\n    sidebarElements: Array<GraphQLISidebarElement>;\n    hasLocalizedComponents: Scalars[\"Boolean\"];\n  };\n\nexport type GraphQLModelFieldsArgs = {\n  includeHiddenFields?: Maybe<Scalars[\"Boolean\"]>;\n  includeApiOnlyFields?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type GraphQLModelFieldArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLModelContentViewsArgs = {\n  includeSystemContentViews?: Maybe<Scalars[\"Boolean\"]>;\n  filter?: Maybe<GraphQLContentViewFilterInput>;\n};\n\nexport type GraphQLComponent = GraphQLIFieldParent & {\n  __typename?: \"Component\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  apiId: Scalars[\"String\"];\n  apiIdPlural: Scalars[\"String\"];\n  isSystem: Scalars[\"Boolean\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  /** Is true when at least one field is marked as localized */\n  isLocalized: Scalars[\"Boolean\"];\n  titleFields: Array<GraphQLIField>;\n  fields: Array<GraphQLIField>;\n  environment: GraphQLEnvironment;\n  /** Component has at least one instance in any of its usages */\n  hasContent: Scalars[\"Boolean\"];\n};\n\nexport type GraphQLComponentFieldsArgs = {\n  includeHiddenFields?: Maybe<Scalars[\"Boolean\"]>;\n  includeApiOnlyFields?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type GraphQLAssetModel = GraphQLIModel &\n  GraphQLIFieldParent & {\n    __typename?: \"AssetModel\";\n    id: Scalars[\"ID\"];\n    createdAt: Scalars[\"DateTime\"];\n    updatedAt: Scalars[\"DateTime\"];\n    apiId: Scalars[\"String\"];\n    displayName: Scalars[\"String\"];\n    description?: Maybe<Scalars[\"String\"]>;\n    isSystem: Scalars[\"Boolean\"];\n    apiIdPlural: Scalars[\"String\"];\n    isLocalized: Scalars[\"Boolean\"];\n    titleFields: Array<GraphQLIField>;\n    fields: Array<GraphQLIField>;\n    field: GraphQLIField;\n    environment: GraphQLEnvironment;\n    contentViews: Array<GraphQLContentView>;\n    /** Model has at least one document */\n    hasContent: Scalars[\"Boolean\"];\n    isVersioned: Scalars[\"Boolean\"];\n    viewerPermission: GraphQLModelViewerPermission;\n    sidebarElements: Array<GraphQLISidebarElement>;\n    hasLocalizedComponents: Scalars[\"Boolean\"];\n  };\n\nexport type GraphQLAssetModelFieldsArgs = {\n  includeHiddenFields?: Maybe<Scalars[\"Boolean\"]>;\n  includeApiOnlyFields?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type GraphQLAssetModelFieldArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLAssetModelContentViewsArgs = {\n  includeSystemContentViews?: Maybe<Scalars[\"Boolean\"]>;\n  filter?: Maybe<GraphQLContentViewFilterInput>;\n};\n\nexport type GraphQLUserModel = GraphQLIModel &\n  GraphQLIFieldParent & {\n    __typename?: \"UserModel\";\n    id: Scalars[\"ID\"];\n    createdAt: Scalars[\"DateTime\"];\n    updatedAt: Scalars[\"DateTime\"];\n    apiId: Scalars[\"String\"];\n    displayName: Scalars[\"String\"];\n    description?: Maybe<Scalars[\"String\"]>;\n    isSystem: Scalars[\"Boolean\"];\n    apiIdPlural: Scalars[\"String\"];\n    isLocalized: Scalars[\"Boolean\"];\n    titleFields: Array<GraphQLIField>;\n    fields: Array<GraphQLIField>;\n    field: GraphQLIField;\n    environment: GraphQLEnvironment;\n    contentViews: Array<GraphQLContentView>;\n    /** Model has at least one document */\n    hasContent: Scalars[\"Boolean\"];\n    isVersioned: Scalars[\"Boolean\"];\n    viewerPermission: GraphQLModelViewerPermission;\n    sidebarElements: Array<GraphQLISidebarElement>;\n    hasLocalizedComponents: Scalars[\"Boolean\"];\n  };\n\nexport type GraphQLUserModelFieldsArgs = {\n  includeHiddenFields?: Maybe<Scalars[\"Boolean\"]>;\n  includeApiOnlyFields?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type GraphQLUserModelFieldArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLUserModelContentViewsArgs = {\n  includeSystemContentViews?: Maybe<Scalars[\"Boolean\"]>;\n  filter?: Maybe<GraphQLContentViewFilterInput>;\n};\n\nexport type GraphQLSchedulingModel = GraphQLIModel &\n  GraphQLIFieldParent & {\n    __typename?: \"SchedulingModel\";\n    id: Scalars[\"ID\"];\n    createdAt: Scalars[\"DateTime\"];\n    updatedAt: Scalars[\"DateTime\"];\n    apiId: Scalars[\"String\"];\n    displayName: Scalars[\"String\"];\n    description?: Maybe<Scalars[\"String\"]>;\n    isSystem: Scalars[\"Boolean\"];\n    apiIdPlural: Scalars[\"String\"];\n    isLocalized: Scalars[\"Boolean\"];\n    titleFields: Array<GraphQLIField>;\n    fields: Array<GraphQLIField>;\n    field: GraphQLIField;\n    environment: GraphQLEnvironment;\n    contentViews: Array<GraphQLContentView>;\n    /** Model has at least one document */\n    hasContent: Scalars[\"Boolean\"];\n    isVersioned: Scalars[\"Boolean\"];\n    viewerPermission: GraphQLModelViewerPermission;\n    sidebarElements: Array<GraphQLISidebarElement>;\n    hasLocalizedComponents: Scalars[\"Boolean\"];\n  };\n\nexport type GraphQLSchedulingModelFieldsArgs = {\n  includeHiddenFields?: Maybe<Scalars[\"Boolean\"]>;\n  includeApiOnlyFields?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type GraphQLSchedulingModelFieldArgs = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLSchedulingModelContentViewsArgs = {\n  includeSystemContentViews?: Maybe<Scalars[\"Boolean\"]>;\n  filter?: Maybe<GraphQLContentViewFilterInput>;\n};\n\nexport type GraphQLCreateModelInput = {\n  environmentId: Scalars[\"ID\"];\n  apiId: Scalars[\"String\"];\n  apiIdPlural: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLDuplicateModelInput = {\n  modelId: Scalars[\"ID\"];\n  apiId: Scalars[\"String\"];\n  apiIdPlural: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLUpdateModelInput = {\n  id: Scalars[\"ID\"];\n  /**\n   * Rename singular API ID to\n   * specified value\n   */\n  apiId?: Maybe<Scalars[\"String\"]>;\n  /**\n   * Rename plural API ID to\n   * specified value\n   */\n  apiIdPlural?: Maybe<Scalars[\"String\"]>;\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLDeleteModelInput = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLCreateComponentInput = {\n  environmentId: Scalars[\"ID\"];\n  apiId: Scalars[\"String\"];\n  apiIdPlural: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLDuplicateComponentInput = {\n  componentId: Scalars[\"ID\"];\n  apiId: Scalars[\"String\"];\n  apiIdPlural: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLUpdateComponentInput = {\n  id: Scalars[\"ID\"];\n  /**\n   * Rename singular API ID to\n   * specified value\n   */\n  apiId?: Maybe<Scalars[\"String\"]>;\n  /**\n   * Rename plural API ID to\n   * specified value\n   */\n  apiIdPlural?: Maybe<Scalars[\"String\"]>;\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLDeleteComponentInput = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLLocale = {\n  __typename?: \"Locale\";\n  id: Scalars[\"ID\"];\n  createdAt: Scalars[\"DateTime\"];\n  updatedAt: Scalars[\"DateTime\"];\n  /**\n   * Specifies if the locale is used as the\n   * default locale which impacts the Content API\n   */\n  isDefault: Scalars[\"Boolean\"];\n  /**\n   * Determines how the locale is\n   * exposed in the Content API\n   */\n  apiId: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLCreateLocaleInput = {\n  environmentId: Scalars[\"ID\"];\n  apiId: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLUpdateLocaleInput = {\n  /** ID of locale to update */\n  id: Scalars[\"ID\"];\n  /**\n   * Mark locale as default,\n   * will impact the Content API\n   */\n  isDefault?: Maybe<Scalars[\"Boolean\"]>;\n  /**\n   * Rename Locale apiId,\n   * will impact the Content API\n   */\n  apiId?: Maybe<Scalars[\"String\"]>;\n  /**\n   * Update the Locale's\n   * display name\n   */\n  displayName?: Maybe<Scalars[\"String\"]>;\n  /** Update locale description */\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLDeleteLocaleInput = {\n  /** ID of Locale to delete */\n  id: Scalars[\"ID\"];\n  /**\n   * Delete all localizations for this locale.\n   * This will prevent an exception from\n   * being raised if documents were previously\n   * localized in this locale\n   */\n  force?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type GraphQLCreateStageInput = {\n  environmentId: Scalars[\"ID\"];\n  /**\n   * Identifier to be used in\n   * Content API Schema\n   */\n  apiId: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  /** Color that will be used in the webapp */\n  colorPaletteId: GraphQLColorPalette;\n  description?: Maybe<Scalars[\"String\"]>;\n  position?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type GraphQLUpdateStageInput = {\n  /** ID of stage to update */\n  id: Scalars[\"ID\"];\n  /** Color that will be used in the webapp */\n  colorPaletteId?: Maybe<GraphQLColorPalette>;\n  /**\n   * Rename Stage apiId,\n   * will impact the Content API\n   */\n  apiId?: Maybe<Scalars[\"String\"]>;\n  /**\n   * Update the Stage\n   * display name\n   */\n  displayName?: Maybe<Scalars[\"String\"]>;\n  /** Update stage description */\n  description?: Maybe<Scalars[\"String\"]>;\n  position?: Maybe<Scalars[\"Int\"]>;\n};\n\nexport type GraphQLDeleteStageInput = {\n  /** ID of Stage to delete */\n  id: Scalars[\"ID\"];\n  /**\n   * Delete all documents in stage.\n   * This will prevent an exception from\n   * being raised if documents were previously\n   * published to this stage\n   */\n  force?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type GraphQLEnvironmentPermissions = {\n  __typename?: \"EnvironmentPermissions\";\n  /** True if mutations on this stage are allowed */\n  allowMutations: Scalars[\"Boolean\"];\n};\n\n/** Permissions of an environment */\nexport type GraphQLEnvironmentPermissionsInput = {\n  /** True if mutations on this environment are allowed */\n  allowMutations: Scalars[\"Boolean\"];\n};\n\nexport type GraphQLUpdateEnvironmentInput = {\n  /** ID of environment to update */\n  id: Scalars[\"ID\"];\n  /** Update the environment display name */\n  displayName?: Maybe<Scalars[\"String\"]>;\n  /** Update the environment description */\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLUpdateEnvironmentPayload = {\n  __typename?: \"UpdateEnvironmentPayload\";\n  updatedEnvironment: GraphQLEnvironment;\n};\n\nexport type GraphQLQuery = {\n  __typename?: \"Query\";\n  metaInfo: GraphQLMetaInfo;\n  viewer: GraphQLIViewer;\n  /** @deprecated Use viewer instead */\n  _viewer: GraphQLIViewer;\n};\n\nexport type GraphQLAsyncOperationPayload = {\n  __typename?: \"AsyncOperationPayload\";\n  migration: GraphQLMigration;\n};\n\nexport type GraphQLCreateEnvironmentInput = {\n  /**\n   * This will be used in your\n   * API endpoint and has to be\n   * an all-lowercase alphanumeric\n   * string between 1 and 16 characters\n   */\n  name: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  /**\n   * Specify which environment to use\n   * as origin\n   */\n  fromEnvironment: Scalars[\"ID\"];\n  /**\n   * Allows to create environment\n   * with content of origin environment\n   */\n  withContent?: Maybe<Scalars[\"Boolean\"]>;\n  /**\n   * Allows to create environment\n   * with webhooks of the origin environment.\n   * By default cloned environments will get the same webhooks that will be initially deactivated.\n   */\n  withWebhooks?: Scalars[\"Boolean\"];\n};\n\nexport type GraphQLDeleteEnvironmentInput = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLCreateEnvironmentPayload = {\n  __typename?: \"CreateEnvironmentPayload\";\n  createdEnvironment: GraphQLEnvironment;\n};\n\nexport type GraphQLDeleteEnvironmentPayload = {\n  __typename?: \"DeleteEnvironmentPayload\";\n  deletedEnvironmentId: Scalars[\"ID\"];\n};\n\n/** Creating a model. */\nexport type GraphQLBatchMigrationCreateModelInput = {\n  apiId: Scalars[\"String\"];\n  apiIdPlural: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Updating a model. */\nexport type GraphQLBatchMigrationUpdateModelInput = {\n  apiId: Scalars[\"String\"];\n  newApiId?: Maybe<Scalars[\"String\"]>;\n  apiIdPlural?: Maybe<Scalars[\"String\"]>;\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Deleting a model. */\nexport type GraphQLBatchMigrationDeleteModelInput = {\n  apiId: Scalars[\"String\"];\n};\n\n/** Creating a component. */\nexport type GraphQLBatchMigrationCreateComponentInput = {\n  apiId: Scalars[\"String\"];\n  apiIdPlural: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Updating a component. */\nexport type GraphQLBatchMigrationUpdateComponentInput = {\n  apiId: Scalars[\"String\"];\n  newApiId?: Maybe<Scalars[\"String\"]>;\n  apiIdPlural?: Maybe<Scalars[\"String\"]>;\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Deleting a component. */\nexport type GraphQLBatchMigrationDeleteComponentInput = {\n  apiId: Scalars[\"String\"];\n};\n\n/** Creating a custom type definition */\nexport type GraphQLBatchMigrationCreateCustomTypeDefinitionInput = {\n  /**\n   * GraphQL type definition in SDL format\n   * Can be enum or object type\n   */\n  sdl: Scalars[\"String\"];\n};\n\n/** Creating a custom input type definition */\nexport type GraphQLBatchMigrationCreateCustomInputTypeDefinitionInput = {\n  /** GraphQL type input definition in SDL format */\n  sdl: Scalars[\"String\"];\n};\n\n/** Delete an existing custom input type definition */\nexport type GraphQLBatchMigrationDeleteCustomInputTypeDefinitionInput = {\n  apiId: Scalars[\"String\"];\n};\n\n/** Delete an existing custom type definition */\nexport type GraphQLBatchMigrationDeleteRemoteTypeDefinitionInput = {\n  apiId: Scalars[\"String\"];\n};\n\n/** Deleting a stage. */\nexport type GraphQLBatchMigrationDeleteStageInput = {\n  apiId: Scalars[\"String\"];\n};\n\n/** Updating a stage */\nexport type GraphQLBatchMigrationUpdateStageInput = {\n  apiId: Scalars[\"String\"];\n  newApiId?: Maybe<Scalars[\"String\"]>;\n  color?: Maybe<GraphQLColorPalette>;\n  display?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  position?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Creating a stage. */\nexport type GraphQLBatchMigrationCreateStageInput = {\n  apiId: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  color: GraphQLColorPalette;\n  description?: Maybe<Scalars[\"String\"]>;\n  position?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** Deleting a field. */\nexport type GraphQLBatchMigrationDeleteFieldInput = {\n  apiId: Scalars[\"String\"];\n  /** either modelApiId or parentApiId needs to be set */\n  modelApiId?: Maybe<Scalars[\"String\"]>;\n  parentApiId?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Creating a simple field. */\nexport type GraphQLBatchMigrationEmbeddableModelsInput = {\n  modelsToAdd?: Maybe<Array<Scalars[\"String\"]>>;\n  modelsToRemove?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\n/** Creating a simple field. */\nexport type GraphQLBatchMigrationCreateSimpleFieldInput = {\n  apiId: Scalars[\"String\"];\n  /** either modelApiId or parentApiId needs to be set */\n  modelApiId?: Maybe<Scalars[\"String\"]>;\n  parentApiId?: Maybe<Scalars[\"String\"]>;\n  type: GraphQLSimpleFieldType;\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  tableRenderer?: Maybe<Scalars[\"String\"]>;\n  formRenderer?: Maybe<Scalars[\"String\"]>;\n  tableExtension?: Maybe<Scalars[\"String\"]>;\n  formExtension?: Maybe<Scalars[\"String\"]>;\n  formConfig?: Maybe<Scalars[\"JSON\"]>;\n  tableConfig?: Maybe<Scalars[\"JSON\"]>;\n  isList?: Maybe<Scalars[\"Boolean\"]>;\n  isLocalized?: Maybe<Scalars[\"Boolean\"]>;\n  isRequired?: Maybe<Scalars[\"Boolean\"]>;\n  isUnique?: Maybe<Scalars[\"Boolean\"]>;\n  isHidden?: Maybe<Scalars[\"Boolean\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  isTitle?: Maybe<Scalars[\"Boolean\"]>;\n  position?: Maybe<Scalars[\"Int\"]>;\n  validations?: Maybe<GraphQLSimpleFieldValidationsInput>;\n  migrationValue?: Maybe<Scalars[\"String\"]>;\n  embedsEnabled?: Maybe<Scalars[\"Boolean\"]>;\n  /** id's of embeddable models. Optional, but should be provided if embedsEnabled is true */\n  embeddableModels?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\n/**\n * \"\"\"\n * Creating a remote field.\n * \"\"\"\n */\nexport type GraphQLBatchMigrationCreateRemoteFieldInput = {\n  apiId: Scalars[\"String\"];\n  parentApiId: Scalars[\"String\"];\n  type: GraphQLRemoteFieldType;\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  tableRenderer?: Maybe<Scalars[\"String\"]>;\n  formRenderer?: Maybe<Scalars[\"String\"]>;\n  tableExtension?: Maybe<Scalars[\"String\"]>;\n  formExtension?: Maybe<Scalars[\"String\"]>;\n  formConfig?: Maybe<Scalars[\"JSON\"]>;\n  tableConfig?: Maybe<Scalars[\"JSON\"]>;\n  isList?: Maybe<Scalars[\"Boolean\"]>;\n  isRequired?: Maybe<Scalars[\"Boolean\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  position?: Maybe<Scalars[\"Int\"]>;\n  remoteConfig: GraphQLBatchMigrationRemoteFieldConfigInput;\n  inputArgs?: Maybe<Array<GraphQLBatchMigrationRemoteFieldInputArgInput>>;\n};\n\nexport type GraphQLBatchMigrationUpdateRemoteFieldInput = {\n  apiId: Scalars[\"String\"];\n  newApiId?: Maybe<Scalars[\"String\"]>;\n  parentApiId: Scalars[\"String\"];\n  remoteConfig?: Maybe<GraphQLBatchMigrationUpdateRemoteFieldConfigInput>;\n  inputArgs?: Maybe<GraphQLBatchMigrationUpsertFieldInputArgInput>;\n  isList?: Maybe<Scalars[\"Boolean\"]>;\n  isRequired?: Maybe<Scalars[\"Boolean\"]>;\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  formConfig?: Maybe<GraphQLFieldConfigInput>;\n  tableConfig?: Maybe<GraphQLFieldConfigInput>;\n  extensions?: Maybe<Scalars[\"JSON\"]>;\n  meta?: Maybe<Scalars[\"JSON\"]>;\n};\n\n/** Creating an enumerable field. */\nexport type GraphQLBatchMigrationCreateEnumerableFieldInput = {\n  apiId: Scalars[\"String\"];\n  /** either modelApiId or parentApiId needs to be set */\n  modelApiId?: Maybe<Scalars[\"String\"]>;\n  parentApiId?: Maybe<Scalars[\"String\"]>;\n  enumerationApiId: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  tableRenderer?: Maybe<Scalars[\"String\"]>;\n  formRenderer?: Maybe<Scalars[\"String\"]>;\n  tableExtension?: Maybe<Scalars[\"String\"]>;\n  formExtension?: Maybe<Scalars[\"String\"]>;\n  isList?: Maybe<Scalars[\"Boolean\"]>;\n  isLocalized?: Maybe<Scalars[\"Boolean\"]>;\n  isRequired?: Maybe<Scalars[\"Boolean\"]>;\n  isUnique?: Maybe<Scalars[\"Boolean\"]>;\n  isHidden?: Maybe<Scalars[\"Boolean\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  isTitle?: Maybe<Scalars[\"Boolean\"]>;\n  position?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** updating a union field */\nexport type GraphQLBatchMigrationUpdateUnionFieldInput = {\n  apiId: Scalars[\"String\"];\n  newApiId?: Maybe<Scalars[\"String\"]>;\n  /** either modelApiId or parentApiId needs to be set */\n  modelApiId?: Maybe<Scalars[\"String\"]>;\n  parentApiId?: Maybe<Scalars[\"String\"]>;\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  reverseField?: Maybe<GraphQLBatchMigrationUpdateReverseUnionFieldInput>;\n};\n\n/** Creating a union field */\nexport type GraphQLBatchMigrationCreateUnionFieldInput = {\n  apiId: Scalars[\"String\"];\n  /** either modelApiId or parentApiId needs to be set */\n  modelApiId?: Maybe<Scalars[\"String\"]>;\n  parentApiId?: Maybe<Scalars[\"String\"]>;\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  tableRenderer?: Maybe<Scalars[\"String\"]>;\n  formRenderer?: Maybe<Scalars[\"String\"]>;\n  tableExtension?: Maybe<Scalars[\"String\"]>;\n  formExtension?: Maybe<Scalars[\"String\"]>;\n  isList?: Maybe<Scalars[\"Boolean\"]>;\n  isHidden?: Maybe<Scalars[\"Boolean\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  reverseField: GraphQLBatchMigrationCreateReverseUnionFieldInput;\n};\n\n/** updating a component-union field */\nexport type GraphQLBatchMigrationUpdateComponentUnionFieldInput = {\n  apiId: Scalars[\"String\"];\n  newApiId?: Maybe<Scalars[\"String\"]>;\n  parentApiId: Scalars[\"String\"];\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  componentApiIds?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\n/** Creating a component-union field */\nexport type GraphQLBatchMigrationCreateComponentUnionFieldInput = {\n  apiId: Scalars[\"String\"];\n  parentApiId: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  tableRenderer?: Maybe<Scalars[\"String\"]>;\n  formRenderer?: Maybe<Scalars[\"String\"]>;\n  tableExtension?: Maybe<Scalars[\"String\"]>;\n  formExtension?: Maybe<Scalars[\"String\"]>;\n  isList?: Maybe<Scalars[\"Boolean\"]>;\n  isRequired?: Maybe<Scalars[\"Boolean\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  componentApiIds: Array<Scalars[\"String\"]>;\n};\n\n/** reverse field args */\nexport type GraphQLBatchMigrationCreateReverseUnionFieldInput = {\n  apiId?: Maybe<Scalars[\"String\"]>;\n  modelApiIds: Array<Scalars[\"String\"]>;\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  isList?: Maybe<Scalars[\"Boolean\"]>;\n  isHidden?: Maybe<Scalars[\"Boolean\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n};\n\n/** reverse field args */\nexport type GraphQLBatchMigrationUpdateReverseUnionFieldInput = {\n  modelApiIds: Array<Scalars[\"String\"]>;\n};\n\n/** Creating a relational field */\nexport type GraphQLBatchMigrationCreateRelationalFieldInput = {\n  apiId: Scalars[\"String\"];\n  /** either modelApiId or parentApiId needs to be set */\n  modelApiId?: Maybe<Scalars[\"String\"]>;\n  parentApiId?: Maybe<Scalars[\"String\"]>;\n  type: GraphQLRelationalFieldType;\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  tableRenderer?: Maybe<Scalars[\"String\"]>;\n  formRenderer?: Maybe<Scalars[\"String\"]>;\n  tableExtension?: Maybe<Scalars[\"String\"]>;\n  formExtension?: Maybe<Scalars[\"String\"]>;\n  isList?: Maybe<Scalars[\"Boolean\"]>;\n  /**\n   * Marks the field as required.\n   * Note: This is only supported for RelationFieldType ASSET!\n   */\n  isRequired?: Maybe<Scalars[\"Boolean\"]>;\n  isHidden?: Maybe<Scalars[\"Boolean\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  reverseField: GraphQLBatchMigrationCreateReverseRelationalFieldInput;\n};\n\n/** Creating a component field */\nexport type GraphQLBatchMigrationCreateComponentFieldInput = {\n  apiId: Scalars[\"String\"];\n  /** model or content */\n  parentApiId: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  tableRenderer?: Maybe<Scalars[\"String\"]>;\n  formRenderer?: Maybe<Scalars[\"String\"]>;\n  tableExtension?: Maybe<Scalars[\"String\"]>;\n  formExtension?: Maybe<Scalars[\"String\"]>;\n  isList?: Maybe<Scalars[\"Boolean\"]>;\n  isRequired?: Maybe<Scalars[\"Boolean\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  componentApiId: Scalars[\"String\"];\n  position?: Maybe<Scalars[\"Int\"]>;\n};\n\n/** reverse field args */\nexport type GraphQLBatchMigrationCreateReverseRelationalFieldInput = {\n  apiId: Scalars[\"String\"];\n  modelApiId: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  isList?: Maybe<Scalars[\"Boolean\"]>;\n  isHidden?: Maybe<Scalars[\"Boolean\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  isUnidirectional?: Maybe<Scalars[\"Boolean\"]>;\n};\n\n/** Updating relational field */\nexport type GraphQLBatchMigrationUpdateRelationalFieldInput = {\n  apiId: Scalars[\"String\"];\n  newApiId?: Maybe<Scalars[\"String\"]>;\n  /** either modelApiId or parentApiId needs to be set */\n  modelApiId?: Maybe<Scalars[\"String\"]>;\n  parentApiId?: Maybe<Scalars[\"String\"]>;\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  isList?: Maybe<Scalars[\"Boolean\"]>;\n  isHidden?: Maybe<Scalars[\"Boolean\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  isUnidirectional?: Maybe<Scalars[\"Boolean\"]>;\n  /**\n   * Marks the field as required.\n   * Note: This is only supported for RelationFieldType ASSET!\n   */\n  isRequired?: Maybe<Scalars[\"Boolean\"]>;\n};\n\n/** Updating component field */\nexport type GraphQLBatchMigrationUpdateComponentFieldInput = {\n  apiId: Scalars[\"String\"];\n  newApiId?: Maybe<Scalars[\"String\"]>;\n  parentApiId: Scalars[\"String\"];\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  isList?: Maybe<Scalars[\"Boolean\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  isRequired?: Maybe<Scalars[\"Boolean\"]>;\n};\n\n/** Updating simple field */\nexport type GraphQLBatchMigrationUpdateSimpleFieldInput = {\n  apiId: Scalars[\"String\"];\n  newApiId?: Maybe<Scalars[\"String\"]>;\n  /** either modelApiId or parentApiId needs to be set */\n  modelApiId?: Maybe<Scalars[\"String\"]>;\n  parentApiId?: Maybe<Scalars[\"String\"]>;\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  isList?: Maybe<Scalars[\"Boolean\"]>;\n  isLocalized?: Maybe<Scalars[\"Boolean\"]>;\n  isRequired?: Maybe<Scalars[\"Boolean\"]>;\n  isUnique?: Maybe<Scalars[\"Boolean\"]>;\n  isHidden?: Maybe<Scalars[\"Boolean\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  isTitle?: Maybe<Scalars[\"Boolean\"]>;\n  position?: Maybe<Scalars[\"Int\"]>;\n  initialValue?: Maybe<Scalars[\"String\"]>;\n  migrationValue?: Maybe<Scalars[\"String\"]>;\n  validations?: Maybe<GraphQLSimpleFieldValidationsInput>;\n  embedsEnabled?: Maybe<Scalars[\"Boolean\"]>;\n  tableRenderer?: Maybe<Scalars[\"String\"]>;\n  formRenderer?: Maybe<Scalars[\"String\"]>;\n  tableExtension?: Maybe<Scalars[\"String\"]>;\n  formExtension?: Maybe<Scalars[\"String\"]>;\n  formConfig?: Maybe<Scalars[\"JSON\"]>;\n  tableConfig?: Maybe<Scalars[\"JSON\"]>;\n  /** id's of embeddable models. */\n  embeddableModels?: Maybe<GraphQLBatchMigrationEmbeddableModelsInput>;\n};\n\n/** Updating enumerable field */\nexport type GraphQLBatchMigrationUpdateEnumerableFieldInput = {\n  apiId: Scalars[\"String\"];\n  newApiId?: Maybe<Scalars[\"String\"]>;\n  /** either modelApiId or parentApiId needs to be set */\n  modelApiId?: Maybe<Scalars[\"String\"]>;\n  parentApiId?: Maybe<Scalars[\"String\"]>;\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  isList?: Maybe<Scalars[\"Boolean\"]>;\n  isLocalized?: Maybe<Scalars[\"Boolean\"]>;\n  isRequired?: Maybe<Scalars[\"Boolean\"]>;\n  isUnique?: Maybe<Scalars[\"Boolean\"]>;\n  isHidden?: Maybe<Scalars[\"Boolean\"]>;\n  visibility?: Maybe<GraphQLVisibilityTypes>;\n  isTitle?: Maybe<Scalars[\"Boolean\"]>;\n  position?: Maybe<Scalars[\"Int\"]>;\n  initialValue?: Maybe<Scalars[\"String\"]>;\n  migrationValue?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Deleting enumarable field */\nexport type GraphQLBatchMigrationDeleteEnumerationInput = {\n  apiId: Scalars[\"String\"];\n};\n\n/** Creating enumeration */\nexport type GraphQLBatchMigrationCreateEnumerationInput = {\n  apiId: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  values: Array<GraphQLBatchMigrationCreateEnumerationValueInput>;\n};\n\n/** Updating enumeration */\nexport type GraphQLBatchMigrationUpdateEnumerationInput = {\n  apiId: Scalars[\"String\"];\n  newApiId?: Maybe<Scalars[\"String\"]>;\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  valuesToCreate?: Maybe<\n    Array<GraphQLBatchMigrationCreateEnumerationValueInput>\n  >;\n  valuesToUpdate?: Maybe<\n    Array<GraphQLBatchMigrationUpdateEnumerationValueInput>\n  >;\n  valuesToDelete?: Maybe<Array<Scalars[\"String\"]>>;\n};\n\n/** enumeration value */\nexport type GraphQLBatchMigrationCreateEnumerationValueInput = {\n  apiId: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n};\n\n/** update enumeration value */\nexport type GraphQLBatchMigrationUpdateEnumerationValueInput = {\n  apiId: Scalars[\"String\"];\n  newApiId?: Maybe<Scalars[\"String\"]>;\n  displayName?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Creating locale */\nexport type GraphQLBatchMigrationCreateLocaleInput = {\n  apiId: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Updating locale */\nexport type GraphQLBatchMigrationUpdateLocaleInput = {\n  apiId: Scalars[\"String\"];\n  newApiId?: Maybe<Scalars[\"String\"]>;\n  isDefault?: Maybe<Scalars[\"Boolean\"]>;\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Deleting locale */\nexport type GraphQLBatchMigrationDeleteLocaleInput = {\n  apiId: Scalars[\"String\"];\n  force?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type GraphQLBatchMigrationCreateGraphQlRemoteSourceInput = {\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  /** Unique prefix that will be prepended to all of the remote types. This value cannot be changed! */\n  prefix: Scalars[\"String\"];\n  url: Scalars[\"String\"];\n  headers?: Maybe<Scalars[\"JSON\"]>;\n  /**\n   * Specific URL that will be used for introspection if the introspection is available on another url than the regular url.\n   * Can be ignored if the introspection url is the same as the url of the remote source.\n   */\n  introspectionUrl?: Maybe<Scalars[\"String\"]>;\n  /** HTTP method that will be used for introspection */\n  introspectionMethod: GraphQLGraphQlRemoteSourceIntrospectionMethod;\n  /** HTTP headers that will be used for introspection */\n  introspectionHeaders?: Maybe<Scalars[\"JSON\"]>;\n  /** Custom GraphQL input types that can be used as arguments in remote fields that belong to this remoteSource */\n  remoteTypeDefinitions?: Maybe<\n    GraphQLBatchMigrationCreateRemoteTypeDefinitionInput\n  >;\n  debugEnabled?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type GraphQLBatchMigrationUpdateGraphQlRemoteSourceInput = {\n  prefix: Scalars[\"String\"];\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  url?: Maybe<Scalars[\"String\"]>;\n  headers?: Maybe<Scalars[\"JSON\"]>;\n  introspectionUrl?: Maybe<Scalars[\"String\"]>;\n  introspectionMethod?: Maybe<GraphQLGraphQlRemoteSourceIntrospectionMethod>;\n  introspectionHeaders?: Maybe<Scalars[\"JSON\"]>;\n  remoteTypeDefinitionsToUpsert?: Maybe<\n    GraphQLBatchMigrationUpsertRemoteTypeDefinitionsInput\n  >;\n  debugEnabled?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type GraphQLBatchMigrationCreateRestRemoteSourceInput = {\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  /** Unique prefix that will be prepended to all of the remote types. This value cannot be changed! */\n  prefix: Scalars[\"String\"];\n  url: Scalars[\"String\"];\n  headers?: Maybe<Scalars[\"JSON\"]>;\n  /** Remote type definitions that the remote source supports or input types that can be used by any remote field of this remote source */\n  remoteTypeDefinitions?: Maybe<\n    GraphQLBatchMigrationCreateRemoteTypeDefinitionInput\n  >;\n  debugEnabled?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type GraphQLBatchMigrationUpdateRestRemoteSourceInput = {\n  prefix: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  url?: Maybe<Scalars[\"String\"]>;\n  headers?: Maybe<Scalars[\"JSON\"]>;\n  remoteTypeDefinitionsToUpsert?: Maybe<\n    GraphQLBatchMigrationUpsertRemoteTypeDefinitionsInput\n  >;\n  debugEnabled?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type GraphQLBatchMigrationCreateRemoteTypeDefinitionInput = {\n  sdl: Scalars[\"String\"];\n};\n\nexport type GraphQLBatchMigrationDeleteRemoteSourceInput = {\n  prefix: Scalars[\"String\"];\n};\n\nexport type GraphQLBatchMigrationChangeInput = {\n  /** Models */\n  createModel?: Maybe<GraphQLBatchMigrationCreateModelInput>;\n  updateModel?: Maybe<GraphQLBatchMigrationUpdateModelInput>;\n  deleteModel?: Maybe<GraphQLBatchMigrationDeleteModelInput>;\n  /** Components */\n  createComponent?: Maybe<GraphQLBatchMigrationCreateComponentInput>;\n  updateComponent?: Maybe<GraphQLBatchMigrationUpdateComponentInput>;\n  deleteComponent?: Maybe<GraphQLBatchMigrationDeleteComponentInput>;\n  /** Fields */\n  createSimpleField?: Maybe<GraphQLBatchMigrationCreateSimpleFieldInput>;\n  updateSimpleField?: Maybe<GraphQLBatchMigrationUpdateSimpleFieldInput>;\n  createRemoteField?: Maybe<GraphQLBatchMigrationCreateRemoteFieldInput>;\n  updateRemoteField?: Maybe<GraphQLBatchMigrationUpdateRemoteFieldInput>;\n  createRelationalField?: Maybe<\n    GraphQLBatchMigrationCreateRelationalFieldInput\n  >;\n  updateRelationalField?: Maybe<\n    GraphQLBatchMigrationUpdateRelationalFieldInput\n  >;\n  createUnionField?: Maybe<GraphQLBatchMigrationCreateUnionFieldInput>;\n  updateUnionField?: Maybe<GraphQLBatchMigrationUpdateUnionFieldInput>;\n  createComponentField?: Maybe<GraphQLBatchMigrationCreateComponentFieldInput>;\n  updateComponentField?: Maybe<GraphQLBatchMigrationUpdateComponentFieldInput>;\n  createComponentUnionField?: Maybe<\n    GraphQLBatchMigrationCreateComponentUnionFieldInput\n  >;\n  updateComponentUnionField?: Maybe<\n    GraphQLBatchMigrationUpdateComponentUnionFieldInput\n  >;\n  createEnumerableField?: Maybe<\n    GraphQLBatchMigrationCreateEnumerableFieldInput\n  >;\n  updateEnumerableField?: Maybe<\n    GraphQLBatchMigrationUpdateEnumerableFieldInput\n  >;\n  deleteField?: Maybe<GraphQLBatchMigrationDeleteFieldInput>;\n  /** Enumerations */\n  createEnumeration?: Maybe<GraphQLBatchMigrationCreateEnumerationInput>;\n  updateEnumeration?: Maybe<GraphQLBatchMigrationUpdateEnumerationInput>;\n  deleteEnumeration?: Maybe<GraphQLBatchMigrationDeleteEnumerationInput>;\n  /** Stage */\n  createStage?: Maybe<GraphQLBatchMigrationCreateStageInput>;\n  deleteStage?: Maybe<GraphQLBatchMigrationDeleteStageInput>;\n  updateStage?: Maybe<GraphQLBatchMigrationUpdateStageInput>;\n  /** Locale */\n  createLocale?: Maybe<GraphQLBatchMigrationCreateLocaleInput>;\n  deleteLocale?: Maybe<GraphQLBatchMigrationDeleteLocaleInput>;\n  updateLocale?: Maybe<GraphQLBatchMigrationUpdateLocaleInput>;\n  /** Remote Sources */\n  createGraphQLRemoteSource?: Maybe<\n    GraphQLBatchMigrationCreateGraphQlRemoteSourceInput\n  >;\n  updateGraphQLRemoteSource?: Maybe<\n    GraphQLBatchMigrationUpdateGraphQlRemoteSourceInput\n  >;\n  createRESTRemoteSource?: Maybe<\n    GraphQLBatchMigrationCreateRestRemoteSourceInput\n  >;\n  updateRESTRemoteSource?: Maybe<\n    GraphQLBatchMigrationUpdateRestRemoteSourceInput\n  >;\n  deleteRemoteSource?: Maybe<GraphQLBatchMigrationDeleteRemoteSourceInput>;\n};\n\nexport type GraphQLDiffEnvironmentPayload = {\n  __typename?: \"DiffEnvironmentPayload\";\n  changes: Array<Scalars[\"JSON\"]>;\n};\n\nexport type GraphQLBatchMigrationInput = {\n  environmentId: Scalars[\"ID\"];\n  name?: Maybe<Scalars[\"String\"]>;\n  changes: Array<GraphQLBatchMigrationChangeInput>;\n};\n\nexport type GraphQLNetlifySiteInput = {\n  id: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n};\n\nexport type GraphQLVercelProjectInput = {\n  id: Scalars[\"String\"];\n  ref: Scalars[\"String\"];\n  displayName: Scalars[\"String\"];\n};\n\nexport type GraphQLCreateNetlifyIntegrationInput = {\n  environmentId: Scalars[\"ID\"];\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  /**\n   * A selection of models where the integration should be displayed in the frontend.\n   * If the integration should be displayed on every model, pass null or an empty array here.\n   */\n  models?: Maybe<Array<Scalars[\"ID\"]>>;\n  sites: Array<GraphQLNetlifySiteInput>;\n  /**\n   * This token is used to create the needed BuildHook and BuildNotifications in Netlify.\n   * This token is only used once and won't be stored anywhere\n   */\n  accessToken: Scalars[\"String\"];\n};\n\nexport type GraphQLCreateVercelIntegrationInput = {\n  environmentId: Scalars[\"ID\"];\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  /**\n   * A selection of models where the integration should be displayed in the frontend.\n   * If the integration should be displayed on every model, pass null or an empty array here.\n   */\n  models?: Maybe<Array<Scalars[\"ID\"]>>;\n  projects: Array<GraphQLVercelProjectInput>;\n  /**\n   * This token is used to create the needed BuildHook and BuildNotifications in Netlify.\n   * This token is only used once and won't be stored anywhere\n   */\n  accessToken: Scalars[\"String\"];\n};\n\nexport type GraphQLCreateGatsbyCloudIntegrationInput = {\n  environmentId: Scalars[\"ID\"];\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  /**\n   * Prefix of your site\n   * Only lower case alphabetical characters, numbers and underscores are allowed.\n   */\n  sitePrefix: Scalars[\"String\"];\n  /** URL to trigger a Deploy Build. */\n  buildWebhookURL: Scalars[\"String\"];\n  /** URL to trigger a CMS Preview build. */\n  previewWebhookURL: Scalars[\"String\"];\n};\n\nexport type GraphQLUpdateNetlifyIntegrationInput = {\n  integrationId: Scalars[\"ID\"];\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  models?: Maybe<Array<Scalars[\"ID\"]>>;\n  /** Overrides the currently setup netlify sites. Omit if you don't want to update the existing sites. */\n  sites?: Maybe<Array<GraphQLNetlifySiteInput>>;\n  /**\n   * This token is used to create the needed BuildHook and BuildNotifications in Netlify.\n   * This token is only used once and won't be stored anywhere\n   */\n  accessToken: Scalars[\"String\"];\n};\n\nexport type GraphQLUpdateVercelIntegrationInput = {\n  integrationId: Scalars[\"ID\"];\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  models?: Maybe<Array<Scalars[\"ID\"]>>;\n  /** Overrides the currently setup vercel projects. Omit if you don't want to update the existing projects. */\n  projects?: Maybe<Array<GraphQLVercelProjectInput>>;\n  /**\n   * This token is used to create the needed BuildHook and BuildNotifications in Vercel.\n   * This token is only used once and won't be stored anywhere\n   */\n  accessToken: Scalars[\"String\"];\n};\n\nexport type GraphQLUpdateGatsbyCloudIntegrationInput = {\n  integrationId: Scalars[\"ID\"];\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  /**\n   * Prefix of your site\n   * Only lower case alphabetical characters, numbers and underscores are allowed.\n   */\n  sitePrefix?: Maybe<Scalars[\"String\"]>;\n  /** URL to trigger a Deploy Build. This webhook will be triggered when publishing and unpublishing entries. */\n  buildWebhookURL?: Maybe<Scalars[\"String\"]>;\n  previewWebhookURL?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLCreateNetlifyIntegrationPayload = {\n  __typename?: \"CreateNetlifyIntegrationPayload\";\n  createdNetlifyIntegration: GraphQLNetlifyIntegration;\n};\n\nexport type GraphQLCreateVercelIntegrationPayload = {\n  __typename?: \"CreateVercelIntegrationPayload\";\n  createdVercelIntegration: GraphQLVercelIntegration;\n};\n\nexport type GraphQLCreateGatsbyCloudIntegrationPayload = {\n  __typename?: \"CreateGatsbyCloudIntegrationPayload\";\n  createdGatsbyCloudIntegration: GraphQLGatsbyCloudIntegration;\n};\n\nexport type GraphQLUpdateNetlifyIntegrationPayload = {\n  __typename?: \"UpdateNetlifyIntegrationPayload\";\n  updatedNetlifyIntegration: GraphQLNetlifyIntegration;\n};\n\nexport type GraphQLUpdateVercelIntegrationPayload = {\n  __typename?: \"UpdateVercelIntegrationPayload\";\n  updatedVercelIntegration: GraphQLVercelIntegration;\n};\n\nexport type GraphQLUpdateGatsbyCloudIntegrationPayload = {\n  __typename?: \"UpdateGatsbyCloudIntegrationPayload\";\n  updatedGatsbyCloudIntegration: GraphQLGatsbyCloudIntegration;\n};\n\nexport type GraphQLDeleteNetlifyIntegrationInput = {\n  id: Scalars[\"ID\"];\n  /**\n   * This token is used to cleanup the resources in Netlify that where used by this integration .\n   * This token is only used once and won't be stored anywhere\n   */\n  accessToken: Scalars[\"String\"];\n};\n\nexport type GraphQLDeleteVercelIntegrationInput = {\n  id: Scalars[\"ID\"];\n  /**\n   * This token is used to cleanup the resources in Vercel that where used by this integration .\n   * This token is only used once and won't be stored anywhere\n   */\n  accessToken: Scalars[\"String\"];\n};\n\nexport type GraphQLDeleteGatsbyCloudIntegrationInput = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLDeleteNetlifyIntegrationPayload = {\n  __typename?: \"DeleteNetlifyIntegrationPayload\";\n  deletedNetlifyIntegrationId: Scalars[\"ID\"];\n};\n\nexport type GraphQLDeleteVercelIntegrationPayload = {\n  __typename?: \"DeleteVercelIntegrationPayload\";\n  deletedVercelIntegrationId: Scalars[\"ID\"];\n};\n\nexport type GraphQLDeleteGatsbyCloudIntegrationPayload = {\n  __typename?: \"DeleteGatsbyCloudIntegrationPayload\";\n  deletedGatsbyCloudIntegrationId: Scalars[\"ID\"];\n};\n\nexport type GraphQLTriggerNetlifyIntegrationBuildInput = {\n  siteId: Scalars[\"String\"];\n  integrationId: Scalars[\"ID\"];\n};\n\nexport type GraphQLTriggerVercelIntegrationBuildInput = {\n  projectId: Scalars[\"String\"];\n  integrationId: Scalars[\"ID\"];\n};\n\nexport type GraphQLTriggerNetlifyIntegrationBuildPayload = {\n  __typename?: \"TriggerNetlifyIntegrationBuildPayload\";\n  integration: GraphQLNetlifyIntegration;\n};\n\nexport type GraphQLTriggerVercelIntegrationBuildPayload = {\n  __typename?: \"TriggerVercelIntegrationBuildPayload\";\n  integration: GraphQLVercelIntegration;\n};\n\nexport type GraphQLPromoteEnvironmentInput = {\n  environmentId: Scalars[\"ID\"];\n  renameCurrentMasterApiIdTo: Scalars[\"String\"];\n  renameCurrentMasterDisplayNameTo: Scalars[\"String\"];\n};\n\nexport type GraphQLPromoteEnvironmentPayload = {\n  __typename?: \"PromoteEnvironmentPayload\";\n  promotedEnvironment: GraphQLEnvironment;\n  previousMasterEnvironment: GraphQLEnvironment;\n};\n\nexport type GraphQLUpsertRemoteTypeDefinitionsInput = {\n  remoteTypeDefinitionsToCreate?: Maybe<\n    Array<GraphQLUpsertRemoteTypeDefinitionToCreateInput>\n  >;\n  remoteTypeDefinitionsToDelete?: Maybe<\n    Array<GraphQLUpsertRemoteTypeDefinitionToDeleteInput>\n  >;\n  remoteTypeDefinitionsToUpdate?: Maybe<\n    Array<GraphQLUpsertRemoteTypeDefinitionToUpdateInput>\n  >;\n};\n\nexport type GraphQLBatchMigrationUpsertRemoteTypeDefinitionsInput = {\n  remoteTypeDefinitionsToCreate?: Maybe<\n    Array<GraphQLBatchMigrationUpsertRemoteTypeDefinitionToCreateInput>\n  >;\n  remoteTypeDefinitionsToDelete?: Maybe<\n    Array<GraphQLBatchMigrationUpsertRemoteTypeDefinitionToDeleteInput>\n  >;\n  remoteTypeDefinitionsToUpdate?: Maybe<\n    Array<GraphQLBatchMigrationUpsertRemoteTypeDefinitionToUpdateInput>\n  >;\n};\n\nexport type GraphQLUpsertRemoteTypeDefinitionToCreateInput = {\n  sdl: Scalars[\"String\"];\n};\n\nexport type GraphQLUpsertRemoteTypeDefinitionToDeleteInput = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLUpsertRemoteTypeDefinitionToUpdateInput = {\n  id: Scalars[\"ID\"];\n  sdl?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLBatchMigrationUpsertRemoteTypeDefinitionToCreateInput = {\n  sdl: Scalars[\"String\"];\n};\n\nexport type GraphQLBatchMigrationUpsertRemoteTypeDefinitionToDeleteInput = {\n  apiId: Scalars[\"String\"];\n};\n\nexport type GraphQLBatchMigrationUpsertRemoteTypeDefinitionToUpdateInput = {\n  apiId: Scalars[\"String\"];\n  sdl?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLCreateRemoteTypeDefinitionInput = {\n  sdl: Scalars[\"String\"];\n};\n\nexport enum GraphQLRemoteSourceType {\n  Graphql = \"GRAPHQL\",\n  Rest = \"REST\",\n}\n\nexport type GraphQLDeleteRemoteSourceInput = {\n  id: Scalars[\"ID\"];\n};\n\nexport type GraphQLCreateGraphQlRemoteSourceInput = {\n  environmentId: Scalars[\"ID\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  /** Unique prefix that will be prepended to all of the remote types. This value cannot be changed! */\n  prefix: Scalars[\"String\"];\n  url: Scalars[\"String\"];\n  headers?: Maybe<Scalars[\"JSON\"]>;\n  /**\n   * Specific URL that will be used for introspection if the introspection is available on another url than the regular url.\n   * Can be ignored if the introspection url is the same as the url of the remote source.\n   */\n  introspectionUrl?: Maybe<Scalars[\"String\"]>;\n  /** HTTP method that will be used for introspection */\n  introspectionMethod: GraphQLGraphQlRemoteSourceIntrospectionMethod;\n  /** HTTP headers that will be used for introspection */\n  introspectionHeaders?: Maybe<Scalars[\"JSON\"]>;\n  /** Custom GraphQL input types that can be used as arguments in remote fields that belong to this remoteSource */\n  remoteTypeDefinitions?: Maybe<Array<GraphQLCreateRemoteTypeDefinitionInput>>;\n  debugEnabled?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type GraphQLUpdateGraphQlRemoteSourceInput = {\n  id: Scalars[\"ID\"];\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  url?: Maybe<Scalars[\"String\"]>;\n  headers?: Maybe<Scalars[\"JSON\"]>;\n  introspectionUrl?: Maybe<Scalars[\"String\"]>;\n  introspectionMethod?: Maybe<GraphQLGraphQlRemoteSourceIntrospectionMethod>;\n  introspectionHeaders?: Maybe<Scalars[\"JSON\"]>;\n  remoteTypeDefinitionsToUpsert?: Maybe<\n    GraphQLUpsertRemoteTypeDefinitionsInput\n  >;\n  debugEnabled?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type GraphQLCreateRestRemoteSourceInput = {\n  environmentId: Scalars[\"ID\"];\n  displayName: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  /** Unique prefix that will be prepended to all of the remote types. This value cannot be changed! */\n  prefix: Scalars[\"String\"];\n  url: Scalars[\"String\"];\n  headers?: Maybe<Scalars[\"JSON\"]>;\n  /** Remote type definitions that the remote source supports or input types that can be used by any remote field of this remote source */\n  remoteTypeDefinitions?: Maybe<Array<GraphQLCreateRemoteTypeDefinitionInput>>;\n  debugEnabled?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type GraphQLUpdateRestRemoteSourceInput = {\n  id: Scalars[\"ID\"];\n  displayName?: Maybe<Scalars[\"String\"]>;\n  description?: Maybe<Scalars[\"String\"]>;\n  url?: Maybe<Scalars[\"String\"]>;\n  headers?: Maybe<Scalars[\"JSON\"]>;\n  remoteTypeDefinitionsToUpsert?: Maybe<\n    GraphQLUpsertRemoteTypeDefinitionsInput\n  >;\n  debugEnabled?: Maybe<Scalars[\"Boolean\"]>;\n};\n\nexport type GraphQLMutation = {\n  __typename?: \"Mutation\";\n  createContentView: GraphQLCreateContentViewPayload;\n  updateContentView: GraphQLUpdateContentViewPayload;\n  deleteContentView: GraphQLDeleteContentViewPayload;\n  moveContentView: GraphQLMoveContentViewPayload;\n  createViewGroup: GraphQLCreateViewGroupPayload;\n  updateViewGroup: GraphQLUpdateViewGroupPayload;\n  deleteViewGroup: GraphQLDeleteViewGroupPayload;\n  moveViewGroup: GraphQLMoveViewGroupPayload;\n  sendInvite: GraphQLSendInvitePayload;\n  revokeInvite: GraphQLRevokeInvitePayload;\n  acceptInvite: GraphQLAcceptInvitePayload;\n  switchPaymentSubscription: GraphQLSwitchPaymentSubscriptionPayload;\n  startTrial: GraphQLStartTrialPayload;\n  leaveTrial: GraphQLLeaveTrialPayload;\n  createPermanentAuthToken: GraphQLCreatePermanentAuthTokenPayload;\n  updatePermanentAuthToken: GraphQLUpdatePermanentAuthTokenPayload;\n  deletePermanentAuthToken: GraphQLDeletePermanentAuthTokenPayload;\n  createProject: GraphQLProject;\n  updateProject: GraphQLProject;\n  deleteProject: GraphQLDeleteProjectPayload;\n  cloneProject: GraphQLProject;\n  clonePublicProject: GraphQLProject;\n  leaveProject: GraphQLLeaveProjectPayload;\n  createRole: GraphQLRole;\n  updateRole: GraphQLRole;\n  deleteRole: GraphQLDeleteRolePayload;\n  createReadContentPermission: GraphQLCreateReadContentPermissionPayload;\n  updateReadContentPermission: GraphQLUpdateReadContentPermissionPayload;\n  createCreateContentPermission: GraphQLCreateCreateContentPermissionPayload;\n  updateCreateContentPermission: GraphQLUpdateCreateContentPermissionPayload;\n  createUpdateContentPermission: GraphQLCreateUpdateContentPermissionPayload;\n  updateUpdateContentPermission: GraphQLUpdateUpdateContentPermissionPayload;\n  deleteContentPermission: GraphQLDeleteContentPermissionPayload;\n  updateContentPermissionEnabled: GraphQLUpdateContentPermissionEnabledPayload;\n  createDeleteContentPermission: GraphQLCreateDeleteContentPermissionPayload;\n  updateDeleteContentPermission: GraphQLUpdateDeleteContentPermissionPayload;\n  updatePublishContentPermission: GraphQLUpdatePublishContentPermissionPayload;\n  updateUnpublishContentPermission: GraphQLUpdateUnpublishContentPermissionPayload;\n  createReadVersionContentPermission: GraphQLCreateReadVersionContentPermissionPayload;\n  updateReadVersionContentPermission: GraphQLUpdateReadVersionContentPermissionPayload;\n  createPublishContentPermission: GraphQLCreatePublishContentPermissionPayload;\n  createUnpublishContentPermission: GraphQLCreateUnpublishContentPermissionPayload;\n  updateMemberRoles: GraphQLMember;\n  removeMember: GraphQLRemoveMemberPayload;\n  setUserAnalytics: GraphQLUserAnalytics;\n  track: GraphQLTrackPayload;\n  deleteAccount: GraphQLDeleteAccountPayload;\n  updateUserProfile: GraphQLUserViewer;\n  createWebhook: GraphQLCreateWebhookPayload;\n  updateWebhook: GraphQLUpdateWebhookPayload;\n  deleteWebhook: GraphQLDeleteWebhookPayload;\n  retriggerWebhook: GraphQLRetriggerWebhookPayload;\n  moveField: GraphQLMoveFieldPayload;\n  createEnvironment: GraphQLCreateEnvironmentPayload;\n  updateEnvironment: GraphQLUpdateEnvironmentPayload;\n  deleteEnvironment: GraphQLDeleteEnvironmentPayload;\n  promoteEnvironment: GraphQLPromoteEnvironmentPayload;\n  updateFilestackSecurityOptions: GraphQLUpdateFilestackSecurityOptionsPayload;\n  updatePublicEndpoint?: Maybe<GraphQLUpdatePublicPermissionsPayload>;\n  createNetlifyIntegration?: Maybe<GraphQLCreateNetlifyIntegrationPayload>;\n  triggerNetlifyIntegrationBuild?: Maybe<\n    GraphQLTriggerNetlifyIntegrationBuildPayload\n  >;\n  updateNetlifyIntegration?: Maybe<GraphQLUpdateNetlifyIntegrationPayload>;\n  deleteNetlifyIntegration?: Maybe<GraphQLDeleteNetlifyIntegrationPayload>;\n  createVercelIntegration?: Maybe<GraphQLCreateVercelIntegrationPayload>;\n  triggerVercelIntegrationBuild?: Maybe<\n    GraphQLTriggerVercelIntegrationBuildPayload\n  >;\n  updateVercelIntegration?: Maybe<GraphQLUpdateVercelIntegrationPayload>;\n  deleteVercelIntegration?: Maybe<GraphQLDeleteVercelIntegrationPayload>;\n  createGatsbyCloudIntegration?: Maybe<\n    GraphQLCreateGatsbyCloudIntegrationPayload\n  >;\n  updateGatsbyCloudIntegration?: Maybe<\n    GraphQLUpdateGatsbyCloudIntegrationPayload\n  >;\n  deleteGatsbyCloudIntegration?: Maybe<\n    GraphQLDeleteGatsbyCloudIntegrationPayload\n  >;\n  createFieldExtension: GraphQLCreateFieldExtensionPayload;\n  updateFieldExtension: GraphQLUpdateFieldExtensionPayload;\n  createSidebarExtension: GraphQLCreateSidebarExtensionPayload;\n  updateSidebarExtension: GraphQLUpdateSidebarExtensionPayload;\n  deleteExtension: GraphQLDeleteExtensionPayload;\n  createCustomSidebarElement: GraphQLCreateSidebarElementPayload;\n  createSystemSidebarElement: GraphQLCreateSidebarElementPayload;\n  deleteSidebarElement: GraphQLDeleteSidebarElementPayload;\n  moveSidebarElement: GraphQLMoveSidebarElementPayload;\n  updateSidebarElement: GraphQLUpdateSidebarElementPayload;\n  resetSidebarElements: GraphQLResetSidebarElementsPayload;\n  createApp: GraphQLCreateAppPayload;\n  updateApp: GraphQLUpdateAppPayload;\n  /** updateAppElement(data: UpdateAppInput!): UpdateAppPayload! */\n  deleteApp: GraphQLDeleteAppPayload;\n  createAppInstallation: GraphQLCreateAppInstallationPayload;\n  updateAppInstallation: GraphQLUpdateAppInstallationPayload;\n  deleteAppInstallation: GraphQLDeleteAppInstallationPayload;\n  createStage: GraphQLAsyncOperationPayload;\n  updateStage: GraphQLAsyncOperationPayload;\n  deleteStage: GraphQLAsyncOperationPayload;\n  createLocale: GraphQLAsyncOperationPayload;\n  updateLocale: GraphQLAsyncOperationPayload;\n  deleteLocale: GraphQLAsyncOperationPayload;\n  createModel: GraphQLAsyncOperationPayload;\n  duplicateModel: GraphQLAsyncOperationPayload;\n  updateModel: GraphQLAsyncOperationPayload;\n  deleteModel: GraphQLAsyncOperationPayload;\n  createComponent: GraphQLAsyncOperationPayload;\n  duplicateComponent: GraphQLAsyncOperationPayload;\n  updateComponent: GraphQLAsyncOperationPayload;\n  deleteComponent: GraphQLAsyncOperationPayload;\n  createEnumeration: GraphQLAsyncOperationPayload;\n  deleteEnumeration: GraphQLAsyncOperationPayload;\n  updateEnumeration: GraphQLAsyncOperationPayload;\n  createSimpleField: GraphQLAsyncOperationPayload;\n  createRemoteField: GraphQLAsyncOperationPayload;\n  createEnumerableField: GraphQLAsyncOperationPayload;\n  createRelationalField: GraphQLAsyncOperationPayload;\n  createUnionField: GraphQLAsyncOperationPayload;\n  createComponentField: GraphQLAsyncOperationPayload;\n  createComponentUnionField: GraphQLAsyncOperationPayload;\n  updateSimpleField: GraphQLAsyncOperationPayload;\n  updateRemoteField: GraphQLAsyncOperationPayload;\n  updateEnumerableField: GraphQLAsyncOperationPayload;\n  updateRelationalField: GraphQLAsyncOperationPayload;\n  updateUnionField: GraphQLAsyncOperationPayload;\n  updateComponentField: GraphQLAsyncOperationPayload;\n  updateComponentUnionField: GraphQLAsyncOperationPayload;\n  deleteField: GraphQLAsyncOperationPayload;\n  submitBatchChanges: GraphQLAsyncOperationPayload;\n  createGraphQLRemoteSource: GraphQLAsyncOperationPayload;\n  updateGraphQLRemoteSource: GraphQLAsyncOperationPayload;\n  createRESTRemoteSource: GraphQLAsyncOperationPayload;\n  updateRESTRemoteSource: GraphQLAsyncOperationPayload;\n  deleteRemoteSource: GraphQLAsyncOperationPayload;\n};\n\nexport type GraphQLMutationCreateContentViewArgs = {\n  data: GraphQLCreateContentViewInput;\n};\n\nexport type GraphQLMutationUpdateContentViewArgs = {\n  data: GraphQLUpdateContentViewInput;\n};\n\nexport type GraphQLMutationDeleteContentViewArgs = {\n  data: GraphQLDeleteContentViewInput;\n};\n\nexport type GraphQLMutationMoveContentViewArgs = {\n  data: GraphQLMoveContentViewInput;\n};\n\nexport type GraphQLMutationCreateViewGroupArgs = {\n  data: GraphQLCreateViewGroupInput;\n};\n\nexport type GraphQLMutationUpdateViewGroupArgs = {\n  data: GraphQLUpdateViewGroupInput;\n};\n\nexport type GraphQLMutationDeleteViewGroupArgs = {\n  data: GraphQLDeleteViewGroupInput;\n};\n\nexport type GraphQLMutationMoveViewGroupArgs = {\n  data: GraphQLMoveViewGroupInput;\n};\n\nexport type GraphQLMutationSendInviteArgs = {\n  data: GraphQLSendInviteInput;\n};\n\nexport type GraphQLMutationRevokeInviteArgs = {\n  data: GraphQLRevokeInviteInput;\n};\n\nexport type GraphQLMutationAcceptInviteArgs = {\n  data: GraphQLAcceptInviteInput;\n};\n\nexport type GraphQLMutationSwitchPaymentSubscriptionArgs = {\n  data: GraphQLSwitchPaymentSubscriptionInput;\n};\n\nexport type GraphQLMutationStartTrialArgs = {\n  data: GraphQLStartTrialInput;\n};\n\nexport type GraphQLMutationLeaveTrialArgs = {\n  data: GraphQLLeaveTrialInput;\n};\n\nexport type GraphQLMutationCreatePermanentAuthTokenArgs = {\n  data: GraphQLCreatePermanentAuthTokenInput;\n};\n\nexport type GraphQLMutationUpdatePermanentAuthTokenArgs = {\n  data: GraphQLUpdatePermanentAuthTokenInput;\n};\n\nexport type GraphQLMutationDeletePermanentAuthTokenArgs = {\n  data: GraphQLDeletePermanentAuthTokenInput;\n};\n\nexport type GraphQLMutationCreateProjectArgs = {\n  data: GraphQLCreateProjectInput;\n};\n\nexport type GraphQLMutationUpdateProjectArgs = {\n  data: GraphQLUpdateProjectInput;\n};\n\nexport type GraphQLMutationDeleteProjectArgs = {\n  data: GraphQLDeleteProjectInput;\n};\n\nexport type GraphQLMutationCloneProjectArgs = {\n  data: GraphQLCloneProjectInput;\n};\n\nexport type GraphQLMutationClonePublicProjectArgs = {\n  data: GraphQLClonePublicProjectInput;\n};\n\nexport type GraphQLMutationLeaveProjectArgs = {\n  data: GraphQLLeaveProjectInput;\n};\n\nexport type GraphQLMutationCreateRoleArgs = {\n  data: GraphQLCreateRoleInput;\n};\n\nexport type GraphQLMutationUpdateRoleArgs = {\n  data: GraphQLUpdateRoleInput;\n};\n\nexport type GraphQLMutationDeleteRoleArgs = {\n  data: GraphQLDeleteRoleInput;\n};\n\nexport type GraphQLMutationCreateReadContentPermissionArgs = {\n  data: GraphQLCreateReadContentPermissionInput;\n};\n\nexport type GraphQLMutationUpdateReadContentPermissionArgs = {\n  data: GraphQLUpdateReadContentPermissionInput;\n};\n\nexport type GraphQLMutationCreateCreateContentPermissionArgs = {\n  data: GraphQLCreateCreateContentPermissionInput;\n};\n\nexport type GraphQLMutationUpdateCreateContentPermissionArgs = {\n  data: GraphQLUpdateCreateContentPermissionInput;\n};\n\nexport type GraphQLMutationCreateUpdateContentPermissionArgs = {\n  data: GraphQLCreateUpdateContentPermissionInput;\n};\n\nexport type GraphQLMutationUpdateUpdateContentPermissionArgs = {\n  data: GraphQLUpdateUpdateContentPermissionInput;\n};\n\nexport type GraphQLMutationDeleteContentPermissionArgs = {\n  data: GraphQLDeleteContentPermissionInput;\n};\n\nexport type GraphQLMutationUpdateContentPermissionEnabledArgs = {\n  data: GraphQLUpdateContentPermissionEnabledInput;\n};\n\nexport type GraphQLMutationCreateDeleteContentPermissionArgs = {\n  data: GraphQLCreateDeleteContentPermissionInput;\n};\n\nexport type GraphQLMutationUpdateDeleteContentPermissionArgs = {\n  data: GraphQLUpdateDeleteContentPermissionInput;\n};\n\nexport type GraphQLMutationUpdatePublishContentPermissionArgs = {\n  data: GraphQLUpdatePublishContentPermissionInput;\n};\n\nexport type GraphQLMutationUpdateUnpublishContentPermissionArgs = {\n  data: GraphQLUpdateUnpublishContentPermissionInput;\n};\n\nexport type GraphQLMutationCreateReadVersionContentPermissionArgs = {\n  data: GraphQLCreateReadVersionContentPermissionInput;\n};\n\nexport type GraphQLMutationUpdateReadVersionContentPermissionArgs = {\n  data: GraphQLUpdateReadVersionContentPermissionInput;\n};\n\nexport type GraphQLMutationCreatePublishContentPermissionArgs = {\n  data: GraphQLCreatePublishContentPermissionInput;\n};\n\nexport type GraphQLMutationCreateUnpublishContentPermissionArgs = {\n  data: GraphQLCreateUnpublishContentPermissionInput;\n};\n\nexport type GraphQLMutationUpdateMemberRolesArgs = {\n  data: GraphQLUpdateMemberRolesInput;\n};\n\nexport type GraphQLMutationRemoveMemberArgs = {\n  data: GraphQLRemoveMemberInput;\n};\n\nexport type GraphQLMutationSetUserAnalyticsArgs = {\n  data: GraphQLSetUserAnalyticsInput;\n};\n\nexport type GraphQLMutationTrackArgs = {\n  data: GraphQLTrackInput;\n};\n\nexport type GraphQLMutationDeleteAccountArgs = {\n  data?: Maybe<GraphQLDeleteAccountInput>;\n};\n\nexport type GraphQLMutationUpdateUserProfileArgs = {\n  data: GraphQLUpdateProfileInput;\n};\n\nexport type GraphQLMutationCreateWebhookArgs = {\n  data: GraphQLCreateWebhookInput;\n};\n\nexport type GraphQLMutationUpdateWebhookArgs = {\n  data: GraphQLUpdateWebhookInput;\n};\n\nexport type GraphQLMutationDeleteWebhookArgs = {\n  data: GraphQLDeleteWebhookInput;\n};\n\nexport type GraphQLMutationRetriggerWebhookArgs = {\n  data: GraphQLRetriggerWebhookInput;\n};\n\nexport type GraphQLMutationMoveFieldArgs = {\n  data: GraphQLMoveFieldInput;\n};\n\nexport type GraphQLMutationCreateEnvironmentArgs = {\n  data: GraphQLCreateEnvironmentInput;\n};\n\nexport type GraphQLMutationUpdateEnvironmentArgs = {\n  data: GraphQLUpdateEnvironmentInput;\n};\n\nexport type GraphQLMutationDeleteEnvironmentArgs = {\n  data: GraphQLDeleteEnvironmentInput;\n};\n\nexport type GraphQLMutationPromoteEnvironmentArgs = {\n  data: GraphQLPromoteEnvironmentInput;\n};\n\nexport type GraphQLMutationUpdateFilestackSecurityOptionsArgs = {\n  data: GraphQLUpdateFilestackSecurityOptionsInput;\n};\n\nexport type GraphQLMutationUpdatePublicEndpointArgs = {\n  data: GraphQLUpdatePublicEndpointInput;\n};\n\nexport type GraphQLMutationCreateNetlifyIntegrationArgs = {\n  data: GraphQLCreateNetlifyIntegrationInput;\n};\n\nexport type GraphQLMutationTriggerNetlifyIntegrationBuildArgs = {\n  data: GraphQLTriggerNetlifyIntegrationBuildInput;\n};\n\nexport type GraphQLMutationUpdateNetlifyIntegrationArgs = {\n  data: GraphQLUpdateNetlifyIntegrationInput;\n};\n\nexport type GraphQLMutationDeleteNetlifyIntegrationArgs = {\n  data: GraphQLDeleteNetlifyIntegrationInput;\n};\n\nexport type GraphQLMutationCreateVercelIntegrationArgs = {\n  data: GraphQLCreateVercelIntegrationInput;\n};\n\nexport type GraphQLMutationTriggerVercelIntegrationBuildArgs = {\n  data: GraphQLTriggerVercelIntegrationBuildInput;\n};\n\nexport type GraphQLMutationUpdateVercelIntegrationArgs = {\n  data: GraphQLUpdateVercelIntegrationInput;\n};\n\nexport type GraphQLMutationDeleteVercelIntegrationArgs = {\n  data: GraphQLDeleteVercelIntegrationInput;\n};\n\nexport type GraphQLMutationCreateGatsbyCloudIntegrationArgs = {\n  data: GraphQLCreateGatsbyCloudIntegrationInput;\n};\n\nexport type GraphQLMutationUpdateGatsbyCloudIntegrationArgs = {\n  data: GraphQLUpdateGatsbyCloudIntegrationInput;\n};\n\nexport type GraphQLMutationDeleteGatsbyCloudIntegrationArgs = {\n  data: GraphQLDeleteGatsbyCloudIntegrationInput;\n};\n\nexport type GraphQLMutationCreateFieldExtensionArgs = {\n  data: GraphQLCreateFieldExtensionInput;\n};\n\nexport type GraphQLMutationUpdateFieldExtensionArgs = {\n  data: GraphQLUpdateFieldExtensionInput;\n};\n\nexport type GraphQLMutationCreateSidebarExtensionArgs = {\n  data: GraphQLCreateSidebarExtensionInput;\n};\n\nexport type GraphQLMutationUpdateSidebarExtensionArgs = {\n  data: GraphQLUpdateSidebarExtensionInput;\n};\n\nexport type GraphQLMutationDeleteExtensionArgs = {\n  data: GraphQLDeleteExtensionInput;\n};\n\nexport type GraphQLMutationCreateCustomSidebarElementArgs = {\n  data: GraphQLCreateCustomSidebarElementInput;\n};\n\nexport type GraphQLMutationCreateSystemSidebarElementArgs = {\n  data: GraphQLCreateSystemSidebarElementInput;\n};\n\nexport type GraphQLMutationDeleteSidebarElementArgs = {\n  data: GraphQLDeleteSidebarElementInput;\n};\n\nexport type GraphQLMutationMoveSidebarElementArgs = {\n  data: GraphQLMoveSidebarElementInput;\n};\n\nexport type GraphQLMutationUpdateSidebarElementArgs = {\n  data: GraphQLUpdateSidebarElementInput;\n};\n\nexport type GraphQLMutationResetSidebarElementsArgs = {\n  data: GraphQLResetSidebarElementsInput;\n};\n\nexport type GraphQLMutationCreateAppArgs = {\n  data: GraphQLCreateAppInput;\n};\n\nexport type GraphQLMutationUpdateAppArgs = {\n  data: GraphQLUpdateAppInput;\n};\n\nexport type GraphQLMutationDeleteAppArgs = {\n  data: GraphQLDeleteAppInput;\n};\n\nexport type GraphQLMutationCreateAppInstallationArgs = {\n  data: GraphQLCreateAppInstallationInput;\n};\n\nexport type GraphQLMutationUpdateAppInstallationArgs = {\n  data: GraphQLUpdateAppInstallationInput;\n};\n\nexport type GraphQLMutationDeleteAppInstallationArgs = {\n  data: GraphQLDeleteAppInstallationInput;\n};\n\nexport type GraphQLMutationCreateStageArgs = {\n  data: GraphQLCreateStageInput;\n};\n\nexport type GraphQLMutationUpdateStageArgs = {\n  data: GraphQLUpdateStageInput;\n};\n\nexport type GraphQLMutationDeleteStageArgs = {\n  data: GraphQLDeleteStageInput;\n};\n\nexport type GraphQLMutationCreateLocaleArgs = {\n  data: GraphQLCreateLocaleInput;\n};\n\nexport type GraphQLMutationUpdateLocaleArgs = {\n  data: GraphQLUpdateLocaleInput;\n};\n\nexport type GraphQLMutationDeleteLocaleArgs = {\n  data: GraphQLDeleteLocaleInput;\n};\n\nexport type GraphQLMutationCreateModelArgs = {\n  data: GraphQLCreateModelInput;\n};\n\nexport type GraphQLMutationDuplicateModelArgs = {\n  data: GraphQLDuplicateModelInput;\n};\n\nexport type GraphQLMutationUpdateModelArgs = {\n  data: GraphQLUpdateModelInput;\n};\n\nexport type GraphQLMutationDeleteModelArgs = {\n  data: GraphQLDeleteModelInput;\n};\n\nexport type GraphQLMutationCreateComponentArgs = {\n  data: GraphQLCreateComponentInput;\n};\n\nexport type GraphQLMutationDuplicateComponentArgs = {\n  data: GraphQLDuplicateComponentInput;\n};\n\nexport type GraphQLMutationUpdateComponentArgs = {\n  data: GraphQLUpdateComponentInput;\n};\n\nexport type GraphQLMutationDeleteComponentArgs = {\n  data: GraphQLDeleteComponentInput;\n};\n\nexport type GraphQLMutationCreateEnumerationArgs = {\n  data: GraphQLCreateEnumerationInput;\n};\n\nexport type GraphQLMutationDeleteEnumerationArgs = {\n  data: GraphQLDeleteEnumerationInput;\n};\n\nexport type GraphQLMutationUpdateEnumerationArgs = {\n  data: GraphQLUpdateEnumerationInput;\n};\n\nexport type GraphQLMutationCreateSimpleFieldArgs = {\n  data: GraphQLCreateSimpleFieldInput;\n};\n\nexport type GraphQLMutationCreateRemoteFieldArgs = {\n  data: GraphQLCreateRemoteFieldInput;\n};\n\nexport type GraphQLMutationCreateEnumerableFieldArgs = {\n  data: GraphQLCreateEnumerableFieldInput;\n};\n\nexport type GraphQLMutationCreateRelationalFieldArgs = {\n  data: GraphQLCreateRelationalFieldInput;\n};\n\nexport type GraphQLMutationCreateUnionFieldArgs = {\n  data: GraphQLCreateUnionFieldInput;\n};\n\nexport type GraphQLMutationCreateComponentFieldArgs = {\n  data: GraphQLCreateComponentFieldInput;\n};\n\nexport type GraphQLMutationCreateComponentUnionFieldArgs = {\n  data: GraphQLCreateComponentUnionFieldInput;\n};\n\nexport type GraphQLMutationUpdateSimpleFieldArgs = {\n  data: GraphQLUpdateSimpleFieldInput;\n};\n\nexport type GraphQLMutationUpdateRemoteFieldArgs = {\n  data: GraphQLUpdateRemoteFieldInput;\n};\n\nexport type GraphQLMutationUpdateEnumerableFieldArgs = {\n  data: GraphQLUpdateEnumerableFieldInput;\n};\n\nexport type GraphQLMutationUpdateRelationalFieldArgs = {\n  data: GraphQLUpdateRelationalFieldInput;\n};\n\nexport type GraphQLMutationUpdateUnionFieldArgs = {\n  data: GraphQLUpdateUnionFieldInput;\n};\n\nexport type GraphQLMutationUpdateComponentFieldArgs = {\n  data: GraphQLUpdateComponentFieldInput;\n};\n\nexport type GraphQLMutationUpdateComponentUnionFieldArgs = {\n  data: GraphQLUpdateComponentUnionFieldInput;\n};\n\nexport type GraphQLMutationDeleteFieldArgs = {\n  data: GraphQLDeleteFieldInput;\n};\n\nexport type GraphQLMutationSubmitBatchChangesArgs = {\n  data: GraphQLBatchMigrationInput;\n};\n\nexport type GraphQLMutationCreateGraphQlRemoteSourceArgs = {\n  data: GraphQLCreateGraphQlRemoteSourceInput;\n};\n\nexport type GraphQLMutationUpdateGraphQlRemoteSourceArgs = {\n  data: GraphQLUpdateGraphQlRemoteSourceInput;\n};\n\nexport type GraphQLMutationCreateRestRemoteSourceArgs = {\n  data: GraphQLCreateRestRemoteSourceInput;\n};\n\nexport type GraphQLMutationUpdateRestRemoteSourceArgs = {\n  data: GraphQLUpdateRestRemoteSourceInput;\n};\n\nexport type GraphQLMutationDeleteRemoteSourceArgs = {\n  data: GraphQLDeleteRemoteSourceInput;\n};\n\nexport enum GraphQLMigrationOperationType {\n  CreateProjectFromTemplate = \"CREATE_PROJECT_FROM_TEMPLATE\",\n  CreateEnvironment = \"CREATE_ENVIRONMENT\",\n  Batch = \"BATCH\",\n  CreateStage = \"CREATE_STAGE\",\n  UpdateStage = \"UPDATE_STAGE\",\n  DeleteStage = \"DELETE_STAGE\",\n  CreateLocale = \"CREATE_LOCALE\",\n  UpdateLocale = \"UPDATE_LOCALE\",\n  DeleteLocale = \"DELETE_LOCALE\",\n  CreateModel = \"CREATE_MODEL\",\n  UpdateModel = \"UPDATE_MODEL\",\n  DeleteModel = \"DELETE_MODEL\",\n  CreateRemoteTypeDefinition = \"CREATE_REMOTE_TYPE_DEFINITION\",\n  UpdateRemoteTypeDefinition = \"UPDATE_REMOTE_TYPE_DEFINITION\",\n  DeleteRemoteTypeDefinition = \"DELETE_REMOTE_TYPE_DEFINITION\",\n  CreateEnumeration = \"CREATE_ENUMERATION\",\n  UpdateEnumeration = \"UPDATE_ENUMERATION\",\n  DeleteEnumeration = \"DELETE_ENUMERATION\",\n  CreateSimpleField = \"CREATE_SIMPLE_FIELD\",\n  CreateEnumerableField = \"CREATE_ENUMERABLE_FIELD\",\n  CreateRelationalField = \"CREATE_RELATIONAL_FIELD\",\n  CreateUnionField = \"CREATE_UNION_FIELD\",\n  CreateRemoteField = \"CREATE_REMOTE_FIELD\",\n  UpdateSimpleField = \"UPDATE_SIMPLE_FIELD\",\n  UpdateEnumerableField = \"UPDATE_ENUMERABLE_FIELD\",\n  UpdateRelationalField = \"UPDATE_RELATIONAL_FIELD\",\n  UpdateUnionField = \"UPDATE_UNION_FIELD\",\n  DeleteField = \"DELETE_FIELD\",\n}\n\nexport type GraphQLISchemaMigrationPayload = {\n  migration: GraphQLMigration;\n};\n\nexport enum GraphQLNetlifyBuildState {\n  Ready = \"READY\",\n  Preparing = \"PREPARING\",\n  Building = \"BUILDING\",\n  Failed = \"FAILED\",\n}\n\nexport enum GraphQLVercelBuildState {\n  Ready = \"READY\",\n  Preparing = \"PREPARING\",\n  Building = \"BUILDING\",\n  Failed = \"FAILED\",\n}\n\nexport type GraphQLNetlifyIntegrationCallbackPayload = {\n  __typename?: \"NetlifyIntegrationCallbackPayload\";\n  /** @deprecated use integration instead */\n  integrationId: Scalars[\"ID\"];\n  integration: GraphQLNetlifyIntegration;\n  site: GraphQLNetlifySite;\n  error?: Maybe<Scalars[\"String\"]>;\n};\n\nexport type GraphQLVercelIntegrationCallbackPayload = {\n  __typename?: \"VercelIntegrationCallbackPayload\";\n  /** @deprecated use integration instead */\n  integrationId: Scalars[\"ID\"];\n  integration: GraphQLVercelIntegration;\n  project: GraphQLVercelProject;\n  error?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Base pending project with common information */\nexport type GraphQLIPendingProject = {\n  id: Scalars[\"ID\"];\n  name: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  picture?: Maybe<Scalars[\"String\"]>;\n};\n\n/** Can clone from project or template */\nexport type GraphQLCloningFrom =\n  | GraphQLProject\n  | GraphQLTemplate\n  | GraphQLStarterTemplate;\n\n/** Cloning project with source */\nexport type GraphQLCloningProject = GraphQLIPendingProject & {\n  __typename?: \"CloningProject\";\n  id: Scalars[\"ID\"];\n  name: Scalars[\"String\"];\n  description?: Maybe<Scalars[\"String\"]>;\n  picture?: Maybe<Scalars[\"String\"]>;\n  cloningFrom: GraphQLCloningFrom;\n};\n\n/** Add subscription to notify about changes in projects */\nexport type GraphQLProjectChangeCompletedCloning = {\n  __typename?: \"ProjectChangeCompletedCloning\";\n  clonedProject: GraphQLProject;\n};\n\nexport type GraphQLProjectChangedPayload = GraphQLProjectChangeCompletedCloning;\n\nexport type GraphQLSchemaMigrationSubscriptionPayload = GraphQLISchemaMigrationPayload & {\n  __typename?: \"SchemaMigrationSubscriptionPayload\";\n  migration: GraphQLMigration;\n};\n\nexport type GraphQLSchemaMigrationSucceededSubscriptionPayload = GraphQLISchemaMigrationPayload & {\n  __typename?: \"SchemaMigrationSucceededSubscriptionPayload\";\n  migration: GraphQLMigration;\n  environment: GraphQLEnvironment;\n  /** @deprecated Field no longer supported */\n  affectedResourceType: GraphQLMigrationOperationType;\n  /** @deprecated Field no longer supported */\n  affectedResourceId: Scalars[\"ID\"];\n};\n\nexport type GraphQLEnvironmentPromotedPayload = {\n  __typename?: \"EnvironmentPromotedPayload\";\n  promotedEnvironment: GraphQLEnvironment;\n  previousMasterEnvironment: GraphQLEnvironment;\n  promotedEnvironmentPreviousDisplayName: Scalars[\"String\"];\n};\n\nexport type GraphQLSubscription = {\n  __typename?: \"Subscription\";\n  schemaMigration: GraphQLISchemaMigrationPayload;\n  projectChanged: GraphQLProjectChangedPayload;\n  netlifyBuildNotification: GraphQLNetlifyIntegrationCallbackPayload;\n  vercelBuildNotification: GraphQLVercelIntegrationCallbackPayload;\n  environmentPromoted: GraphQLEnvironmentPromotedPayload;\n};\n\nexport type GraphQLSubscriptionSchemaMigrationArgs = {\n  environmentId: Scalars[\"ID\"];\n};\n\nexport type GraphQLSubscriptionNetlifyBuildNotificationArgs = {\n  integrationId: Scalars[\"ID\"];\n};\n\nexport type GraphQLSubscriptionVercelBuildNotificationArgs = {\n  integrationId: Scalars[\"ID\"];\n};\n\nexport type GraphQLSubscriptionEnvironmentPromotedArgs = {\n  projectId: Scalars[\"ID\"];\n};\n","import { Field, FieldType } from \"./field\";\nimport { MutationMode, PartialBy, RelationType } from \"./util\";\nimport { ChangeItem, ChangeListener, MigrationChange } from \"./migration\";\nimport { Renderer } from \"./renderer\";\nimport {\n  GraphQLBatchMigrationCreateEnumerableFieldInput,\n  GraphQLBatchMigrationCreateModelInput,\n  GraphQLBatchMigrationCreateRelationalFieldInput,\n  GraphQLBatchMigrationCreateRemoteFieldInput,\n  GraphQLBatchMigrationCreateReverseRelationalFieldInput,\n  GraphQLBatchMigrationCreateReverseUnionFieldInput,\n  GraphQLBatchMigrationCreateSimpleFieldInput,\n  GraphQLBatchMigrationCreateUnionFieldInput,\n  GraphQLBatchMigrationUpdateEnumerableFieldInput,\n  GraphQLBatchMigrationUpdateModelInput,\n  GraphQLBatchMigrationUpdateRelationalFieldInput,\n  GraphQLBatchMigrationUpdateRemoteFieldInput,\n  GraphQLBatchMigrationUpdateSimpleFieldInput,\n  GraphQLBatchMigrationUpdateUnionFieldInput,\n  GraphQLFieldValidationFloatRangeInput,\n  GraphQLFieldValidationIntRangeInput,\n  GraphQLFieldValidationRegExInput,\n  GraphQLRelationalFieldType,\n  GraphQLSimpleFieldType,\n  GraphQLSimpleFieldValidationsInput,\n} from \"./generated/schema\";\n\ntype ModelArgs =\n  | GraphQLBatchMigrationCreateModelInput\n  | GraphQLBatchMigrationUpdateModelInput;\n\n/**\n * Relational Fields\n */\ninterface RelationalFieldArgs\n  extends Omit<\n    GraphQLBatchMigrationCreateRelationalFieldInput,\n    \"reverseField\" | \"isHidden\"\n  > {\n  relationType: RelationType;\n  model: string;\n  /**\n   * @deprecated Use visibility instead.\n   */\n  isHidden: GraphQLBatchMigrationCreateRelationalFieldInput[\"isHidden\"];\n  reverseField?: Omit<\n    GraphQLBatchMigrationCreateReverseRelationalFieldInput,\n    \"modelApiId\" | \"isList\" | \"isHidden\"\n  > & {\n    /**\n     * @deprecated Use visibility instead.\n     */\n    isHidden?: GraphQLBatchMigrationCreateReverseRelationalFieldInput[\"isHidden\"];\n  };\n}\n\n/**\n * Create Union Field\n */\ninterface CreateUnionFieldArgs\n  extends Omit<\n    GraphQLBatchMigrationCreateUnionFieldInput,\n    \"reverseField\" | \"isHidden\"\n  > {\n  relationType: RelationType;\n  models: string[];\n  /**\n   * @deprecated Use visibility instead.\n   */\n  isHidden: GraphQLBatchMigrationCreateRelationalFieldInput[\"isHidden\"];\n  reverseField?: Omit<\n    GraphQLBatchMigrationCreateReverseUnionFieldInput,\n    \"modelApiIds\" | \"isList\" | \"isHidden\"\n  > & {\n    /**\n     * @deprecated Use visibility instead.\n     */\n    isHidden?: GraphQLBatchMigrationCreateReverseUnionFieldInput[\"isHidden\"];\n  };\n}\n\n/**\n * Update Union Field\n */\ninterface UpdateUnionFieldArgs\n  extends Omit<GraphQLBatchMigrationUpdateUnionFieldInput, \"reverseField\"> {\n  models?: string[];\n}\n\ninterface FieldValidationArgs {\n  range?: GraphQLFieldValidationFloatRangeInput;\n  characters?: GraphQLFieldValidationIntRangeInput;\n  listItemCount?: GraphQLFieldValidationIntRangeInput;\n  matches?: GraphQLFieldValidationRegExInput;\n  notMatches?: GraphQLFieldValidationRegExInput;\n}\n\n/**\n * Create Simple Field\n */\ninterface CreateSimpleFieldArgs\n  extends Omit<\n    GraphQLBatchMigrationCreateSimpleFieldInput,\n    \"validations\" | \"modelApiId\" | \"isHidden\"\n  > {\n  validations?: FieldValidationArgs;\n  /**\n   * @deprecated Use visibility instead.\n   */\n  isHidden?: GraphQLBatchMigrationCreateSimpleFieldInput[\"isHidden\"];\n}\n\ninterface UpdateSimpleFieldArgs\n  extends Omit<\n    GraphQLBatchMigrationUpdateSimpleFieldInput,\n    \"validations\" | \"modelApiId\" | \"isHidden\"\n  > {\n  validations?: FieldValidationArgs;\n  /**\n   * @deprecated Use visibility instead.\n   */\n  isHidden?: GraphQLBatchMigrationCreateSimpleFieldInput[\"isHidden\"];\n}\n\ninterface UpdateRelationalFieldArgs\n  extends Omit<\n    GraphQLBatchMigrationUpdateRelationalFieldInput,\n    \"modelApiId\" | \"isHidden\"\n  > {\n  /**\n   * @deprecated Use visibility instead.\n   */\n  isHidden?: GraphQLBatchMigrationUpdateRelationalFieldInput[\"isHidden\"];\n}\n\ninterface CreateEnumerableFieldArgs\n  extends Omit<\n    GraphQLBatchMigrationCreateEnumerableFieldInput,\n    \"modelApiId\" | \"isHidden\"\n  > {\n  /**\n   * @deprecated Use visibility instead.\n   */\n  isHidden?: GraphQLBatchMigrationCreateEnumerableFieldInput[\"isHidden\"];\n}\n\ninterface UpdateEnumerableFieldArgs\n  extends Omit<\n    GraphQLBatchMigrationUpdateEnumerableFieldInput,\n    \"modelApiId\" | \"isHidden\"\n  > {\n  /**\n   * @deprecated Use visibility instead.\n   */\n  isHidden?: GraphQLBatchMigrationUpdateEnumerableFieldInput[\"isHidden\"];\n}\n\ninterface CreateRemoteFieldArgs\n  extends Omit<GraphQLBatchMigrationCreateRemoteFieldInput, \"parentApiId\"> {}\n\ninterface UpdateRemoteFieldArgs\n  extends Omit<GraphQLBatchMigrationUpdateRemoteFieldInput, \"parentApiId\"> {}\n\n/**\n * GraphCMS Model\n */\ninterface Model {\n  /**\n   * Add a new field to the model.\n   * @param field options for the field.\n   */\n  addSimpleField(field: CreateSimpleFieldArgs): Model;\n\n  /**\n   * Update an existing field\n   * @param field options for the field.\n   */\n  updateSimpleField(field: UpdateSimpleFieldArgs): Model;\n\n  /**\n   * Add a relational field\n   * @param field options for the relational field.\n   */\n  addRelationalField(\n    field: Omit<\n      PartialBy<RelationalFieldArgs, \"reverseField\" | \"type\">,\n      \"modelApiId\"\n    >\n  ): Model;\n\n  /**\n   * Update a relational field\n   * @param field options for the relational field.\n   */\n  updateRelationalField(field: UpdateRelationalFieldArgs): Model;\n\n  /**\n   * Add a union field\n   * @param field options for the union field.\n   */\n  addUnionField(\n    field: Omit<PartialBy<CreateUnionFieldArgs, \"reverseField\">, \"modelApiId\">\n  ): Model;\n\n  /**\n   * Update a union field.\n   * @param field options for the union field.\n   */\n  updateUnionField(field: Omit<UpdateUnionFieldArgs, \"modelApiId\">): Model;\n\n  /**\n   * Create an enumerable field.\n   * @param field options for the enumerable field.\n   */\n  addEnumerableField(field: CreateEnumerableFieldArgs): Model;\n\n  /**\n   * Update an enumerable field\n   * @param field options for the enumerable field.\n   */\n  updateEnumerableField(field: UpdateEnumerableFieldArgs): Model;\n\n  /* Create an remote field.\n   * @param field options for the remote field.\n   */\n  addRemoteField(field: CreateRemoteFieldArgs): Model;\n\n  /**\n   * Update a remote field\n   * @param field options for the remote field.\n   */\n  updateRemoteField(field: UpdateRemoteFieldArgs): Model;\n\n  /**\n   * Delete a field\n   * @param apiId the apiId of the field to delete.\n   */\n  deleteField(apiId: string): void;\n}\n\n/**\n * @ignore\n */\nclass ModelClass implements Model, ChangeItem {\n  constructor(\n    private listener: ChangeListener,\n    private mode: MutationMode,\n    private args: ModelArgs\n  ) {}\n\n  addSimpleField(passedFieldArgs: any): Model {\n    const fieldArgs = { ...passedFieldArgs };\n    fieldArgs.modelApiId = this.args.apiId;\n    if (fieldArgs.type === GraphQLSimpleFieldType.String) {\n      fieldArgs.formRenderer = fieldArgs.formRenderer || Renderer.SingleLine;\n    }\n\n    if (fieldArgs.validations) {\n      fieldArgs.validations = extractFieldValidations(fieldArgs);\n    }\n\n    const field = new Field(fieldArgs, MutationMode.Create);\n    this.listener.registerChange(field);\n    return this;\n  }\n\n  updateSimpleField(passedFieldArgs: any): Model {\n    const fieldArgs = { ...passedFieldArgs };\n    fieldArgs.modelApiId = this.args.apiId;\n\n    if (fieldArgs.validations) {\n      fieldArgs.validations = extractFieldValidations(fieldArgs);\n    }\n\n    const { type, ...fieldChanges } = fieldArgs;\n    const field = new Field(fieldChanges, MutationMode.Update);\n    this.listener.registerChange(field);\n    return this;\n  }\n\n  addRelationalField(passedFieldArgs: any): Model {\n    const fieldArgs = { ...passedFieldArgs };\n    fieldArgs.modelApiId = this.args.apiId;\n\n    const fieldTypeUpper = fieldArgs.type?.toUpperCase();\n    const fieldModelUpper = fieldArgs.model?.toUpperCase();\n\n    if (\n      fieldTypeUpper === GraphQLRelationalFieldType.Asset ||\n      fieldModelUpper === GraphQLRelationalFieldType.Asset\n    ) {\n      fieldArgs.type = GraphQLRelationalFieldType.Asset;\n    } else {\n      fieldArgs.type = GraphQLRelationalFieldType.Relation;\n    }\n\n    if (!fieldArgs.reverseField) {\n      fieldArgs.reverseField = {\n        apiId: `related${fieldArgs.modelApiId}`,\n        displayName: `Related ${fieldArgs.modelApiId}`,\n      };\n    }\n\n    fieldArgs.reverseField.modelApiId = fieldArgs.model;\n\n    fieldArgs.isList =\n      fieldArgs.relationType === RelationType.OneToMany ||\n      fieldArgs.relationType === RelationType.ManyToMany;\n    fieldArgs.reverseField.isList =\n      fieldArgs.relationType === RelationType.ManyToOne ||\n      fieldArgs.relationType === RelationType.ManyToMany;\n\n    if (fieldArgs.type === GraphQLRelationalFieldType.Asset) {\n      // Asset needs the isRequired field\n      if (fieldArgs.isRequired === undefined) {\n        fieldArgs.isRequired = false;\n      }\n      // asset needs reverse field to be list\n      fieldArgs.reverseField.isList = true;\n      // asset needs reverse field to be hidden;\n      fieldArgs.reverseField.isHidden = true;\n    } else {\n      // we have to drop them on relation fields:\n      delete fieldArgs.isRequired;\n    }\n\n    // remove convenience fields\n    delete fieldArgs.model;\n    delete fieldArgs.relationType;\n\n    const field = new Field(\n      fieldArgs,\n      MutationMode.Create,\n      FieldType.RelationalField\n    );\n    this.listener.registerChange(field);\n    return this;\n  }\n\n  addUnionField(passedFieldArgs: any): Model {\n    const fieldArgs = { ...passedFieldArgs };\n    fieldArgs.modelApiId = this.args.apiId;\n    if (!fieldArgs.models || fieldArgs.models.length === 0) {\n      throw new Error(`models cannot be empty`);\n    }\n\n    if (!fieldArgs.reverseField) {\n      fieldArgs.reverseField = {\n        apiId: `related${fieldArgs.modelApiId}`,\n        displayName: `Related ${fieldArgs.modelApiId}`,\n      };\n    }\n    fieldArgs.reverseField.modelApiIds = fieldArgs.models;\n\n    fieldArgs.isList =\n      fieldArgs.relationType === RelationType.OneToMany ||\n      fieldArgs.relationType === RelationType.ManyToMany;\n    fieldArgs.reverseField.isList =\n      fieldArgs.relationType === RelationType.ManyToOne ||\n      fieldArgs.relationType === RelationType.ManyToMany;\n\n    // remove convenience fields\n    delete fieldArgs.models;\n    delete fieldArgs.relationType;\n\n    const field = new Field(\n      fieldArgs,\n      MutationMode.Create,\n      FieldType.UnionField\n    );\n    this.listener.registerChange(field);\n    return this;\n  }\n\n  updateRelationalField(passedFieldArgs: any): Model {\n    const fieldArgs = { ...passedFieldArgs };\n    fieldArgs.modelApiId = this.args.apiId;\n    fieldArgs.reverseField = passedFieldArgs?.reverseField;\n\n    if (\n      fieldArgs.modelApiId?.toUpperCase() ===\n        GraphQLRelationalFieldType.Asset &&\n      fieldArgs.isRequired !== undefined\n    ) {\n      fieldArgs.isRequired = Boolean(fieldArgs.isRequired);\n    }\n\n    const field = new Field(\n      fieldArgs,\n      MutationMode.Update,\n      FieldType.RelationalField\n    );\n    this.listener.registerChange(field);\n    return this;\n  }\n\n  updateUnionField(passedFieldArgs: any): Model {\n    const fieldArgs = { ...passedFieldArgs };\n    fieldArgs.modelApiId = this.args.apiId;\n    fieldArgs.reverseField = {\n      ...passedFieldArgs?.reverseField,\n      modelApiIds: fieldArgs.models,\n    };\n\n    // remove convenience field\n    delete fieldArgs.models;\n\n    const field = new Field(\n      fieldArgs,\n      MutationMode.Update,\n      FieldType.UnionField\n    );\n\n    this.listener.registerChange(field);\n    return this;\n  }\n\n  addEnumerableField(passedFieldArgs: any): Model {\n    const fieldArgs = { ...passedFieldArgs };\n    if (!fieldArgs.enumerationApiId) {\n      throw new Error(\"enumerationApiId is required for enumerable field\");\n    }\n    fieldArgs.modelApiId = this.args.apiId;\n    const field = new Field(\n      fieldArgs,\n      MutationMode.Create,\n      FieldType.EnumerableField\n    );\n    this.listener.registerChange(field);\n    return this;\n  }\n\n  updateEnumerableField(passedFieldArgs: any): Model {\n    const fieldArgs = { ...passedFieldArgs };\n    fieldArgs.modelApiId = this.args.apiId;\n\n    const field = new Field(\n      fieldArgs,\n      MutationMode.Update,\n      FieldType.EnumerableField\n    );\n    this.listener.registerChange(field);\n    return this;\n  }\n\n  addRemoteField(passedFieldArgs: any): Model {\n    const fieldArgs = { ...passedFieldArgs };\n    fieldArgs.parentApiId = this.args.apiId;\n\n    const field = new Field(\n      fieldArgs,\n      MutationMode.Create,\n      FieldType.RemoteField\n    );\n    this.listener.registerChange(field);\n    return this;\n  }\n\n  updateRemoteField(passedFieldArgs: any): Model {\n    const fieldArgs = { ...passedFieldArgs };\n    fieldArgs.parentApiId = this.args.apiId;\n\n    const field = new Field(\n      fieldArgs,\n      MutationMode.Update,\n      FieldType.RemoteField\n    );\n    this.listener.registerChange(field);\n    return this;\n  }\n\n  deleteField(apiId: string): Model {\n    const field = new Field(\n      { apiId, modelApiId: this.args.apiId },\n      MutationMode.Delete\n    );\n    this.listener.registerChange(field);\n    return this;\n  }\n\n  hasChanges(): boolean {\n    // all modes are guaranteed to have changes except Update.\n    if (this.mode !== MutationMode.Update) {\n      return true;\n    }\n    // apiId is always a requirement, length of 1 means its apiId only.\n    return Object.keys(this.args).length > 1;\n  }\n\n  generateChange(): MigrationChange {\n    let action: string;\n    switch (this.mode) {\n      case MutationMode.Create:\n        action = \"createModel\";\n        break;\n      case MutationMode.Update:\n        action = \"updateModel\";\n        break;\n      case MutationMode.Delete:\n        action = \"deleteModel\";\n        break;\n    }\n\n    const change: { [key: string]: any } = {};\n    change[action] = this.args;\n    return change;\n  }\n}\n\n/**\n * @ignore\n * @param fieldArgs\n */\nfunction extractFieldValidations(\n  fieldArgs: CreateSimpleFieldArgs\n): GraphQLSimpleFieldValidationsInput {\n  const validations: GraphQLSimpleFieldValidationsInput = {};\n  switch (fieldArgs.type) {\n    case GraphQLSimpleFieldType.Int:\n      validations.Int = { range: fieldArgs.validations?.range };\n      if (fieldArgs.isList) {\n        validations.Int.listItemCount = fieldArgs.validations?.listItemCount;\n      }\n      break;\n\n    case GraphQLSimpleFieldType.Float:\n      validations.Float = { range: fieldArgs.validations?.range };\n      if (fieldArgs.isList) {\n        validations.Float.listItemCount = fieldArgs.validations?.listItemCount;\n      }\n      break;\n\n    case GraphQLSimpleFieldType.String:\n      validations.String = {\n        characters: fieldArgs.validations?.characters,\n        matches: fieldArgs.validations?.matches,\n        notMatches: fieldArgs.validations?.notMatches,\n      };\n      if (fieldArgs.isList) {\n        validations.String.listItemCount = fieldArgs.validations?.listItemCount;\n      }\n      break;\n\n    default:\n      throw new Error(`field validations not supported for ${fieldArgs.type}`);\n  }\n\n  return validations;\n}\n\nexport { Model, ModelClass };\n","import {\n  GraphQLBatchMigrationCreateEnumerationInput,\n  GraphQLBatchMigrationUpdateEnumerationInput,\n} from \"./generated/schema\";\nimport { MutationMode, PartialBy } from \"./util\";\nimport { ChangeItem, MigrationChange } from \"./migration\";\n\ntype CreateEnumerationArgs = Omit<\n  PartialBy<GraphQLBatchMigrationCreateEnumerationInput, \"values\">,\n  \"displayName\"\n>;\n\ntype UpdateEnumerationArgs = GraphQLBatchMigrationUpdateEnumerationInput;\n\ntype EnumerationArgs = CreateEnumerationArgs | UpdateEnumerationArgs;\n\n/**\n * For adding values to an enumeration.\n */\ninterface EnumerationCreate {\n  /**\n   * Add values to enumeration.\n   * @param apiIds the value(s) for the enumeration.\n   */\n  addValue(...apiIds: string[]): void;\n}\n\n/**\n * For editing values of an enumeration.\n */\ninterface EnumerationUpdate extends EnumerationCreate {\n  /**\n   * Update an existing value.\n   * @param apiId the apiId to update.\n   * @param newApiId the new apiId to set.\n   */\n  updateValue(apiId: string, newApiId: string): EnumerationUpdate;\n\n  /**\n   * Delete values from enumeration.\n   * @param apiIds list of apiIds of values to delete from the enumeration.\n   */\n  deleteValue(...apiIds: string[]): void;\n}\n\n/**\n * @ignore\n */\nclass EnumerationClass\n  implements EnumerationCreate, EnumerationUpdate, ChangeItem {\n  constructor(private mode: MutationMode, private args: EnumerationArgs) {}\n\n  addValue(...apiIds: string[]) {\n    const values = apiIds.map(apiId => {\n      return {\n        apiId,\n        displayName: apiId,\n      };\n    });\n\n    if (this.mode === MutationMode.Update) {\n      const args = this.args as UpdateEnumerationArgs;\n      args.valuesToCreate = args.valuesToCreate || [];\n      args.valuesToCreate.push(...values);\n    } else {\n      const args = this.args as CreateEnumerationArgs;\n      args.values = args.values || [];\n      args.values.push(...values);\n    }\n  }\n\n  updateValue(apiId: string, newApiId: string): EnumerationUpdate {\n    const args = this.args as UpdateEnumerationArgs;\n    args.valuesToUpdate = args.valuesToUpdate || [];\n    args.valuesToUpdate.push({\n      apiId,\n      newApiId,\n      displayName: newApiId || apiId,\n    });\n    return this;\n  }\n\n  deleteValue(...apiIds: string[]) {\n    const args = this.args as UpdateEnumerationArgs;\n    args.valuesToDelete = args.valuesToDelete || [];\n    args.valuesToDelete.push(...apiIds);\n  }\n\n  generateChange(): MigrationChange {\n    if (this.mode === MutationMode.Create) {\n      const args = this.args as CreateEnumerationArgs;\n      if (!args.values || args.values.length === 0) {\n        throw new Error(\"enumeration must have values\");\n      }\n    }\n\n    let action: string;\n\n    switch (this.mode) {\n      case MutationMode.Create:\n        action = `createEnumeration`;\n        break;\n      case MutationMode.Update:\n        action = `updateEnumeration`;\n        break;\n      case MutationMode.Delete:\n        action = `deleteEnumeration`;\n        break;\n    }\n\n    const change: { [key: string]: any } = {};\n    change[action] = this.args;\n    return change;\n  }\n}\n\nexport { EnumerationCreate, EnumerationUpdate, EnumerationClass };\n","import { MutationMode } from \"./util\";\nimport { ChangeItem, MigrationChange } from \"./migration\";\nimport {\n  GraphQLBatchMigrationCreateStageInput,\n  GraphQLBatchMigrationUpdateStageInput,\n} from \"./generated/schema\";\n\ntype StageArgs =\n  | GraphQLBatchMigrationCreateStageInput\n  | GraphQLBatchMigrationUpdateStageInput;\n\ninterface Stage {}\n\n/**\n * @ignore\n */\nclass StageClass implements Stage, ChangeItem {\n  constructor(private mode: MutationMode, private args: StageArgs) {}\n\n  hasChanges(): boolean {\n    // all modes are guaranteed to have changes except Update.\n    if (this.mode !== MutationMode.Update) {\n      return true;\n    }\n    // apiId is always a requirement, length of 1 means its apiId only.\n    if (Object.keys(this.args).length > 1) {\n      return true;\n    }\n    return false;\n  }\n\n  generateChange(): MigrationChange {\n    let action: string;\n    switch (this.mode) {\n      case MutationMode.Create:\n        action = \"createStage\";\n        break;\n      case MutationMode.Update:\n        action = \"updateStage\";\n        break;\n      case MutationMode.Delete:\n        action = \"deleteStage\";\n        break;\n    }\n\n    const change: { [key: string]: any } = {};\n    change[action] = this.args;\n    return change;\n  }\n}\n\nexport { Stage, StageClass };\n","import { MutationMode } from \"./util\";\nimport { ChangeItem, MigrationChange } from \"./migration\";\nimport {\n  GraphQLBatchMigrationCreateLocaleInput,\n  GraphQLBatchMigrationUpdateLocaleInput,\n} from \"./generated/schema\";\n\ntype LocaleArgs =\n  | GraphQLBatchMigrationCreateLocaleInput\n  | GraphQLBatchMigrationUpdateLocaleInput;\n\ninterface Locale {}\n\n/**\n * @ignore\n */\nclass LocaleClass implements Locale, ChangeItem {\n  constructor(private mode: MutationMode, private args: LocaleArgs) {}\n\n  hasChanges(): boolean {\n    // all modes are guaranteed to have changes except Update.\n    if (this.mode !== MutationMode.Update) {\n      return true;\n    }\n    // apiId is always a requirement, length of 1 means its apiId only.\n    if (Object.keys(this.args).length > 1) {\n      return true;\n    }\n    return false;\n  }\n\n  generateChange(): MigrationChange {\n    let action: string;\n    switch (this.mode) {\n      case MutationMode.Create:\n        action = \"createLocale\";\n        break;\n      case MutationMode.Update:\n        action = \"updateLocale\";\n        break;\n      case MutationMode.Delete:\n        action = \"deleteLocale\";\n        break;\n    }\n\n    const change: { [key: string]: any } = {};\n    change[action] = this.args;\n    return change;\n  }\n}\n\nexport { Locale, LocaleClass };\n","import { MutationMode } from \"./util\";\nimport { ChangeItem, MigrationChange } from \"./migration\";\nimport {\n  GraphQLBatchMigrationCreateGraphQlRemoteSourceInput,\n  GraphQLBatchMigrationUpdateGraphQlRemoteSourceInput,\n  GraphQLBatchMigrationCreateRestRemoteSourceInput,\n  GraphQLBatchMigrationUpdateRestRemoteSourceInput,\n} from \"./generated/schema\";\n\ntype RemoteSourceArgs =\n  | GraphQLBatchMigrationCreateGraphQlRemoteSourceInput\n  | GraphQLBatchMigrationUpdateGraphQlRemoteSourceInput\n  | GraphQLBatchMigrationCreateRestRemoteSourceInput\n  | GraphQLBatchMigrationUpdateRestRemoteSourceInput;\n\ninterface RemoteSource {}\n\n/**\n * @ignore\n */\nclass RemoteSourceClass implements RemoteSource, ChangeItem {\n  constructor(\n    private mode: MutationMode,\n    private sourceType: \"GQL\" | \"REST\",\n    private args: RemoteSourceArgs\n  ) {}\n\n  hasChanges(): boolean {\n    // all modes are guaranteed to have changes except Update.\n    if (this.mode !== MutationMode.Update) {\n      return true;\n    }\n    // apiId is always a requirement, length of 1 means its apiId only.\n    if (Object.keys(this.args).length > 1) {\n      return true;\n    }\n    return false;\n  }\n\n  generateChange(): MigrationChange {\n    let action: string;\n    switch (this.mode) {\n      case MutationMode.Create:\n        action =\n          this.sourceType === \"GQL\"\n            ? \"createGraphQLRemoteSource\"\n            : \"createRESTRemoteSource\";\n        break;\n      case MutationMode.Update:\n        action =\n          this.sourceType === \"GQL\"\n            ? \"updateGraphQLRemoteSource\"\n            : \"updateRESTRemoteSource\";\n        break;\n      case MutationMode.Delete:\n        action = \"deleteRemoteSource\";\n        break;\n    }\n\n    const change: { [key: string]: any } = {};\n    change[action] = this.args;\n    return change;\n  }\n}\n\nexport { RemoteSource, RemoteSourceClass };\n","import { GraphQLClient } from \"graphql-request\";\n\nimport { Model, ModelClass } from \"./model\";\nimport {\n  fetchEnvironment,\n  fetchMigration,\n  MutationMode,\n  submitMigration,\n} from \"./util\";\nimport {\n  GraphQLBatchMigrationCreateEnumerationInput,\n  GraphQLBatchMigrationCreateModelInput,\n  GraphQLBatchMigrationUpdateModelInput,\n  GraphQLBatchMigrationCreateStageInput,\n  GraphQLBatchMigrationUpdateStageInput,\n  GraphQLBatchMigrationUpdateEnumerationInput,\n  GraphQLBatchMigrationCreateLocaleInput,\n  GraphQLBatchMigrationUpdateLocaleInput,\n  GraphQLMigrationStatus,\n  GraphQLBatchMigrationCreateGraphQlRemoteSourceInput,\n  GraphQLBatchMigrationCreateRestRemoteSourceInput,\n  GraphQLBatchMigrationUpdateGraphQlRemoteSourceInput,\n  GraphQLBatchMigrationUpdateRestRemoteSourceInput,\n  GraphQLBatchMigrationDeleteRemoteSourceInput,\n} from \"./generated/schema\";\nimport {\n  EnumerationCreate,\n  EnumerationUpdate,\n  EnumerationClass,\n} from \"./enumeration\";\nimport { Stage, StageClass } from \"./stage\";\nimport { Locale, LocaleClass } from \"./locale\";\nimport { RemoteSource, RemoteSourceClass } from \"./remoteSource\";\n\n/**\n * @ignore\n */\nconst endpoint =\n  process.env.GRAPHCMS_GRAPHQL_ENDPOINT ||\n  \"https://management-next.graphcms.com/graphql\";\n\n/**\n * Configuration for a migration.\n */\ninterface MigrationConfig {\n  /**\n   * URL endpoint for the environment.\n   * From `Settings > Environments` on https://app.graphcms.com.\n   */\n  endpoint: string;\n  /**\n   * Authentication Token.\n   * From `Settings > API Access` on https://app.graphcms.com.\n   */\n  authToken: string;\n  /**\n   * Name for the migration. This must be unique to this migration.\n   */\n  name?: string;\n}\n\ninterface MigrationChange {\n  [key: string]: any;\n}\n\ninterface EnvironmentInfo {\n  id: string;\n  name: string;\n  endpoint: string;\n  projectId: string;\n}\n\n/**\n * Information about a migration.\n */\ninterface MigrationInfo {\n  id: string;\n  name?: string;\n  status?: string;\n  errors?: string;\n  createdAt?: string;\n  finishedAt?: string;\n}\n\n/**\n * GraphCMS Migration.\n */\ninterface Migration {\n  /**\n   * Run the migration\n   * @param foreground configures if the migration should run in the foreground.\n   * By default, the migration is only scheduled. To wait for the migration to run,\n   * set `foreground` to `true`.\n   */\n  run(foreground?: boolean): Promise<MigrationInfo>;\n\n  /**\n   * Dry run the migration. This returns the changes to be applied without running\n   * the migration.\n   */\n  dryRun(): any;\n\n  /**\n   * Fetch an existing model\n   * @param apiId the `apiId` for the model.\n   */\n  model(apiId: string): Model;\n\n  /**\n   * Create a new model\n   * @param args options for the new model.\n   */\n  createModel(args: GraphQLBatchMigrationCreateModelInput): Model;\n\n  /**\n   * Update an existing model\n   * @param args options for model update.\n   */\n  updateModel(args: GraphQLBatchMigrationUpdateModelInput): Model;\n\n  /**\n   * Delete a model\n   * @param apiId the `apiId` of the model to delete.\n   */\n  deleteModel(apiId: string): void;\n\n  /**\n   * Create a new GraphQL remote source\n   * @param args options for the new remote source.\n   */\n  createGraphQLRemoteSource(\n    args: GraphQLBatchMigrationCreateGraphQlRemoteSourceInput\n  ): RemoteSource;\n\n  /**\n   * Updates an existing GraphQL remote source\n   * @param args options for the new remote source.\n   */\n  updateGraphQLRemoteSource(\n    args: GraphQLBatchMigrationUpdateGraphQlRemoteSourceInput\n  ): RemoteSource;\n\n  /**\n   * Create a new REST remote source\n   * @param args options for the new remote source.\n   */\n  createRESTRemoteSource(\n    args: GraphQLBatchMigrationCreateRestRemoteSourceInput\n  ): RemoteSource;\n\n  /**\n   * Updates an existing REST remote source\n   * @param args options for the new remote source.\n   */\n  updateRESTRemoteSource(\n    args: GraphQLBatchMigrationUpdateRestRemoteSourceInput\n  ): RemoteSource;\n\n  deleteRemoteSource(args: GraphQLBatchMigrationDeleteRemoteSourceInput): void;\n  /**\n   * Create a new enumeration\n   * @param args options for the new enumeration.\n   */\n  createEnumeration(\n    args: GraphQLBatchMigrationCreateEnumerationInput\n  ): EnumerationCreate;\n\n  /**\n   * Create a new enumeration\n   * @param args options for the new enumeration.\n   */\n  updateEnumeration(\n    args: GraphQLBatchMigrationUpdateEnumerationInput\n  ): EnumerationUpdate;\n\n  /**\n   * Delete an enumeration\n   * @param apiId apiId of the enumeration to delete.\n   */\n  deleteEnumeration(apiId: string): void;\n\n  /**\n   * Create a new stage\n   * @param args options for the new stage.\n   */\n  createStage(args: GraphQLBatchMigrationCreateStageInput): Stage;\n\n  /**\n   * Update an existing stage\n   * @param args options for stage update.\n   */\n  updateStage(args: GraphQLBatchMigrationUpdateStageInput): Stage;\n\n  /**\n   * Delete a stage\n   * @param apiId the `apiId` of the stage to delete.\n   */\n  deleteStage(apiId: string): void;\n\n  /**\n   * Create a new locale\n   * @param args options for the new locale.\n   */\n  createLocale(args: GraphQLBatchMigrationCreateLocaleInput): Locale;\n\n  /**\n   * Update an existing locale\n   * @param args options for locale update.\n   */\n  updateLocale(args: GraphQLBatchMigrationUpdateLocaleInput): Locale;\n\n  /**\n   * Delete a locale\n   * @param apiId the `apiId` of the locale to delete.\n   */\n  deleteLocale(apiId: string): void;\n}\n\n/**\n * @ignore\n */\ninterface ChangeListener {\n  registerChange(item: ChangeItem): void;\n}\n\n/**\n * @ignore\n */\ninterface ChangeItem {\n  generateChange(): MigrationChange;\n}\n\n/**\n * @ignore\n */\nclass MigrationClass implements Migration, ChangeListener {\n  changeItems: ChangeItem[] = [];\n  config: MigrationConfig;\n  client!: GraphQLClient;\n  environment!: EnvironmentInfo;\n  migrated: boolean = false;\n\n  constructor(config: MigrationConfig) {\n    this.config = config;\n  }\n\n  private async prepare(): Promise<void> {\n    this.client = new GraphQLClient(endpoint, {\n      headers: {\n        authorization: `Bearer ${this.config.authToken}`,\n        \"apollographql-client-name\": \"management-sdk\",\n      },\n    });\n    this.environment = await fetchEnvironment(\n      this.client,\n      this.config.endpoint\n    );\n  }\n\n  model(apiId: string): Model {\n    const model = new ModelClass(this, MutationMode.Update, { apiId });\n    return model;\n  }\n\n  createModel(args: any): Model {\n    const model = new ModelClass(this, MutationMode.Create, args);\n    this.registerChange(model);\n    return model;\n  }\n\n  updateModel(args: any): Model {\n    const model = new ModelClass(this, MutationMode.Update, args);\n    this.registerChange(model);\n    return model;\n  }\n\n  deleteModel(apiId: string) {\n    const model = new ModelClass(this, MutationMode.Delete, { apiId });\n    this.registerChange(model);\n    return model;\n  }\n\n  createGraphQLRemoteSource(args: any): RemoteSource {\n    const remoteSource = new RemoteSourceClass(\n      MutationMode.Create,\n      \"GQL\",\n      args\n    );\n    this.registerChange(remoteSource);\n    return remoteSource;\n  }\n\n  updateGraphQLRemoteSource(args: any): RemoteSource {\n    const remoteSource = new RemoteSourceClass(\n      MutationMode.Update,\n      \"GQL\",\n      args\n    );\n    this.registerChange(remoteSource);\n    return remoteSource;\n  }\n\n  createRESTRemoteSource(args: any): RemoteSource {\n    const remoteSource = new RemoteSourceClass(\n      MutationMode.Create,\n      \"REST\",\n      args\n    );\n    this.registerChange(remoteSource);\n    return remoteSource;\n  }\n\n  updateRESTRemoteSource(args: any): RemoteSource {\n    const remoteSource = new RemoteSourceClass(\n      MutationMode.Update,\n      \"REST\",\n      args\n    );\n    this.registerChange(remoteSource);\n    return remoteSource;\n  }\n\n  deleteRemoteSource(args: any): RemoteSource {\n    const remoteSource = new RemoteSourceClass(\n      MutationMode.Delete,\n      \"REST\",\n      args\n    );\n    this.registerChange(remoteSource);\n    return remoteSource;\n  }\n\n  createEnumeration(args: any): EnumerationCreate {\n    const enumeration = new EnumerationClass(MutationMode.Create, args);\n    this.registerChange(enumeration);\n    return enumeration;\n  }\n\n  updateEnumeration(args: any): EnumerationUpdate {\n    const enumeration = new EnumerationClass(MutationMode.Update, args);\n    this.registerChange(enumeration);\n    return enumeration;\n  }\n\n  deleteEnumeration(apiId: string) {\n    const enumeration = new EnumerationClass(MutationMode.Delete, { apiId });\n    this.registerChange(enumeration);\n  }\n\n  createStage(args: any) {\n    const stage = new StageClass(MutationMode.Create, args);\n    this.registerChange(stage);\n    return stage;\n  }\n\n  updateStage(args: any) {\n    const stage = new StageClass(MutationMode.Update, args);\n    this.registerChange(stage);\n    return stage;\n  }\n\n  deleteStage(apiId: string) {\n    const stage = new StageClass(MutationMode.Delete, { apiId });\n    this.registerChange(stage);\n    return stage;\n  }\n\n  createLocale(args: any) {\n    const locale = new LocaleClass(MutationMode.Create, args);\n    this.registerChange(locale);\n    return locale;\n  }\n\n  updateLocale(args: any) {\n    const locale = new LocaleClass(MutationMode.Update, args);\n    this.registerChange(locale);\n    return locale;\n  }\n\n  deleteLocale(apiId: string) {\n    const locale = new LocaleClass(MutationMode.Delete, { apiId });\n    this.registerChange(locale);\n    return locale;\n  }\n\n  async run(foreground?: boolean): Promise<MigrationInfo> {\n    if (this.migrated) {\n      return Promise.reject(\"migration previously done\");\n    }\n    await this.prepare();\n\n    const changes = this.generateChanges();\n    const resp = await submitMigration(this.client, {\n      environmentId: this.environment.id,\n      name: this.config.name,\n      changes,\n    });\n\n    this.migrated = true;\n\n    if (foreground) {\n      try {\n        const migration = await this.waitForMigration(resp.id);\n        if (migration.errors) {\n          return migration;\n        }\n        // only include name for successful migrations.\n        return {\n          name: resp.name,\n          ...migration,\n        };\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }\n    return resp;\n  }\n\n  dryRun(): any {\n    return this.generateChanges();\n  }\n\n  private async waitForMigration(migrationId: string): Promise<MigrationInfo> {\n    while (true) {\n      try {\n        await new Promise(resolve => setTimeout(resolve, 1000));\n\n        const migration = await fetchMigration(this.client, {\n          projectId: this.environment.projectId,\n          environmentName: this.environment.name,\n          migrationId,\n        });\n        if (\n          migration.status !== GraphQLMigrationStatus.Queued &&\n          migration.status !== GraphQLMigrationStatus.Running\n        ) {\n          return migration;\n        }\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }\n  }\n\n  private generateChanges(): MigrationChange[] {\n    const changes: MigrationChange[] = [];\n    for (const item of this.changeItems) {\n      changes.push(item.generateChange());\n    }\n    return changes;\n  }\n\n  registerChange(change: ChangeItem) {\n    this.changeItems.push(change);\n  }\n}\n\n/**\n * Create a new migration.\n * @param config the configuration for the migration.\n */\nfunction newMigration(config: MigrationConfig): Migration {\n  return new MigrationClass(config);\n}\n\nexport {\n  EnvironmentInfo,\n  newMigration,\n  MigrationInfo,\n  MigrationChange,\n  MigrationConfig,\n  ChangeListener,\n  ChangeItem,\n};\n","import { newMigration } from \"./migration\";\nimport { Renderer } from \"./renderer\";\nimport { RelationType } from \"./util\";\nimport {\n  GraphQLGraphQlRemoteSourceIntrospectionMethod,\n  GraphQLRemoteFieldApiMethod,\n  GraphQLRemoteFieldType,\n  GraphQLSimpleFieldType,\n  GraphQLVisibilityTypes,\n} from \"./generated/schema\";\n/**\n * Field types.\n */\nimport FieldType = GraphQLSimpleFieldType;\n\nimport RemoteFieldType = GraphQLRemoteFieldType;\n\nimport VisibilityTypes = GraphQLVisibilityTypes;\n\nimport RemoteSourceIntrospectionMethod = GraphQLGraphQlRemoteSourceIntrospectionMethod;\nimport RemoteFieldApiMethod = GraphQLRemoteFieldApiMethod;\n\nexport {\n  newMigration,\n  FieldType,\n  Renderer,\n  RelationType,\n  VisibilityTypes,\n  RemoteSourceIntrospectionMethod,\n  RemoteFieldType,\n  RemoteFieldApiMethod,\n};\n"],"names":["undefined","MutationMode","RelationType","fetchEnvironment","client","endpoint","contentAPIEndpoint","replace","query","notFound","request","res","project","viewer","projects","Promise","reject","p","environments","environment","projectId","id","Error","submitMigration","body","mutationArgs","bodyArgs","join","variables","changes","environmentId","name","nanoid","migration","submitBatchChanges","errors","status","fetchMigration","args","migrationId","environmentName","FieldType","Field","mode","type","SimpleField","generateChange","action","typeStr","Create","Update","Delete","change","Renderer","GraphQLCacheControlScope","GraphQLContentViewType","GraphQLColumnOrderByDir","GraphQLLimitType","GraphQLPermanentAuthTokenAudience","GraphQLPermissionAction","GraphQLAuditLogOrderByInput","GraphQLAuditLogResource","GraphQLAuditLogAction","GraphQLAuditLogTriggerType","GraphQLLifecycleStepType","GraphQLContentPermissionTargetKind","GraphQLMigrationStatus","GraphQLRemote_Graphql_Type","GraphQLIntegration_Provider","GraphQLColorPalette","GraphQLTrackEvent","GraphQLProfileJobRole","GraphQLViewGroupType","GraphQLViewGroupContentType","GraphQLWebhookTriggerSource","GraphQLWebhookLogOrderByInput","GraphQLWebhookTriggerType","GraphQLWebhookTriggerAction","GraphQLAvailableExtensionSrcType","GraphQLAvailableExtensionPermissionAction","GraphQLExtensionFieldType","GraphQLAppPublicationStatus","GraphQLAppElementType","GraphQLFieldAppElementFeature","GraphQLAppInstallationStatus","GraphQLSimpleFieldType","GraphQLRemoteFieldType","GraphQLRemoteFieldApiMethod","GraphQLGraphQlRemoteSourceIntrospectionMethod","GraphQLEnumerableFieldType","GraphQLRelationalFieldType","GraphQLComponentFieldType","GraphQLUnionFieldType","GraphQLComponentUnionFieldType","GraphQLVisibilityTypes","GraphQLSystemSidebarElementType","GraphQLRemoteSourceType","GraphQLMigrationOperationType","GraphQLNetlifyBuildState","GraphQLVercelBuildState","ModelClass","listener","addSimpleField","passedFieldArgs","fieldArgs","modelApiId","apiId","String","formRenderer","SingleLine","validations","extractFieldValidations","field","registerChange","updateSimpleField","fieldChanges","addRelationalField","fieldTypeUpper","toUpperCase","fieldModelUpper","model","Asset","Relation","reverseField","displayName","isList","relationType","OneToMany","ManyToMany","ManyToOne","isRequired","isHidden","RelationalField","addUnionField","models","length","modelApiIds","UnionField","updateRelationalField","Boolean","updateUnionField","addEnumerableField","enumerationApiId","EnumerableField","updateEnumerableField","addRemoteField","parentApiId","RemoteField","updateRemoteField","deleteField","hasChanges","Object","keys","Int","range","listItemCount","Float","characters","matches","notMatches","EnumerationClass","addValue","apiIds","values","map","valuesToCreate","push","updateValue","newApiId","valuesToUpdate","deleteValue","valuesToDelete","StageClass","LocaleClass","RemoteSourceClass","sourceType","process","env","GRAPHCMS_GRAPHQL_ENDPOINT","MigrationClass","config","prepare","GraphQLClient","headers","authorization","authToken","createModel","updateModel","deleteModel","createGraphQLRemoteSource","remoteSource","updateGraphQLRemoteSource","createRESTRemoteSource","updateRESTRemoteSource","deleteRemoteSource","createEnumeration","enumeration","updateEnumeration","deleteEnumeration","createStage","stage","updateStage","deleteStage","createLocale","locale","updateLocale","deleteLocale","run","foreground","migrated","generateChanges","resp","waitForMigration","dryRun","resolve","setTimeout","Queued","Running","changeItems","item","newMigration","RemoteFieldType","VisibilityTypes","RemoteSourceIntrospectionMethod","RemoteFieldApiMethod"],"mappings":"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"}